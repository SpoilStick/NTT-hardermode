// { Sprites
global.gatorbossidle = sprite_add_base64("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", 15, 16,16)
global.gatorbosswalk = sprite_add_base64("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", 6, 18,18)
global.gatorbosshurt = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAHIAAAAmCAYAAAAYws+cAAAAB3RJTUUH4QQVEQImflRN0gAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QASABvAKgKRg8wAAACwElEQVR4nO2YMU7EQAxFI622o0JUVHALGpAQF6GhQKKl4Qw0FJyAA9DS0XIAJO7AGZAWOciS13gynsmMx4km0tey2azw/PfH62S4uHkaupav5gV0dZBdHeT61LyAqosbht2UWtfnDuQucrQCuD0/GXVwd/lPcL4VzBoBqwqwBUwKMASRynJ31gyYCUQroKkQLXdn7YCZQqwJM2SUxrjN6WFVkBYBM4doDZLCCkGku2CpAWsCsiRMOiTAwsEchEOPGEg4aky0VgEzBzgXKDcbXr8/jkdRkNJBzUFT+bW3m00RkKGA8Qk1BlI70arAeQMJZqPhoJ+zP1HTQiARYAgkN7t0wGi9tGYpYCC8JhYw8x0YOlIMQ4Ng0S/b7bhYeKUtjMOk5qCouQgRBKZ9PR6NUv9GKQMWAikFDK/Fa6YC5gZkDCZdBIIEeNKkF9Pb88M/0VbHgZQOGIcyFTD6+VTAXADUgkRzwRwUAoS/0UgJKBgBwD7fX/eE5xAoPa8aMpwEzA1IbesKjfJgHiQVQWJ7wms5QK7766s9kPBeC9JDwBYFkhoSSjv9vaEwJbNC5qXuSA8BWxRINARNwIGBj+3UUISL4gmfkhakh4AtBiSaRs3hBlLDpBbGxe/RtPdsHgPmYmLVGEaNQ1NwguOwpCcoEky+QzjklJpaByxYnFeQaBw3LwaSQ+Xncnajp4BNFucRIocp3X/FHkhLD69z4HkKWLQ4T/CkHcBBcuO0raxETS0DZg6ylFESyFzltlNPAVvMjuTwYiCl0T/0vnR7bREwU4BzYOYYpAHJP8uFqe0UtQJmDnAuTA1QyQgt+FSQOW2+RsAWBVJKP1cIZOw7uYNPCsSaAWvSVueC1EBOSnOBe0hNWGoGLNuwHDgWIEPG1vpfXgI2qzirXbYW1QxY88V1dZBdHeT61LyArg6yq4Ncn34BXCOo6EPPOLgAAAAASUVORK5CYII=", 3, 18,18)
global.gatorbossdead = sprite_add_base64("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", 6, 18,18)
global.gatorbosscharge = sprite_add_base64("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",7,40,16)
global.gatorbosschargehurt = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAPAAAAAgCAYAAAAsa/W9AAAAB3RJTUUH4QsSCjgN+LWJEgAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QASABvAKgKRg8wAAAE1ElEQVR4nO2bMY7UQBBFV1ptRoSIiOAWJCAhLkJCgERKwhlICDgBByAlI+UASNyBM6y00AMf/flUd9vt7q62p0sqzdqescd//nNVt71Xz159uJo5c+Y+0/0LxPIuE97fb/T8HXep9P5+o+de9HP/Apo5cCfImR/0r8HuvXl+SivC+tGMOEpCl5unj/5paOUo+rkcNAbhWngvFeJYNciBa8UIJhxJvxy4nOG93vp1PVgKwFJ4LwliNt3Pbw9PCQOVwBsC1cT73EbQbw28o0Dc5SBb4VwS3uboaTw1YCm8iKMDzPq9vr4+vd4++ZPcMpcA7H0B7HKQyqxmw9swLQwIYAEplgHgFoCxj1HGdS31A6Sfbm5OAAPALQDzmLi3fl0OUoXKFeFtmJYGBLQcaOUY4jVAw4DcUh4pWT9Aq23w9eP7ZxqWjIV/vH8wAa4V3qapbcBgFAWYqzIMF14ZTF62AtsZ4KNBjArLVZf1ZIDDq4KdghfbuT3vqV/zA7TBc3l4m6eG+awWWYHWahAyBMDmzyGwjY/Bnz8CyLHbQmFZL4BI1iNVmbGNjxHW9dSv6c47MZoMbwNtNR+bTEHUlpmB5GCI9f1cgbUy7R1gtLWh8loAK5gMJCa5uMpaAIfEZBj2GSpxr3a66c57AJoLbxNtNWAM4BBWZbUmVbTCaKXRKn80gANguTGtwsy6AG5N1W/XAFvgNGZzUXibaGnyJFVIGJCNpe/h0LEvV4nvXz+bqQa00luXUv1wAUJV5ZaZq2sMYGT4/JeP7850C8shR9CvGcAjhLepthoQJgxGCoazAEbl1TYZGYM3BfUeq29KP7S5DHBoq63JKAU4pRVA5mWezOpx3hPgQTJmQH7YwKocOp4Lgb9zsFqV5WgAo5Vl/VgvrrRYh79z+r19+eJMw7A8Aa4Y3qaqYUA2Iqd1H1LbwbXVV9tqb01K9ONI6ahtMg9XALBe4EbUr+rOnDg1w9tQNUyYgxjVRCehuLJom7fUgN5abNVOw9Ix6MeTUQp1SK2yo+lXdWc9wFwT3qaqaUJuqWFAnQG1bjOlZp1jiVlsbz1K9EsF4NXWGuNka2iSmnWOZc9/cDgkuAhvQ7XQzzKfjoGtSG3j6s3rvHVp4T39JxDAm3viKnUbSn+DnhfACfAAufa82IA8GVMCMMym248CcOy2G8NrPQu9FGBUW90+Aa4U3gZroZ/VOsdMZj3AEaseeitqDxDntFoKsPXcs46HrccquYLz9l5t9AR4gFx7Tlb7XJpafff2JFZOKwtgq30uTesiinvOuwF4ZKi9DVZbvyXwpiqwrleA+YmlPQBc4r0cvKqZtT4GcFgXHhLZ3aOUW0VtEd5GqvpDEbAxePWhjiWttRpwr/eBl+jH0MXAjQEcg1rb8F3fB47lBHe7+SzoYuPf1Dbd7vH8rod+FnQ6/o1V3Fj1jd2a63purQ8wod1uPmvSKTVJtTR7z5h66adjfgvWkuR9up1f6wP0AvioEFsGTLXDa9LjtoeHftakU6wdXpP6u7icX+sDtATxUgBOgWeBu2bf3Ep7n2sv/RTeLfpxK+1yfr0PWLtyHh3g/34wmczaahzs76gAW+erFbfG/i4S4Jr78zZGtx+s8mTJUSeuLkU/d0FnzpxZnu5fYObMmeX5C9Mkam9S0yJ7AAAAAElFTkSuQmCC",3,40,16)
global.gatorbosspunch = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAyAAAAAgCAYAAADqmBz1AAAAB3RJTUUH4QsSCioNgEH5wQAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QASABvAKgKRg8wAAAOHUlEQVR4nO2dPa5kSRGFW2q1h4WwxoJd4DASYiPjYCDh4rAGHAxWwAJwx8NlAUizh1nDSI2yRWhOH0VERub9yb8oKdTvVd2qd/O7kRnnZOat/vDtH//+ISMjIyMjIyMjIyMj440YfgJNJ/vhw2crRp9bRkZGRkbGbuHV3ay/17glu4yTY/gJhE7y/x310+9+/SV+8efffxXluezMdX45ACbD5LdmJL/kN4qZVXez/ta5WcySXZxj9tl92Q0/gQjESEfGzjz6vGcJ4VfjNltSzhSRIpxFJPklvzkj+dlMasfUjIfF8GSWPcbjJF4tTCX/LJ7JrY/dTOPdcGAeyOjgx0k5+tzfSrLaMb3sThgUnyjCnH89BeaHv/3qc4nRfFblt0okv+Q3ilsZX/756ZM53pd/P/7ml2Fu+P7y2T/+55tteEVYlpD2e9w4n07jFWUqDCN9Nyedv2YX5TYLu+HAeODTHJw3c8Wvjwb6BjMc9JAbHtNiPJCjfFYZFHcdGL0ijMe0ipcycJboLTA//fbnazua0Qh+pwia5Jf8RrIr3ISdBD8XMSA41pVjy/uR1y7MIiyFXWHiccKaexovjyPmoWgPqae1PDyVGzNsMR+z8BsODYVuASe/swGxAjv0LK7uaWY868K/cwJGZhGEuzyHv7NR5JBjR7NpYcgF1yrAmFcRA4L5qxUYLzeLASkxms9IficImuSX/EaywzZqgqX8rglpfF2OwTpReJXxiye0Rrf5SY6aQGZdotVXjRdem125ebkoTKTPYb9EzlpfPoGXx7HXfIxmNwU4hKEZEMuUcOeXn3dORq2A8GDXWniRsXR8bcDUBsYygK5oQCyGWIBZxEQKMg6eVkFevcg8yS8iaFbllvyS30zMWgSLNvnH450lwldl5jGMiD58XTiVfLKO/ct3f/j8/T/++iX+++9/bcPN48k6QyYSmFPN5O3OqpaLPBa29u1R7IZCiwBCYcwDYPkMmTXmfYO7JWR04Gs1H5oJqV0LPBectefnRzPrZeh1YO19WJC1wROvBXJeLT97i2/ttRZBwyZuNJPkNzc/S7ycxK+cp2xZK6G13zMQGDwbXRvvVmXWwtFqN7ISTpYBKYGMigEREzK63U/ylFpYuEY0ijDlPik/78xLmEmgjpA845VLbyUTXx/VP4clnLXdp5Z8+K9mQqTjykzCDgkpA59Ej3C2jo0cx9fJWhnhTiHXZQYzEikeXgGtDYiRWVYp2GzktHOdrVi/xa8maJjfaC7Jb25+tWNO4OexswS0Z0CkDnliGt+/IrPeHGQDIqxa68JO+sViybkUqaGo9UrgqlF5fmdeEn/6+PErfYWTMtr9RmhCOD9Rv+F9xa+1622IuJqhiVoUrS0hg4EYEDYhswm6Vm4RA6LNzHudGdlHDaH3mswelpCHLDuPNiFa8bA4tTD0CjJeLyzGfByvDFrFWm5Sn42fx+wKv10EYPJLfqNDWzmyBLTHDHkVFjVeKzOLcrRy7YoBWV2z1BhiXaytDOF9IcinmA/Ue6L5dmSnaWfUEjgxz5Py2v0zOPkiJkaMzZvcXvkjnnFAwYoCl4Ws9sDX8TMxISVJV59NqG09iCyr8/HCGL/JQws0P/gZ2nVk84GPGUwIMrQKbgtDqyCX1zQDYn0uDsbWCsnob8nS+GntuYNfCY2fzILJz1ysZy4+b/OzPpP5jebyBL+akD6NH27TEANn3UNZMyDWqq833q3ITMs95Fgb15FV77g2ut1PsdTyxAo2IMJU7pVBrYfP7cQPDYi1Qot9mldCePcQf2Mnvv/NGvo4OBSvEihW5bk7H2xCVk9IThIewLQZrUjnluM1o2FdL7lmYjzkdc1wsFkcaUC4eHgzqa0CEAsy/m4Vaq944WyQPCd5O4MB0fhdFYAapxYDh9dLm0Uc3X9H8KsJQvw7sxu3Hn69/fcqv9GMPG5otqTtPdy0G/y9/roiM40hGtWIAWFWJ3CKshQ9EzEgVn/FG/ZPMCAy7qEBwR0plh6UEF7aziCMshLy1nas2z+Q9/1bYhaFa+8Dha+2GiIrH6smpLbqoW3Fwm+OaA3PaFirGmhA8HXteuJnjDAgyJCLcGHWW4TxmnBB1gyhhMXf+htsQEaZOE3EaPyiDC1+PQYOzRsvU8/S59/iFxE6Fr+ZDcns/FZgx23Sxr6I8dX6qMZwZWYawysG5C5OozncyZM1TasBQROixS68vJVf0W2cfzi28UoR6mI2ceXnpQyIiFH5GffT8nPRlY7WLVja8XhzzswDWy3x2Gxo5sPa1sbssTPzsmbLwzMglgmRazKKoYiVSBGOihevsFgmxDIg2rEziGg2cFF+zOUufto1QgNirR6tzg+P8/hFhM5KBq6XX2//vYvfDOyEH7aX214TfRF+PEm2OjMvB5FjhJ/Gfic2d+Ql6xOrFjJDyb+y8oGxqt7zWGlbr5gTr7SV0HYCedvWkN9WBiT6aBHEnvAdfb/BXYmnCVS8P8MStLjKhIZEE8GWgbGuA95YHt2CNeqaaAaExYc38LFpk6gVZKsol6itgOCM1+jBtIWfZTjwNa8AR/lZhVsToqMLUQs/5KTxs9rcKgg9AzejAenJv5r5fZrfDOyYn2a6rH7jiWmtD+JYtTqzGsOogUMGnglZmc0VphoPa0z3xnmsGTsx8vJPu3Eft7UJW231w1oNwRWQtzhe/oCIAZGOpG31ufKorYCMTpzWQIGLySff8sWGwzMgbCRwIPO2Y2nvwetmGRDtes5yPaRjWnseteVNLrhs/LziXPtb0rkjx0jw9X2TnSVgsK04++IVioi4ifDTipb1/pF9OsIPi4bGpmWmtSYIVzZwFj/8XTMVNXZ385uFncYPQ+uzXh+OhjeursAsytBaffPCW11bkc0VpoUB6hWNF+sLz4CMbtPTvCQ/8MuDMG94rMJc461WXixtQEQkRQwIC9urBgTF7ooGBI0FP3+XAcHZdr5e3v0hyDxiWvAx2nxIWEWBv73KKiSeAdGK8BO58ab5QIaeyK8J2Z7tHjV+LeZtdHirOZ4YFMHSKwI9VjUDh9d3Zn6e8W0xIHfzm4Udnr8lTmqrIq0h7Wd2KzGrMbRW11oYaau9K7K5whTvq2FGmoY52YBIzvGuGGm/NaHA/btWO9/MtcsfEDEg0RudWfBq77OMyCyz7VeCjZMkAt7PEjUgGjve6iPXydvSxQ82jNrX9vJnjOqwNXHsFYcrBXjHwZB5RvneIQB3CI1fREQ/xW+WAnSFX23V7YqY3skAa+d8t+GNsFuRWQvD3rqxWl+8m6dlfPH/RuF7RFBcn8DIMsC4miava3pGOx77PJuZZQwIBm/BKo0oDdREcS3QgLRs2Vp19UNLNkkQWZ5kYY+vW9up+Jp4YX0VLw4CMivBvPG5GRjWZpyjxaHHwJw2GFpF2LrnI/n9zI+LBrPqEYSn8Htj9WPHwNrSa0C8Pr07P2EYGd8sQWgdewI7ZIjiOFor8D27mw/hJDtPeNKKawdrx0je4Xj6dh9+DFjLgK/dAG09alt9VjUfXuK8Fd5X+VrnPZsBiZiPViOiLWt677/SeUfd63GFs8WkJhAthrsXFOGHNzwzlxrDFID1GejaPUcn8vNqTMS01cbN3QUhTyC01tha3TiFHfKzZvWj2wRP4IZfxOFtl8TtWJExTxtDRc+9wfQRWL0CuCVaRPLsMdp47NSRUdhps6VXVkNqBeSOGawVDUiNpzZTc2oRRn4RE8eF43QBiPx6DMjp/DzhXJuFjs707zKTr22F6qkZEX67sfNyr5Zj2iz/03V35tB0TPmXv7EQ+TBr68tPeDwor8tOmOUMSFSUaMCiwg/fu0vSzWJAMHlHM7nCUjt/z4TcWURwsBjN4km+LQYkwm9HAVPjFzUgyU/nhwbEqjOemTuJX2TmPir4onm5OkNtjMsafB9PL5cisTsvjZ8wxJvR+b4ONBbWCpK8xrpo6XtAIuKEHVmr+EPnNjoh7mIW7XxvDX67deirormn+O6Uo8gQ997euap0Sg5G+Vk5dZIA7OVncTmVH3O7u554pm5lhk+wOrUGa0w9tpZePNGAsHbRdnVoJoL5aUy1Vb5X2/Y0NCtq32DiJeVOySYGpMf131E4uEDj7ztwxuKrdcwoW4sVfu6ORYSFnzaTciVXa0Uo+Z0rAHv59YyDO/Pj8a/3yyE0PjuPf3esgNTGN+0+sF34tXCV9mvP8xigXY8dOWmsMF8i+toyINhvh7ZvBNCemVMEPjopnkqwlhWknoJhJasmrnfo1N4yZKsR0a6R1ul5ZW9lhthXLYY1EW0VC4/fLgU4wu8udskv+Wn8WHBcMW7R8W8Xfj0Mtddrk7HepOzq/DyuWv/l/o3tt+rNroywzbXaa03QeDEDvyFAe4Xf6GR4iodmrO4yI9bna39rt8FPmz3gZceogI6YXy5WqzP0CoRnZHsZsmE8gV+LgYvmX/K71n9359ead6fykzZZItAShlq0XK+d+EXabHH0jt9dF3L+cR56fbvF7I5mOARo66C3e5JpjCwT0cKslZu8ZwcDYrFiLtEOG/2bvL1hVYZRflr+9DI8kR8Xll7xdzK/O9idxo+F3x31dyd+zDBiMq62dTd+PW2uCeI7ea8YlhbkvIwwF+7HGZA7Rd+OgSaAO+XTzHbhrxWPN9qEg8PKBcQa4JLfM/zu6tMn8rtzPDyJ3xO1ZBd+GsM36uJO/HoZjz6nVQKNRE+deKumu+cxGmKGclHSjC3NcIdrl/ySX/JLfqfyG9mOXfj1tHX39j7F7s333tqG0RAzMjIyMjIyMjIyMs6J4SeQkZGRkZGRkZGRkXFO/A9Bp3ZDOUc7tgAAAABJRU5ErkJggg==",10,40,16)
global.punch = sprite_add_base64(
"iVBORw0KGgoAAAANSUhEUgAAAEAAAAAgCAYAAACinX6EAAAAB3RJTUUH4QcdAw4qRuFr1AAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QASABvAKgKRg8wAAABiUlEQVR4nOWYsW7CMBCGDTwFD9GdIerATMc+AUWM7N3LnhGpHTtUHcvclQfgCXgPUIojHFlJnN5dzr4DfukfUBw799ncnWweF7m5Zw+NYi2334X1735VmX0R6R0I+XOcFdbHiSldvM0rc64jHig4eF/n325MyO7duq8OQCP4i9qCC431wdUhiAeL3v0uABDVIKhOgqVe30HDRk9z0nwkAH5WjpqhEwgFwAU62hWmzX1B2JJHfZcqMAA/8JB8ENgPkQi+FCQxgRNMLUlRkl8jCXbMz5EEowRPgcACIEYZ1AwgeiPUJ3gsBKkToL8PwOi/nuH83PYLfpK+GQBJG6GkWr9EnV4tgK9DlmQdtQCcTj8fzVPAeSq0lsGuCxFXAm+6EaJceES7D5Bohfua/UYIAwEbPBYA1+6jADgIkO4MGzwGQmhnQeK6EoMerxgQSLvfcTpJZXD6kA/azFGVNrPngTXHXBCp7QMciNhA1ALAqGyWIGproDj+t6ksXgU0mLMHuEoA3Bb/AGn/AUFhxOfG82VtAAAAAElFTkSuQmCC",2,16,16)
global.gatorintro = sprite_add_base64("",1,246,0 )
global.gatorintrofg = sprite_add_base64("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",1,246,0 )
global.gatorintrobg = sprite_add_base64("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",1,246,0 )
//}
#define draw 
	//with instances_matching_gt(Gator,"z",0)
	//	draw_sprite_ext(sprGatorHurt,1,x,y-z,image_xscale, image_yscale, image_angle,c_white,1);
	//with instances_matching_gt(Spider,"z",0)
	//	draw_sprite_ext(sprSpiderHurt,1,x,y-z,image_xscale, image_yscale, image_angle,c_white,1);
	//with instances_matching_gt(Effect,"_z",0)
	//	draw_sprite_ext(sprDebris4,image_index,x,y-_z,image_xscale, image_yscale, image_angle,c_white,1);
#define draw_dark
with instances_matching(CustomEnemy,"name","gatorboss"){
	//draw_set_alpha(1)
	//draw_set_color($808080)
	//draw_circle(x, y, 75+random(3), false)
	draw_set_color(0)
	if random(5)<1
	draw_circle(x, y, 25+random(3), false)
	}
//{ GatorBoss

//	/gml mod_script_call("mod", "gatorboss", "gatorboss_create", mouse_x, mouse_y)

#define gatorboss_create(_x,_y)
with instance_create(_x,_y,CustomEnemy){
	name = "gatorboss"
	team = 1
	hitid = [global.gatorbossidle,"super gator"]
	spr_idle = global.gatorbossidle
	spr_walk = global.gatorbosswalk
	spr_hurt = global.gatorbosshurt
	spr_chargehurt = global.gatorbosschargehurt
	spr_dead = global.gatorbossdead
	spr_charge = global.gatorbosscharge
	spr_fire = global.gatorbosspunch
	snd_hurt = sound_play(sndBuffGatorHit)
	snd_dead = sound_play(sndBuffGatorDie)
	maxhealth = 250
	maxhealth += (maxhealth*2/3)*instance_number(Player)
	maxhealth += (maxhealth*2/3)*GameCont.loops
	my_health = maxhealth
	direction = random(360)
	spr_shadow = shd48
	size = 2
	right = 1
	mask_index = mskBanditBoss
	sprite_index = spr_idle
	image_speed = 0.4
	gunangle = random(360)
	raddrop = 30
	on_step = script_ref_create(gatorboss_step)
	on_destroy = script_ref_create(gatorboss_death)
	
	canmelee = 0
	//meleedamage = 4
	startingx = _x
	startingy = _y
	intro = 0
	time = 120
	
	target = 0
	targetvisible = 0
	dodgedir = 0
	dodge = 0
	alrm0 = 0;// Behaviors (Walking, Targeting, etc)
	alrm1 = 100;// Firing
	alrm2 = 0;// not-active, active, players out of range
	alrm3 = 0;//charge
	animating = 1
	
	return id;
	}
#define gatorboss_step
//friends
if alrm2 == 2 and alrm0 !=-1 and targetvisible{
with Gator if random(5)<1
motion_add(point_direction(x,y,other.target.x,other.target.y),2)
with BuffGator if random(5)<1
motion_add(point_direction(x,y,other.target.x,other.target.y),2)
}

if random(15)<1
	instance_create(x+random_range(-8,8),y+random_range(-8,8),LaserBrain)
if(nexthurt > current_frame){
		if sprite_index != (spr_hurt||spr_charge||spr_chargehurt) {
			image_index = 0;
			sprite_index = spr_hurt;
			sound_play(snd_hurt)
			}
		else if sprite_index == spr_charge{
			image_index = 0;
			sprite_index = spr_chargehurt;
			sound_play(snd_hurt)
			}
		}
	else{
		if(speed > friction) and sprite_index = spr_idle
			sprite_index = spr_walk;
		}	
if (image_index + image_speed >= image_number){
		if sprite_index != (spr_charge||spr_chargehurt) {
			if speed > friction
				sprite_index = spr_walk
			else 
				sprite_index = spr_idle;
			image_index = 0;
			}
		else if sprite_index == spr_charge{
			image_index = 4;
			}
		
		}
if(instance_exists(Player)) 
	target = instance_nearest(x,y,Player);
else
	target = 0;
if(instance_exists(target) && collision_line(x,y,target.x,target.y,Wall,0,0) < 0)
	targetvisible = 1;
else
	targetvisible = 0;	
	
if(target > 0){
	if(targetvisible){
		var p = instance_nearest(x,y,Player);
		gunangle = point_direction(x,y,p.x,p.y)
		if(target.x > x)
			right = 1
		else 
			right = -1
		}
	image_xscale = right
	}	
if sprite_index == spr_fire
	speed = 0

if dodge <= 5{
	if instance_nearest(x-16,y-16,Floor).traction == 0.45{
		if speed > 2.5
			speed = 2.5
		
		}
	else{
		if speed > 4.5
			speed = 4.5
		if direction < 45 || direction >= 315 direction = 0
		else if direction >= 45 and direction < 135 direction = 90
		else if direction >= 135 and direction < 225 direction = 180
		else if direction >= 225 and direction < 315 direction = 270
		}
	}
else{
	direction = dodgedir
	if speed > 6.5
			speed = 6.5
	instance_create(x,y,Dust);
	}
if dodge > 0 dodge--
else
with instances_matching_ne(projectile,"team",team) if place_meeting(x+lengthdir_x(64,direction),y+lengthdir_y(64,direction),other) and random(3)<1{
			with other{
				dodgedir = other.direction+choose(90,-90)
				if dodge < 5
				 dodge = 8
				else
				 dodge+=4
				motion_add(dodgedir,other.speed/2)
				}
			}
if time > 0 time--
if time <= 0 && alrm2 ==0 && (distance_to_object(AssassinNotice)<200||(targetvisible=1 and distance_to_object(target)<150)||distance_to_object(projectile)<75){
	alrm2 = 2;
	sound_play_music(musBoss1)
	if mod_variable_exists("mod","options","intropan") and mod_variable_get("mod","options","intropan") == "1"{
		if UberCont.opt_bossintros == 1{
			mod_script_call("mod", "bossintros", "boss_trigger","SUPER GATOR",mskNone,global.gatorintro,global.gatorintrofg,self,0)
			}else
			mod_script_call("mod", "bossintros", "boss_trigger", "", mskNone,mskNone,mskNone,self,0)
		}else
		if UberCont.opt_bossintros == 1{
			mod_script_call("mod", "bossintros", "boss_trigger","SUPER GATOR",mskNone,global.gatorintro,global.gatorintrofg,instance_nearest(x,y,Player),60)
			}
	if instance_exists(self){
		instance_create(x,y,AssassinNotice);
		//sound_play_pitch(roar,0.5)
		if fork(){
			if (mod_variable_exists("mod","options","intropan") and mod_variable_get("mod","options","intropan") == "1")||
				UberCont.opt_bossintros == 1{
				wait 20;
				}
			var big_ = 1;
			repeat(4+(GameCont.loops*2)){
				with instance_create(x,y,PortalClear){
					image_xscale = big_
					image_yscale = big_
					}
				big_ += 0.5;
				wait 8;
				}
			}
		}
	}


	
//chase you down
if alrm2 == 2 and dodge<= 0{
	if targetvisible == 1 && random(6)<1{
		direction = gunangle
		alrm0 = 75
		}
	if alrm0 > 0{
		alrm0 -= 1
		motion_add(direction, 0.8)
		}
	
	if targetvisible == 0
		if(random(40) < 1){
			direction = random(360)
			alrm0 = 15+random(10)
			}	
	
	if alrm1 > 0 alrm1--
	}
//start charge
if alrm1 == 0 and target > 0 and dodge<= 0 and alrm3 == 0{	
	spr_hurt = global.gatorbosschargehurt
	if targetvisible
	alrm3+=1.5
	else alrm3+=3.5
	}
if alrm3>0{	
	alrm0 = 0;
	speed = 0;
	alrm3 += 1.5+(GameCont.loops*1/2)
	if sprite_index != (spr_charge || spr_chargehurt)
		sprite_index = spr_charge
	if random(50)<alrm3{
		var r = random(360)
		var a = 16+(50/alrm3)
		with instance_create(x+lengthdir_x(a,r),y+lengthdir_y(a,r),CaveSparkle){
			sound_play_pitchvol(sndIncinerator,0.5+(other.alrm3/50),(game_width/4)/distance_to_object(Player))
			motion_add(point_direction(x,y,other.x,other.y),1)
			image_angle = direction
			sprite_index = choose(sprPortalL1,sprPortalL2,sprPortalL3)
			depth = other.depth + choose(-0.1,0.1)
			}
		}
	if alrm3 mod (2) = 1{ 
		repeat(round(alrm3/15))
		with instance_create(x+lengthdir_x(15,gunangle+180),y+lengthdir_y(15,gunangle+180),EnemyBullet3){
			team = other.team
			creator=other
			hitid =other.hitid
			motion_add(other.gunangle+180+random_range(-4,4)+(other.alrm3*((360/50)*2)),12-(other.alrm3/10))
			}
		instance_create(x,y,Shell)
		}
	if target > 0 and distance_to_object(target)>320{
		alrm0 += 120
		instance_create(x,y,PortalClear)
		alrm3 = 0
		dodge = 0
		direction = point_direction(x,y,target.x,target.y)
		speed += 2
		sprite_index = spr_idle
		spr_hurt = global.gatorbosshurt
		}
	}
//fireing
if alrm3 >= 40{
	spr_hurt = global.gatorbosshurt
	alrm3 = 0
	if GameCont.loops>0{
	alrm3 = choose(min(15*GameCont.loops,45),min(15*GameCont.loops,45),0)
	motion_add(gunangle+random_range(-20,20),5)
	}
	
	alrm1 = choose(40,80,80,100,100);
	sound_play(sndSlugger);
	var _dis = 0;
	var _ang = gunangle+random_range(-45,45)
	var _xp = x;
	var _yp = y;
	direction = random(360);
	sprite_index = spr_fire;
	if fork(){
		wait 2;
		sound_play(sndSuperFlakCannon)
		if instance_exists(self){
		with instance_create((_xp+lengthdir_x(10, _ang)),(_yp+lengthdir_y(10, _ang)),CustomProjectile){
			instance_create(x,y,PortalClear)
			hitid = other.hitid
			damage = 4
			speed = 18
			if GameCont.loops>0
			speed += GameCont.loops*2.5
			wallbounce = 1
			friction = 0.6
			sprite_index = global.punch
			mask_index = mskFlakBullet
			team = other.team
			direction = other.gunangle
			creator = other
			image_angle = direction
			image_speed = 0
			image_index = 1
			typ = 1
			if direction > 90 and direction < 270
				image_yscale = -1
			alarm0 = 0
			on_step = script_ref_create(Gatorfist)
			on_wall = script_ref_create(Gatorfist_wall)
			on_destroy = script_ref_create(Gatorfist_destroy)
			}
		}
	repeat(16){
		if instance_exists(self){
			with instance_create((x+lengthdir_x(14, gunangle)),(y+lengthdir_y(14, gunangle)),Smoke){
				motion_add(other.gunangle-180,random(10))
				}
			with instance_create((x+lengthdir_x(14, gunangle)),(y+lengthdir_y(14, gunangle)),Shell){
				motion_add(other.gunangle+random_range(-45,45),4 + random(12))
				}
			}
		}
	}
	}
//#define falling_draw
//	if instance_exists(creator)and creator.z >0{
//	draw_sprite_ext(sprite_index,image_index,creator.x,creator.y-creator.z,creator.image_xscale, creator.image_yscale, creator.image_angle,c_white,1);
//	creator.z -= fallrate
//	}
//	else instance_destroy()
#define Gatorfist
if random(2)<1{
	x+=lengthdir_x(2,direction+90)
	y+=lengthdir_y(2,direction+90)
	}
if random(2)<1{
	x+=lengthdir_x(2,direction-90)
	y+=lengthdir_y(2,direction-90)
	}
image_angle = direction
alarm0 += 1
alarm1 += 1
if alarm0 mod 2 < 1{
gatorexplosion(x,y,team)
with instance_create(x+hspeed,y+vspeed,PortalClear){
	image_xscale *= 0.5
	image_yscale = image_xscale
	}
}
if speed <= 0
	instance_destroy()
else if alarm1 > 300
	instance_destroy()
	
#define Gatorfist_wall
if(place_meeting(x + hspeed, y, Wall)) hspeed *= -1;
if(place_meeting(x, y + vspeed, Wall)) vspeed *= -1;
instance_create(x+ hspeed,y+ vspeed,PortalClear)
instance_destroy()
#define Gatorfist_destroy
sound_play(sndFlakExplode)
mod_script_call("mod", "enemies", "scrPickups", 50)
if fork(){
repeat(22)
with instance_create(x,y,EnemyBullet3){
	hitid = [global.gatorbossidle,"super gator"]
	motion_add(random(360),random_range(12,16))
	typ = 1
	team = other.team
	damage = 2
	wallbounce = 3
	}
	}
#define gatorexplosion(_x,_y,_t)
if fork(){
wait 10;
with instance_create(_x,_y,SmallExplosion){
	team = _t
	hitid = [global.gatorbossidle,"super gator"]
	image_angle = random(360)
	}
sound_play(sndExplosionS)
}
#define gatorboss_death
sound_play_pitchvol(sndBuffGatorDie,0.5,4)
sound_play(sndBossWin)
sound_play_music(musBossDead)
var xd_ = x;
var yd_ = y;
var fl_ = instance_nearest(xd_,yd_,Floor);
wait 14
if instance_exists(Player)
with fl_
if mod_variable_exists("mod","options","bossoutros") and mod_variable_get("mod","options","bossoutros") == "1"
mod_script_call("mod", "bossintros", "boss_trigger", "", mskNone,mskNone,mskNone,self,0)
//}
