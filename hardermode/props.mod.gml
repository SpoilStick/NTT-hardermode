//props

// { sprites
global.VenuzStar = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAAAkElEQVQ4y2P8//8/Az6wtETlf3TPHUZc8oz4DFhaovLfp7SUoSu3iaF11VNG+hoA08zAwMDw7tIehjmzj2E1hDYGIGuGGcDAwIDVEOobgK4Z2QBshlDXAGya0Q1AN4R6BmDT/P3xMwT7/TWshmA1AFkjOoAZhGIATDM+jdgMmjP7GAPcAAYSwbVH3wlnJmIAAE7ru7dgOfS4AAAAAElFTkSuQmCC",1,8,8)

global.fancylid = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAACgAAAAUCAYAAAD/Rn+7AAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAABm0lEQVRIx9WWMWvCQBiG34B0cSiYJUMJgRAF3V0ChdI/4OLQwalLf5KLk4ODi39ACpUu7gaiCFIyZEmgg0sJpIufJOd3F1SS2m8K+S7vPbx39+a0NE1xy6WpAF3bZJuf2y/tksku0WMBSWjQ6+feJ7oOAJiMhmeBkl632WH7y/VKqncC6NpmOuj14XseWu02CxhuNjAcB5PRsBDStc202+zA3+3Qsix2DPWW69WJXg6Q4ADA9zxWrG4YAICHRgMAMJ5NpZAERxCqIngR8ggowonuiU5uF4vjGA5ShJO5J7ooQuYASVAFlxM9uMwtjWub6f1dPedOod7B5e+ffR4w6954NpVuZm5zZ78j0XOWtmipWUDx9MoqO1YFeI6DUsCX1zfUokgKmOg6alF0NSA52rIstne1gxQ1lIeVOkiT0jOAE9duAvDp8RkAsA9DZRa+f8yrOSQkSmAUwkUVxDH2YVh+zIhBHcRxIWQ2zCsJag6SiltqFVwpvzoRMohjGI7DHhRyTwVXymVBvB5RNmZzMNH1v71u/YsL6y3VL+7d2OicNXkmAAAAAElFTkSuQmCC",2,10,10)
global.lookout = sprite_add_base64("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",28,24,24)
global.hole = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAABAAAAAAgCAYAAACM/gqmAAAAB3RJTUUH4QsCDC0ViPjcfQAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QASABvAKgKRg8wAAAD9ElEQVR4nO3cQY7URhSA4VZugxDbLFlwAi4RiU0OwyVyg2y4BBIcaCIvLJUqttv21KtXbX+WPiE0g/434x67XA08Pv/1/QEAAABcW/oAAAAAQLz0AQAAAIB46QMAAAAA8dIHAAAAAOKlDwAAAADESx8AAAAAiJc+AAAAABAvfQAAAAAgXvoAAAAAQLw/Ho6XOb7//eVtoq+vr69/r/48w5370/Ht64fUGfRz+w6Hw+FocGTvQBDn56/fb/r6+vr6+nfq//Pvj9SvvWd/atW9O/UBOC59AJ6bFlKT+Ub7TOuF11Z//lj5cX19fX39dure1rX/iv09M0S2R+qXoloj9ss5tn5/9T5AC+kDsG1rsfXp45//03ojYK2/1K5n0NfX19dvY+uBe+2B9Mr9rXbL7ij9I+flqv2sr3GUfjnDXftAG+kDvFfvv2a4tAiIuikcWXSuLUJb9Y+09fX19fXb3A/qe8ze9lX69bmYZ6jniXwIHaW/Nk+vB++s/t7z0nuGjH7ZqX/t+TVn9TN6o/WhhfQBjtp6RzyyW7fK3f+oTYCzi89yQaKvr6+v/3r998zR8l6U3T86Q3mPvlq/3oRY6s7f96v11+ZYWpNFbMBk9vecl/L7fYd+ve7u/WZgdh/eK32AI579dcOIf4O39O8750Z585s/d+nzzspegOrr6+vr5/Tn+8eZGVo8gGf3yznObEC0WguM0t/zeox4IMnulz+LWzMsrQmv0l+bY0vr9gj9PTNEdUfpQyvpA7yqHv/x09wpbzKPx2NTywXI0sJnb3+ir6+vr3++P/1aztD7+p/ZXzoPd+5P9vQjNwD0+/dn5UPmWr/Xw39Gvz4P9Rw91uKZ/aU5ojecRu63fsP1jtIHOPsCuMvJPnLzmS9CLb83RxY/5U0wY/Glr6+vf6V+OcORfstFeHZ/cuf+ngevUuuHMP3cfjnD3n7L9gj9eYY798vr8NIsvTZAMvtrmw89NyGW3vztuQEyz1DOcrbdZVjanPC1i3CPXbA9GxGRM+jr6+vfuf/sQTzyPpDVrxc6e/utFmSv1C9fg1frlz+De/r1n33Vfj3L3n7kNTCrP9m6BkdsvIzWL2dYEt0eoV++FjPaV5I+AOuWLqT1C7/cAVr63Jb9pR24ul9/vr6+vr7++Rm2Zou8/o/Qf3ZuIr/3I/bXuvUMV+0/myHztZf9+ovsjdYH3i99AGJkX5T19fX19fP6We0R+gDAuvQBOK7cZc9YaOnr6+vr5z3kZ7/zlt0HAM5LHwAAAACIlz4AAAAAEC99AAAAACBe+gAAAABAvPQBAAAAgHjpAwAAAADx0gcAAAAA4qUPAAAAAMRLHwAAAACI9x/aN1KN3Y5/lwAAAABJRU5ErkJggg==",32,16,16)
global.flower = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAIAAAAAgCAYAAADaInAlAAAAB3RJTUUH4QoZFwYZXTXYgAAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QASABvAKgKRg8wAAADdElEQVR4nO1YMZLUQAzcjPfAA8hJ+AUBCY8gJeILkF1OwDcICPjMUnNVXdUn1CONPR5rCweqPZ/taandrZF9e/vh6+2K/zdOT2A44dvtHsUKvK3XVYuHIqCt9/rLz/vTn9/Pcf/x/Tlw3KKdn4GL/BlPYUTXzeRhtgEehoC2xq/Pn148cCsAHO8VgVePxeLaVopyNtbDENDu99ZWOW7FU2Lu1RVdN4ODowxQngCI7NX7j/LBe9Gu39IWUU9PbEx0w8lcu0eURxqgLAHcXRoGoh17eDYnvj4rPhZzVFNzI7CsM3uGGN6jDzZASQKUCC0eHi5E0f6vRJIRQbb7MS6LbGYXXGWAcgQoEeJv4LWHzcHiUDlE+Ki/N//gvIeP+xT2aCdaYYBSBCgBctdB8V7g/NZtCPhck80/wrf82fWqGaAUAdGgA+z2++3dmxfB52YKgCOLz11xtP7VBihDALA91VsSLLbNobcNZRyIoctGFt+7F0NZhL3aAGUIiL49QBwKG4G9cYsAvBx4qGJ824IZnwew7AwyagAPf4sByhHgKd8TQA9fDaURvnIev+562JwD79OqlbvD2IABIvwRA+wiwD6MGQR4r5RWgBl8FmG0BanWy8Kx+O0X3ZL/x/X31vznQQwYIMIfMUAZApCHnWqxVvvF+gof+fEMwmv03K/EyvUzPn9kQd4Wv7efKwFkDeDhbzFAGQKYBP6+YF2AHLxo5yyJWCva+722azsgbzMKn+tX7bxXf9YAGf4zBihFAA+hvVao9kDvOwQTtlcA4KC3B6v5JyuA1QYoRQC7oDfN8kcPfu2MutjoFsD3c1tVQ6h9Y1Ldr5IBShKQeZ3xvnd7+ycTt+UNBASqV1sVe3JZaYCSBETF2K6klM/4ma9wGRzvQ5k9ttdnu98ZBihJgPdAMwJQYsnOAYxr6/Feq9Qx3+Ptydk8VhigJAHt+p76sY4allQX6+HaIWxkfZUfc4DI5rDKAOUI6LnAEmDzU4LZgs33ZB6Il5+3VgZ/pQHKEWBz8JSsthq7B/L1WWzgc+ypn2MEf5UBShLAJGC+sMWgeCsyLhz3jmIrMY50v1HRnWWAkgRYIdpthB8+Qm03e3PwumI0BM+qfYUByhLgCaHXUaLzs3KI6p+JvcIApQmoGEqMR9Z9pAEegoArjovTE7jiEsAVJ8ZfbrT+FcaDozIAAAAASUVORK5CYII=", 4, 16,16)
global.iceblock = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAADAAAAAVCAYAAAAAY20CAAAACXBIWXMAAC4jAAAuIwF4pT92AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAAAsElEQVRIx+2WwQ2AIAwA2xncg69buJjT4CYwB85QX5gICNiolGifhNI7aAAkIoIgFrtCTUxqiPImNbDzOfUxFOgJHgCOAj3B+5q7wNs7dwf8fgK97HxqHdTGUQt4Tr6fe1lAEnw4VhRoDV8SygqkinN79Qn4rMDd8Nx1SpEUkAh/dnKRgJRHqgY+EpAIX91C0u752jzUxpEEeO4thanvdMuP3eUWGmdL0HH8Ar/A1wU2Ss8cLl73EnoAAAAASUVORK5CYII=", 3, 8,14)
global.cactusbloom1 = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAB3RJTUUH4QkaAxkcrj/8AwAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QA/wD/AP+gvaeTAAABcklEQVR4nGOwS53IQEtMniYGhv8gTBMLQAYfkYj+n6VgQ5QlJLkYZni7pi/YAmIsYWIgEgANZgAaDOfLcgrCxQ/Nzv+PSx/RFoCA7Xs+hsOCn8D04+/vwWIgPj7Agk8S2WWZVjsZbM9pMMgyQFwe9UMeIvGDgKsIhT0svAu6zcEYFAeweABhBmgcMCDFE8lxcNjoBoYYKIhAQQWLAxANwgR9gO4SEK0bJAL3AYgPokFiIJ/BfAHzFboPcKZzmGJ0C2AYJIbsGJjlRAcRLJWAwOV1b3AGH9AQRnx8rEEDcx1yEMFcie4DmBqQGLYgQvEBKJKA4crgbKmM4VKgAVh9AIpgkNyvqaw4vYiSJEHhDwtzBhxxAEuqMHH0+MAZyejBBNOMbAHMEegJAaafYGGHrBibD5ALOWwGklyaYgsimK+IsYConIyeTLElAlyAKAuAroWzJ5SeJNpwoi1ANhxXcsUJiK3RkOOB2PAnusqkBNPcAgCpnR2Vx/qxFwAAAABJRU5ErkJggg==", 1, 12,12)
global.cactusbloom2 = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAB3RJTUUH4QkaAxkh9lewEgAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QA/wD/AP+gvaeTAAAA+klEQVR4nO1UOw7CMBSLOAMDIysDMwviBiyszCxMvQUDE3fiXhBXcmXcJIRWHSoRyWrf64v9PknD4fIIU2JS8r/AjATieinUN0pASZ+rc4vb5tjZLjpI4Lret6AAReDj91SFRQENBsH2tGyfIIYA3pv7rvNrAhTMCmg7QAIbRABsgj58h01xr6JHjkCABEriUHHGZWegLYEAs0yRuo9xqTn0Bsqs2CYndFESch7ck22R9pSVfANbpHMoDll76hWkbN+jfItQWHFDiCQfvpSNuOzK3QOW7lXoDDR72lU32Y9fqUXVx/SXKmqzr/7ZaRX+7ud+0O96DOYv8AZX7PoDi3KfagAAAABJRU5ErkJggg==", 1, 12,12)
global.cactusbloom3 = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAB3RJTUUH4QkaAxknHzQVJwAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QA/wD/AP+gvaeTAAABJklEQVR4nGOwS53IQAwGgv/ImGh9pBjcrun7P0vBBkwTaxFBw49IRMMNBrFhGMQHYUKWEGUBsqEwGmQpTByfJUwMBMBhwU9wLMspyLCm+A6Yhskt43iI3wBi4gDkWhgu6DZHCR6Kggg9kkGGg7BukAiYD6MpigOYy0GGwSIcZjAxviAYB4+/v8fJB8UF0FK8+glaMO3BEbihoAgG8WHA9j0fIe2E4wAWVKBgAYU/A1LYw/gURTJyRKNHMswCBjzxQHQKQjYU3QJ8OZpgHAA1w9lAA/HKYwMshCwgBGCRDnQtI1YFxIY/LJKRw52qkYxsAXpkU80CBiJTDkmRjA0ALcMf7kiAJAvQU9Gh2fn/qWoBOiDGB0TFASwekFMR0fqIVUguprkFAC3DHVyKhE0/AAAAAElFTkSuQmCC", 1, 12,12)
global.ammo1 = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAIAAAAAQCAYAAADeWHeIAAAAB3RJTUUH4QkWBBc4QyacYQAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QASABvAKgKRg8wAAABeElEQVR4nO1WMU4DMRDcS5GKt5CSJoqo+QI1DTW/QIqUB6RLS5kX8AFeAOIBSEg06Y67gE++Ix6v17tcpPNIo1Mcj2dtjeyl1d2GCqfL0QsoPIMANKhT6S9SC9ArQtFfovfHETh6RK39a57fjH5xtbilm+VjlO08C2j5S/XOP7Z2TI9ouX+x3iWo+ZNNMrgBtPwlet8fgaNH1Nq/5vmVAJQAlABMOQBdD/Dx9QLfqNR5qfgv/5A+19+qLm3/P/NcgprmgE0yuAG0/CV63x+Bo0fU2r/m+XULbC/nR35eU5BujkUANP1T9UN/BI4e+VvsP0ffSxDn/bC8ATT9U/Sn/BE4euSvvf8cfdcDODztXuHXGlr+++cHkd7NO7zfB+f8ZADrUf1VVWXpEZL1wzfkbX0BvxY3QPs7x58oXAJXH/Ln1J97fmPqz6IJdGNSf1d/CClNYKx5iwUgp/4x9N0CqbQIQAuJvz8eAlcfYiwAOec3pp78hQqnx2/KX7Fg+sJT7AAAAABJRU5ErkJggg==", 8, 8,8)
global.venuz1 = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAACXBIWXMAAC4jAAAuIwF4pT92AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAAAZ0lEQVR42u3QMQ0AMAgAsGFkHzf+1YEOQiuh8bP6HRYCBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIECAAAECBAgQIEDAfgOzB1yB6RL+mgAAAABJRU5ErkJggg==", 1, 32,32)
global.VenuzBars1Side = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAAAV0lEQVRYw+3XyQmAQBQE0fq5uODkH4vikksbxIAMWB1A8a5dSRhp1QuqqkzLBsBzHSQpQYIECfo1CGBeWwDuc6/eliBBggQJEiRIkCBBggQNDvIofg16AZmFG8iu5Lc9AAAAAElFTkSuQmCC", 1, 18,18)
global.VenuzBars1 = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAAAkUlEQVRYw2P8//8/w0ACxlEHjDpg1AGjDhh1gIqa5v9B6QAVNQ04m49fAM7W0DbAa+CNqxfg7E8fP8DZd27dwB0Fnr5B/+/cusFw++Y1RgYGBrryGf///88QHpP0/9zpE3AF9OQz/v//n6G+fdL/ZQtmwBXQkz84HDDgUTDgiXC0KB51wKgDRh0w6oBRBwwkAABmtbW6edNkmQAAAABJRU5ErkJggg==", 1, 16,16)
global.VenuzDoorSide = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAAwAAAAoCAYAAADKSBvHAAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAAAo0lEQVQ4y2NkYGD4zwAF////Z2TAAhgZGeFqGBkYGP4bGJsxqGloM6xaOh+beoaw6ESGWzeuMlw4ewpVw60bVxkkJKVRFL94/hQuN6phVAPVNTAwMDB4+AQyvHj+FKsGCUlphh1b1iOSN7IGbIByDch+wAZGI25UA100EJ34iAFwDWHRiQyfPn7Amx8YGBgYdmxZP/w0wDI6OvDwCUTVQEq1CwAliMUQM1BHnAAAAABJRU5ErkJggg==", 1, 6,25)
global.VenuzDoor = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAACIAAAASCAYAAAA+PQxvAAAACXBIWXMAAC4jAAAuIwF4pT92AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAABHklEQVRIx+2UMQrCMBSG/1xAHVs6CiWQJSB0cPIELoKDTp7E0d0LOOkguHgLRbFLoQiOoqN6geeUNtVaNUJ08C0tpXn98r6/YUQExhjhi0VEjAGgdrcHALicT283OR728LkwXgsA4XqJ3wPZxpF1JeF6CVkLUhBZC+C4nlUIfRoAUpBvVQbkH9ZfCauuJ8mIz4VRk20codnqIo5C4/V3E1Ewr947rofjYZ+AmPTwucB0PEpBuJCYz8ZWlagNZED0XdqooN5IdGZAVFgd10OpXDFqzoV8+o76uDLwUM0rob2cT7mwXEjEUYjJboROtZdcVRb0fCjoQjWfTKTo77kFeaoGQAZGP6wePdcPqKLSQXLVKOLNasFshLU/GJI+kStMCgYOarnXxgAAAABJRU5ErkJggg==", 1, 17,11)

global.VenuzBars2Side = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAAAdElEQVRYw+3XMQ2AQBBE0TkD262AywULaEAyGrBACAK2w8BSUFGTwIX8EfDz2imZqZ5WnoLcLKu7JGmPUBxHAQQIEKA3QXWy9PUCxRDa549BkjS2lpK0bFt52gIECBAgQIAAAQIECBCgzkFudgt08Vx/DToBQBQSyM32lVkAAAAASUVORK5CYII=", 1, 18,18)
global.VenuzBars2 = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAAAsUlEQVRYw+3UMQrCQBAF0D8H0JSx1IgIsQt4Bk3jLTyApPAqVjnDll7AxgMEDCy2CanWC3y76bTcpJip/odhebAwQhJjjhjAAAYwgAH2WcZJAhZJonmdppq3ef73wVfTaPZ9r7kL4fcXnIqCXQh4ei8AonYhiUtZ8tG2uhCzC0ncqoq1c7oQs8vyMON1d0btHIbNAACI2YUkVsc5AeB9/wiAqH0aADvFBjCAAQxggDHnC9/odDwlAUtuAAAAAElFTkSuQmCC", 1, 16,16)
global.VenuzDoor2Side = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAABgAAAAoCAYAAADkDTpVAAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAABJElEQVRIx+3VMWvCUBAH8P91qVR0cJISsIIQXAw4hH6DOuWD+IH6QZz0G4iDoEsRBBWCOGVQFLv0Or1w0ReTF11a3q33Lr/hcnfEzNAFEcUJZqbCb24B3VYD77UXfE6+tG/6fhvj6ITpcnMfMI5OcMqlRD48nuOcBSxgAQv8aQAAAs9FeDxrAadcwmC2MFvXcsdLQBcSSLsLCYCIuO+3ASC+AXkBWScRLRB+/2AwW0D2QBeyB4Hnwnl+ygeoIpMmy+tnAQv8B0BNpAmQe5IDzwWAq0nOAmRdKtDsVbmze70LmNe3WA33lLpNm70qA8B6dDAC3j4qAJD4uNHByVp2hS9anigMqNV96x7oGmuBxwPz+lb7Rs6MMaDmQcXl/52VzwQeFb8QcBPeY1DIcAAAAABJRU5ErkJggg==", 1, 12,25)
global.VenuzDoor2 = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAACIAAAASCAYAAAA+PQxvAAAACXBIWXMAAC4jAAAuIwF4pT92AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAABQElEQVRIx+2WsW7CMBCGP7OAgujgDSWIFujQoQsSbd6gXfsM3fpAfQ3WPgLqwMLQAVCFFNTNQyUQLLhLnTgJoSFDYOhNHny/v7v/TrLQWiOE0JwwtNZCAPrl7gaAYLs7WiRYbfClUzgXYDxbcH4gI7Uu3ZLxbEG/145A+r02Xr1WKoTdDSACOVXEQP6H9VyG1bYnnBFfOoVERmrN0+01X8tl4fxURwxM3rNXrxGsNiFIEQ1fOry+f0QgTddlOJmWaokpIAZiV1lGDDqt0M4YiBlW07Zgu8OrVqIJ/90KsyWHPDfF2PnJrRx0Wgwn02xr9j1iQ+VZU/uuV62kigJoui5AtjWqq1LCci4PdsHAJR/L0gN4du7j1lw+NFJ/kc+3b2HOV48XWs5l4VlQXRXTM5rJe0Lrv/9E+xLzRhIiK34ALj4DgO6AWD0AAAAASUVORK5CYII=", 1, 17,11)
global.VenuzBars3 = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAAAuElEQVRYw2P8//8/w0ACxlEHjDpg1AGjDhh1gIqa5v9B6QAVNQ04m49fAM7W0DbAa+CNqxfg7E8fP8DZd27dwO2A2zevMYbHJP1nYGBgOHf6BAM9+Yx1bRP/nzp2gGH75nWM4TFJ/zW0DRjoyWcMi06ku6XIfMb///8zUGIILI2Qq5+xrm3i/2ULZjAYmVrADblz6wbd+IwePoH/+fgF4CkWmU0P/mhJOOqAUQeMOmDUAaMOGHAHAAC5v3tHesqyVgAAAABJRU5ErkJggg==", 1, 16,16)
global.VenuzDoor3Side = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAAwAAAAoCAYAAADKSBvHAAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAAAvUlEQVQ4y+2VsQqCQACGv1sLIhoCEdoCHZx8hBudew/pQcL3aHa8R2hyUGgTRGiQCGq9hko8r8WWlnM8/4/vvukEoBl9WmsBIISw/glApzLkfLkBkBeNMUgiH4DtekGmyheQRD51d+9Hm9UcwDrLi8Y2DEdD2DCMgaHhT4CLdtEu2kW76MnRRXMFIPKX34HDLmZ/PJHKEFW1hkEGHpkq+Wx6oO4eAKiqNQwy8N5Xm5nAz4ZMlQaQytA2THl2n8CjyBDV4noyAAAAAElFTkSuQmCC", 1, 6,25)
global.VenuzDoor3 = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAACIAAAASCAYAAAA+PQxvAAAACXBIWXMAAC4jAAAuIwF4pT92AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAABF0lEQVRIx2P8//8/AyMj43+GAQT///9nZGRgYPjvrSsNF3z07iuDnBA3ikJai229/JRhcDlEV1pgIGOG4fLTDwiHwFxI7xB59O4rqkMGRYjA0shApA+siXXAHTKookZVjI9h743nKK6ll9iEvdcHmUMKnDUZ5IS4GPbeeMGgKsbHcPvVJwZVMT4UMRhAV2ccWcbAwMDAcHZ5F051hMSKVp8l3yHGkWUM27etZ/D0CmRgYGCAsz/tnUHQIbCQIOgQQj44wGfNwMDAwPD85iUGSXU9DLbSg93UCRFiHaL0YDeKOmazYOo6hFDULH/Oizc7WrO/JGgeshjZIbL3xguGV/yqWB0h9vE20QkdwyG60gIMzhqSA5p9ATCvZw4qjbzUAAAAAElFTkSuQmCC", 1, 17,11)
global.VenuzBars4Side = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAAAa0lEQVRYw+3XIRGAQBgF4b0KSDJgGWKcpAcaiaYHkhgMlgxIKvxoNOYG9gXY+exLEUFJS29Buati7GsApuVk3a4kSJAgQb8GAexzEwDtcKS3LUGCBAkSJEiQIEGCBAkqHJS76hEo4ih+GnQDbzsSyN37t84AAAAASUVORK5CYII=", 1, 18,18)
global.VenuzBars4 = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAAAh0lEQVRYw2P8//8/w0ACxlEHjDpg1AGjDhh1wKle7f+D3gEiuppwNreYOV61X1+dhLPfXL5OXBSc7tP5z8DAwGBadIWRgYGBrnzG////M9zfHfr/zeXrcAX05DP+//+f4dXFnv8P9y6AK6Anf3A4YMCjYMAT4WhRPOqAUQeMOmDUAaMOGEgAAK65hNhEVdmvAAAAAElFTkSuQmCC", 1, 16,16)
global.VenuzDoor4Side = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAAwAAAAoCAYAAADKSBvHAAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAAAVUlEQVQ4y2NkYGD4z0ACYGRgYPj/8kI3w9dXJxkYGBgY3ly+jqJARFeTgYGBgYFbzJxB3KB0VMOohlENoxpGNQwaDad6tYkq6s2Kr446iYZOIqXaBQCwiGwQAXhJBAAAAABJRU5ErkJggg==", 1, 6,25)
global.VenuzDoor4 = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAACIAAAASCAYAAAA+PQxvAAAACXBIWXMAAC4jAAAuIwF4pT92AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAAA0klEQVRIx2P8//8/AyMj43+GAQT///9nZGRgYPh/b1fIQLqDQcltDcPgcsipXu0BdYhZ8dVB5pDRNDJo08jLC90MX1+dHBBHcIuZM4gblCKihlvMnO6OgdmJkUbo6RhkuzAc8ubydYZF7R/o4pDaPQWYDkFOrPR0yMO9C7CXI8ghIsfKQRMHPPr9A3eIoDuEVo5AdgxRUUNth8Rvz2D4+uokw5r48ygOwYialxe6GRgYGBge7l1AE4c4lEDMO9DzA8UhMIBSjtAyamDpAmYutqgBAKIWqv8bhH2EAAAAAElFTkSuQmCC", 1, 17,11)
global.BigSkull = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAB3RJTUUH4QgFEBMut302WQAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QA/wD/AP+gvaeTAAAB5klEQVR4nO2WrU4FMRCFG4JCIxcDhmBAIRDwAPAIWDQCzxsg0NeiUfACJBgUCsmrLHdI5uZkdvozXXaHTdpkkm3vbnu+zun0hvObx7DkcBfQALwFNABvAQ3AW0AD8BbQAGZfMIQeYzEALPj4YHcTfwExm3gSfHlx8hsMQM9jAbZCpr2tbnuK3HvWb7uuq5ly2Ep3LxTuVAB/P6/u+8/3l01Qn7PAmSidt9pCAXybWgxFS+ESgkHGii+yELb1oqotqL8WFSio7R+dZuc63NuxLB1t29YPCILaa8TbUvz318dgjPoUD09X1uWHzWIh9C9WE4q767OsfdhC2A8jS6mpDGoQHASAUQLDQLMCpEA0wSUQnInJAGIQEqhULFYjeqaM1VrJ9nICQrMMj8nf5DP2rRD2lMFFhf9n0PuadTShAS477lshqg6OhNHEoigWJsWjYJxrNgCGQA+jWBzTxiVoTUWaBIDFynGtvHKf3530EKcgePckAApMlVd3ADzAUnzsUpOZcANgCLRKrPrIwHddASQMAkj7xCBcDnEOQFqJ74uYnaw38mQAMuSfPQyZLQvEJAA5KBSv3eQcJRCzAZTAoPDSLLgAaDCWXf9XAFpWFglQDe4toAF4C2gA3gIagLeABuAtYGz8AEbR2UWnKysTAAAAAElFTkSuQmCC", 1, 24,24)
global.BigSkullHurt = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAJAAAAAwCAYAAAD+WvNWAAAAB3RJTUUH4QgFEBULqiNFmAAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QA/wD/AP+gvaeTAAAC2UlEQVR4nO2ZMW7cMBBFCZepU66bpAnSxJWLFPEBcgW3bpMife7gNr6Dq1wgAdL7RrJpZJzBgJSoiJrPvzsCHiCttevP+Z9DcTd9urlNQfC/wAUE3MAFBNzABQTcwAUE3MAFBNzABQTcwAUE3MAFBNzABQTcwAUE3Lj/w8kc6AKsLlhKkwatB60fFhy2EEnBP7x9/QJTiPbSDw8PQ4Ck8J+vLp4RA/I5Q4D21H+WFo5fP75MmaX7er+31/H77uuU6f3ew+GwTVgHDVve203/mu7Ro9t4d6D0d/alxpmW1PPB/d336eHPzxfytcximcmtn3us+lcHomdwPJavpNb9uWLpotvCWxPEiL3Dw6B/cQmzR2lZQi9TrcdT0YptPV8/FTVl8vHm/eXiZ707f7WPyJljSP1rO1Dvw3MG6/adzHa2NnNLy4CcJ+cONKJ+eID2DlLNAL0byXy7/rjY/kuGiIGnqr/pJuYALZkgZAM0LWaIIXt3opH1DxOgPUOkDZgzomUJqOHVhUbT33zjMYbIGtJabL2byed5xnsuZSPpX3XzMYeo1PLlNfs3e+71YD2i/tWDOIYQCfr3IP3sUNu92ELL7kdfe4RoJP2bBsMYoJIZta2uNqu0c9EF15/lsb0fRf/mQbCGR5ugnwF0se13LUuz1zM8o+gfLkCexa8ZIMW2r5e2x3It956a/i6DYA6QmCCzzxqgCzy3PUYFCK0/AnTzbxbrourit/xMgFi+RtDfbRDMARITdKuv7V4s+l5UgJD6dxkMa4i0GdoA2/5rJiC7EEr/kAFCh0gbYJcC+b6lthxIFzgV/cMGCBkiu6PRX9SVsLMdHSJP/W6DYgvRnCm6+PY1PdvRnchDP2QwjAFqMUMXHt2FvPTDB8MSmiUzRuw6HvrhAxBYA2SNYAvQVv1w4QE3cAEBN3ABATdwAQE3cAEBN3ABATdwAQE3cAEBN3ABATdwAQE3j/14d/zEJDjlAAAAAElFTkSuQmCC", 3, 24,24)
global.BigSkullDead = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAJAAAAAwCAYAAAD+WvNWAAAAB3RJTUUH4QgFEBYIGAdH4QAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QA/wD/AP+gvaeTAAADDUlEQVR4nO2ZsY7UMBCGt6eE6ioEFRWIkgIaOkpahERBQ4VEzztQ8w5UvAL9vdEhn/Sf/pu1kzh2/Hv2ZqVPOiXZ9cz4y0x27/T2669TEOxFHkDgG3kAgW/kAQS+kQcQ+EYeQOAbeQCBb+QBBL6RBxD4Rh5A4Bt5AIFvhi94Y17qAgRtDFvIihMSXQZDFlmSJwTyzebN3/Pha+KEQP6pkqCnNCHQZVAtRE9xQh7/VAuU2/i98oRADRt3Ot0k5HHsFajX6yEXvzWHq8ePzvIYnZtcIIVIqcAvnz+RF781hxfPru5JhPinEmiURKOL/+Hdq3sSKYrfQyCWyMLXHpXXNAKNlAgCsUSK4rfmkMSBRInPH9+f5bB0Y/TIbfOFlyQRRhgkSvz5/bOq+CrBsF6Sh0kCff/25UyitRuj9WapCt67RChQkoeBQFaiUvF7b0JtDlaeRJIHLOWwhcME8i5RTp4E5Ln+93dTcXtvwp6bACLdrff66S2pA611obXzNfE3JeNRIO5C+PvHpze3bOlCR93JLfkkIbgDLY0yXJs7xu8bItBREh1deC4+Og9Yk6h0jj8H14zKI3UejqU0yiAIy5IbfVXrzybQiKJz8VPn4SJDAlt8iGHPWQFxfmQOViDIwsdL4mDk4drq9XskcUkCQRY+niTBiOMuZbsW3jMyB+RhRxYEYkHsiLPdZ9faD1kgFN+OJQjEYtguwx1J0XlsDpAFQrA8IPecNIVAPSVSFJ+7i32gtt1mSSKVQMjj7hmGuk1JHhatRaJDkvEoUe45aKn7MLhm5MPzWj4skB1fJYlqv4FNK5BCIi4+i8FdCN1pqRON/iq/JpAdZfi9qDTOauOeViCVRLmv6BAnh5XI/p40Sw4QJ4ftVjUSDUvKk0RLG2IF4uPcrWYYZaUcWB57jLvVlhwkyXgTqLQRVqhZ5dkqU+7fIFMKtCaTOqa9m+FFoFz8NV1nKoGAV4Fym+FJoNbY5YEHvpEHEPhGHkDgG3kAgW/kAQS+kQcQ+EYeQOAbeQCBb+QBBL6RBxD45j91aK1cvb+WHwAAAABJRU5ErkJggg==", 3, 24,24)
global.whitecrystal = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAABwAAAAvCAYAAADw46qXAAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAAC30lEQVRYw+3YMWjbUBAG4F9joZtJBi8lashS4pZiYm2d6mx2JuOltFMHd/EQKBh5ssjkwUtdKCR0NF4SZ3O2bHYQpdi7vGVICFkKHV8H+x6npydZkuNQaDU5sfCnu3d3epIhhMBjHsZ/8K8BzUpLeP2m8SjgAoNZaSEpmhrs2DWUcpnEaGLQyJfF4OQEAFDKZXA+ucPRxTVGh7vG2sE0aCJQxQgEEBtdGeRRAliKxgbDMIbIv632NBRNBR5dXAMAGsWsFoxKbyzQyJdFoeqgUcxK7ObqDJt7B77zRoe7MrWlXEYbaSrw5urM9z3BBEZV7lKQMEI29w5kdDyN/CA0VYRGviyEO9B+Z7WngfQ2ilnZKqlBANgy85h5LrbMvC+NPHJKa1ThPBhI/+OFszKoHrSe/AKoVVKBhOki5Ag/CExcNLpU6lK6ctEQVKg68sdmngsAEO4AVnsaaBF1DaNGnBYkDADGPVt+Fu4A55M71J1uaKWmAnnaVJBKvu50IyOkc9TdQCQIQKazUHUCV68bcbSGsUAV04HqrAzrQ93MDQUJ4QeBi3XxpU2NkDCv35QXuNh8MfDTKykb42eySsc9GzS8vX7TN5zZLs6Hqe3Bz/ODr3/Nwa8vYoE0wupOFx27JgtJh4WDuQ1gcgvr/hTjni0rk+4MPJ00UcxKK1A06jl68MOT+efJbSBSdQuh/lAYRimmfvW3BUsrB9XG1q0h7cSjMK/fNIKzlNAfT2XxRI0v1m9LMW3jD3cMsf/2JShS6/40cpqw54ulWOjdYrhjiP3Pz2UBmcP3vu95f1GT8y1jGBYPBGBdfvNFqUsf78HR7N38xC8/0+1LcbwteJRUIL6tBCGL9V8Z5GvZsWvBrf6bj/N2isCSPcywKDko00ggMEdXBhdPvnyi0FiThXG8LZDbAL7/fhiQox27xu8K63vk5mDd6WLmuRDuYH0gobS9eJS3GIu7h4j7IuHfevX1B6IKDqxve0xCAAAAAElFTkSuQmCC",1,14,40)
global.elevator = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAACIAAAApCAYAAABQgPsBAAAACXBIWXMAAC4jAAAuIwF4pT92AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAACIklEQVRYw7WYPW/CMBCGX6vMTChKmDuxINGF/v+hLCCxMHVOq4ipM9V1iC44hz/ubOoxX378nHM+2xERappzjgCAiFzVd2pAnHPUrNYAgOHaV8EUg/gQ3GpgikB8iP61BwCsP+vMmEGkCQlSCmMCCYUj1qwwahAJ0TUtvobv2TPymgVGBZIyMVzH0KTua2CyICkTw7XHbT9eXxzuMCVmkiA5E7c98PIxdvD77siHsZqJgmhMMAQ3CWMxEwSxmJCt1MwDSImJHIzGzAykxkStmQkkl7YtEDGY1HKgBilezJTfdUQ01RTbze4hW1atH4lQd02L8+UErmUcAGpWawzXHtvNDgBmMHKyqlO2ByEna9e0AIDz5QTuewLxH5AwVjM5E7KPCcQPSQxGa0Zjwv82h2gCkTdLzFhN+CGagWhgYmZKTHBLgljMpMqA1IAeQG574O3nHh5/RBozsWsxE9wHAByXJywOCBvhhyxzxjIn/D4mI5zQ/Ambi6kPEyqeNe/7E5WI3CzFbze7KcloYSSI5j1OngwRXH051cumCVMOwg+F3KYG65GSMJWEQ1WhhazkRqq5H4LI1qwhM7HfM3YvZ0JdxUszsTwTyxM5E6Z9TWgtCuWTWP7JQZh2ejJMuQxsgTDvffnf57IhNSFlnnj6aYBfUqZArMdZRecjGpB/PR+RBVDXtDgux9Hz6l0CUX2GJn/tUoinnCoyTA1ENcgzz1n/AD/28d3T0N7cAAAAAElFTkSuQmCC",1,17,24)
global.bigtube = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAqCAYAAACk2+sZAAAAB3RJTUUH4QkOEgsrrOkgUAAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QASABvAKgKRg8wAAACWUlEQVR4nMVYsUoEMRANh4WdlSLCYWFhcYIWZyeCoIKlP+Ahoq2VtqJ/IGKj2PgTFhYHot01gpYWIsiBjXZ2ygQnzk4myeQ24sBjs9nJezNJNsmuWdw+Nv8BvaMxXxoUEaaE86sdi/2jExH4XBtEVDAmlAINQiVcVzAUQFQYHEoJcnDx7ExxLDlyM28YYksLbSNZ97bnAD4SqI9kHrcm25wxT/Fg1g0huGDWJXzQVMLYnUgugftlCWsiDo1xyji3uqtLmxPuPz/aa2xmDmKUDzUqwvxB6vXQiNG2lNsTlhw4kQYazorw+GTLorSJvHzJ/EuY0JKJXTJzeV+5H8SSXNKWCGhOt2tnSDkM2528yYURgvHFYeTgygH8OELt6DO0IambrOPGrFf/cbj2W5YaMoMJJYmCBVcuaICvBmZEMw5lDfVg0DYkGhXW2MvTawXS82xh3gjvm1MTDuutjr1ifXt4xd2nxEXhkCgv9z6vK378HgNUC3OTsuBdHOtytbAUqXRP66Q2sUCc8M35LrzotgxjlSLgdZIPDQa4QcMT5sbFKRGdULRMr0mTNojN/pwFnhiX78Zc3en7nr1CHQf64ImS8vCl08sYlrrRsy0vU7TYzJXGE7ikM5knjKsVF0fDsZQmlyRKOYPCGNnbzoX7auAWG0P6DL8ugItyO8Mxxi2Mfh+V+FKknKBhfsY4+NHGyzhRUohxGLInV7ZFOCV0A934IGyTGpOOtq6radb01ADlQU4ivB3t4ugfAQygzvEH25vA7wjVj5ecAKiYJJj1u4kSaVD0P1dpfAOTStc3HbntvAAAAABJRU5ErkJggg==",1,15,24)
global.bigtubehurt = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAFoAAAAqCAYAAAAzikzDAAAAB3RJTUUH4QkOEg8z2+l9AgAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QASABvAKgKRg8wAAADWElEQVR4nO1asYoWMRAOYmFn5SHCYWFhccJZ/HYiCCpY+gKeIvoG2oq+gYiNYGPpC1hYXKPdNcJZWoggBzbaXXcyC7N8/5hJJrubZMQbGPbPbjLf5Pu/TXY3CdcevgjHXt/NFY+MtniCIRxZ3DvuIuQuTTp25MqtncGfPH8Zdb6+BOk1casQPJVw7KTWwZxj5z3hVifZSvbcjmod94LbhOQc2ZTYUh2VniK7JW4zkjWyrYriMVH6ZIU1xj0RHNj1q6vo+d2Pe6NTnZhjnZLYzXFbqlmqOmRUVTJ25uIEUFcPXBeKTpmmmNI6vXFdE823KRneqvK2xXpecV0QbVGGNlbOid0S1wXR/4N1J/rg25fhmJrBpxjGY4yeuN2JJsOEco9NKYu1jZHcA9cF0WQxQrSJKDVB5WL2wnVB9NnzW4O3jtsU18sreE0PiVfwVrguFM232qW3n9fKtWM1xfXy9Y5VsHlxNVtJGCNkvt61wnWhaDJWApl8KTj99P2aU110rR1em4JL1zTMUtyT2Uwa2pDg3e2/zv9+dnu9nIlDE5GF5Bzu/nBu24SZw3WjaDZSDz8yaYq6925jvIZlMmpL579//VGES+0RF7E15zqIq5kroiU5WKbfWF6duqnG2bxwbvAlsDkW+Z2tnTEuHSkHiaP9wa6IJsPENcL2Dj8MjuU5lvuDNRxZTv3Broi2qFBTTIqsuXng3aQdc+aKaOtwkCO1lOSYEkvLjPvPDB1INifO4yFbrJOWIceCibgYC3PBejIHFdfLK/j9g8uj8zrcjU8b47lXvx4PRzrH5/E6Oa/TyVgh8QrOsckRl2MjLseU+BZcd4pGQ3XIiad0jEyZnFwlNmIibtGTjYdVcHapaFSIpuKUsrQPPCW4iCFVXYLrRtH0Cnvm9YNknRIVUSzL2l4OF8dmOQ+U4Lohmt/KtE6nCJbXOEbJloHauC6IZgX8fPRm3B0UM4uaeRcRxcLY3XF7j9H8aRH3uc3dYIhx+PNlEGN0a1w3j3exLVbykSnlqRjBsMmxNq6Lz6S0GrGrXNuPfL60WGqrQRdcLyssuDpBv6eseMh2csjoietqxz93fM6yErfneF5w1QRaEax1XKrN0lFs6w3XlERtci2dt7hn3EUSO/a8/wH5o7VNuAeMYgAAAABJRU5ErkJggg==",3,15,24)
global.bigtubedead = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAFoAAAAqCAYAAAAzikzDAAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAAELUlEQVRo3u3bz0uUQRgH8O9IQYFEEkuSykIua+LFw3aIUlpEIWjrJoqJxz1If4CXIDoI3TvsJRCTpFvZyZANMzq0hB1ka9Fgy2Rli81YMCh8O+gzPu+88777rrk/qpmLvvu+zzzvfObZcfaVFZZlwbTKN1EGtN8LhWEtH/pPy92gl4A+7PVEGGgndKUWbWGgK4/832Nz6GptP4SBNtAVh672ZloYaANtoA20gTbQBtpAG2gDbaANtPlkaKD/X+hqYJundwbaQEMIYVmWVdVJOuyc/wz0ocOU0Z+v+6s3aCHE7n5z78aFENba5ju0nz4Ht8HwGF28n0lSY4ZGBzE7/QjlxHrlrgto2w0JYZ0fGMPr+Sl5817Q/LxtIJqBe+UMtIaRX8/IOD/Q/LpSuesGmt8gQQPA2uY7ANBCEzKdBwA11muCeE6CBoCh0UEA8IQmZLoOANQ+eHzNoNWB8qo8PzC2N4AJGUhgujgdtDpBXssDIQFAfj0joTm2bon4a6DdKlcH7YWpxvFzQ6OTeD0/Bb4cub3tA61h9EW7bTnV8+pE0DW6ieKxNftkSNAqzPjchQN3/PXRNTb4CQlNjSaVGoEsJJfla8fOZsvK+eND0PEaTRb1m1/P1Ac0AJwafKK9+Ffn0ZIdHkn/1L5+L/ZKC61W5svsY238TlODa86Gwo7nPV0MXtdC1+TpHWHPTk9gfO6CL1S/bev2FTmB92KvbGs1vc15BXuhltMaCjuOKq8r6PhqL7ZuX0H0UgRv+u7YLk6EFhFf7S3ZaSK0uPsz8QwPZ6bQcf+j7bW7t27a/vD1Rbvx4vuctq+eEzHXc27XA5AxDYUdXAxel2t13UADwOXeGxgeGUM83i9hCUoHrU6ACv188YEDmVc1raXp9Gd8aXnjilZqEuh66mttNYOrsag8fpt6WR/Q1HLZFQyP7B/H4/37v5eAToQWkUg8k+cezkyhOdiF6KUIkkspx46DoJ/OJdEe2q3wzs4WRw4dNofuORFDOv3Zdp6gCZnvOmoG3dYRwfDIGJJLKeSyKwBgw+aNV7oOlxr1xfv99D5lg248GUB7KIy11YyE1jXCVytYxVWh20NhbOTy+582a/3gn1d1Lrsiq1CtaF7ZtETYt2qTMi65lLL9zquZ5w20hrFdLOzuwxn2Ri7v2E/zCuZtIbmMM80BW+x2sYDjjU0Suab7aD7gto4ImoNdjuUjuZRy7WR2esK2dQNgw+XLEa9mFZradrEgsTdyeW3Ovmg3FpLLjn0yQatxbtA1fdahYgOQx36bGueGzJcPADje2CSx+bHfpsbRcfFb3hW6kti+Hje2dUQOhKxif3qfgtuTOzWnCn7QxoHV3F5fFrKqAew2eEL3C07Vyx9VHiQnwftF3y4WJKxXbr9ff7MqiesXoORNHtJ/WCqRV5gvdFan/Qakl4TosNcILAAAAABJRU5ErkJggg==",3,15,24)
global.bigtube2 = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAB4AAAAqCAYAAACk2+sZAAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAACj0lEQVRYw82Yv0scQRTHv9PZpTKEgFqksFAIyF53zSEKKdOkzEkOrktKOxOS61ImnWBQy/wDgYhss10WQfAKiyvOhePQys5urN7w9u382ts7zFTD3ex83ve9N7Nvn9Ja4ymGigUrpaIWaq1VYzCHtXa7AIBOO7GuTbMcAPDv70mUEVYwAVu7XScoNNIsN0bYDKiAlVK6CdBlgISXwEopvf/t50KS6fvnjyW4AccqpVjKEfMcV14Cu9RyWCi5fGu4aqW1DqpNszw65r61XHU0ONadIa/UAs8jxl5w7AazHiu6YP4P8Mp6ghdrG7VcVwcIANPxEMV1XgUDKMFnNcKWB9PxEADKYH6BLHI4LxCf6iZDqvXeXNJd0/HQGEQb0eC/S6N5mCo3Vyx4/dcNAGDr/KD0313/CMVogusPq/XBHJ5mOTZPL3H1/rVVsUw2MlIqpj067cT9duLgu/5RJU7FaGLmUvHF9sDMV169rDy7fNiLA699ukH+cGYF08bLhz3jZr5mbmDazAUmtbRmYWDpblIsDQOAZGkH+cPZ4l0tR21wKLm4Yp5Yc08ugr7d6JrfuWIKBymcGSwVF6NJCVqMJtYYu+CNwNyFHBw6w0EwL39cycWzm4Nl1svMHv9Y9Ze3BE6zHHu/n5dcy8+q6zhJxcnSDo7f3Zo9K2Dbu3jz9LKigseaXyAEtJ1lft9H11zyqMQcJ9uaYLFHLnn25Q+2zg/MfBbw/dc36LQTXGwPzNxa3lKxRwt86mkjUsKNs6mkPSvFnu2jrc5nS8znjDerXSWuT1XIG7bS1nqBcDjVVr5yxlUmyVqMQ50dAQBoWnHyytLWjnA2X3jjRYYgBCSYrwET1W6KbTXVaTmpp2qwPQIaBCLa/OkysQAAAABJRU5ErkJggg==",1,15,24)
global.bigtube2hurt = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAFoAAAAqCAYAAAAzikzDAAAAB3RJTUUH4QsFAjQdimro5AAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QASABvAKgKRg8wAAADGklEQVR4nO1aPWtUQRQdrOxSaSGkskihhcjahYD4AZY2glgsIuYfmC6EJL9AxEZQ1D9gaSFio10QLFJaaEBCbLSzS7gPznL3Zr7e7puZE8yFy/uYmXvmHs7M7psZt/L4qTv18p5d8TDTBu+gc4c5zo47CLlDk64TuXZ73Pna1jOvo3wI0kviFiF4VsJ1kqEEU66TZ8ItTnIu2fMmGkqcBbcKySmypWNDJWo9RnZN3Gokh8jOVRTmROszK6wy7hlHYNeXR973nz7vTFzq+FzX6RO7Om5NNVtVu4Sq+sydqThOqasFLoWiYxZSTN86rXGpicYwFdND1Q5bXY8Vl4LoHGWE5sp5YtfEpSD6f7DmRO//2O2usV/wWUzHA0ZL3OZEi+kOpf42xczX1kdyE1yWD5aS7iIfLLVwaRQdU16puDVxKYi+/2Dcue/XXHcYCdhEfGRJLMRlwKUgOmULG+87RwLwy2+/de9PBC7T6p3Maw/3r0zNc4tLo+BCjq+OjpG7elcDl0rRohRc4Uuvfk6UZQ3vpY5uo2Ox4FIRPTp7K1i2ePGC+736cvIs9/JO/CTgUhGtbe/7r2R5qg4TLi3R1myCUJUv6ZhCW+HSEm2HZmi4DjV9lMalInrn34dgmVUWnn1DORanFS4V0XboIZG7l8bHFIR7uUo5Oy4V0T5FSDJ4bxWEuVLK55mXa+BSEe2z0HC0Q7fvdFEdl2X1Tr6mnv950n1dab/55fzkKo6vM/sez3CJlXvcoAYulaJf3zuYGoqx/6t23tTPEkNiUeEyHDew6wVWLXKF6qyydH2trNjacAtcGkVj0/Pci0dT76Gud7tvjikt9NdLYuRuotbCpSAaJ3++3tjunv9u3pk5FtpKLJw0YsBtTrQsnqNj0lncX/243rk2TYQlBfVBnpTjPrQ5WxWX6V9H3+NYOce0cg85lsZtrmgxqMvuQGNYw63pMl/bkJqb4LLssOjdCrm3uxexnY5QO7l3iR2WWrhUJ/6RuC/ZXEd7xGPBDXagFsGhxK3achLVbdlwszpRmtyc5HOcGXeQjp162o8AQ0Iq0b5DGpEAAAAASUVORK5CYII=",3,15,24)
global.bigtube2dead = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAFoAAAAqCAYAAAAzikzDAAAAB3RJTUUH4QsFAjUswq/ZnwAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QASABvAKgKRg8wAAADNklEQVR4nO2Yv2sUQRTHxwNRIYhBY6NBEFGshBALCaYSsZF0IU2wshIt7bSwEezEKuI/obETCQlel8ZCIoLFgQHFyl487y2+5bvv3szOrfvrNm/gy83szHtv9rNv382dW7773JmqV/TCYWRr+obaqlLgGvSCoP8XsAGPAF02ZIOtgK4KssEG0FVDPuiwDXSdoOuCfJBhG2gD3S0ZaAPdLRloA90tpR2DbKA7IQNtoLulzMAgG+ip11SAHrXaH1LZMTsDunQwE/iL2l/bQNOmcePU//rj8zB0M2ij2ReJuba+Gow5aexWgJabu3rzTmbzIdA4j9JuPBRz7uzFjF0MaFyXF7s1oHGDDJoh+kDLec02BBpjMmiGlwdartN8tAK0vFEJi8QQEZhmp4EO2WnZSJAYFANEWFq2Tg1oX+ZqoEMwpR3O8RjLke+1J1AIWZuXD4LXaA8qU1KaBi3B3Ho1W1jsDx8SXpO1lIEwJNL88pGJhLYs6Zdi9dy/tv3ywdBV3HwxRhDcvc1riWT7fflwrridXH2TSvPFbXTzmfHR84NU2P7M9rzSbFn9wevxoHVlcyirOZNv9E+XJs5i8itrtZbBZ1aOlSItyx2XjrogS9gImuE8fPJiDBrP54nLBfmYv7Q4ds2JLz56vX3AQnO+9WhDwLFW98ZzvJm2cWHHfR98Svt4PWST5zP53Hjnnj2+n/RHD/jQz29f0jXXj992p/YXMnZ0LdTkPI7J16/tGbd0biUZ7+3tJ5+tAL22/jQRNwKz8P5RLkhstJbsSOiXxlsfdpMxQZZ2bze3kk8CRMAQWh5wXkMwWdho/HG37zh4o6WDXnF6ralsUJ/HmmQJ4ZIgxb6w78TRbubE3PDK4lL66ZMsCVwmQjbsM/Nrs8kvQ3nMIyBcpxmsFNZdFNrJPkKWP7sJioStnadlLcYjnLQlfwi5NaAZMGYiQ/JJnpElXPQXAs1C2NrZmOFr52SfnQq66f86JGwcx0ra+SBj+eDsw+z2gfbJ58cLukrYPsjyv4+ikCVs9hcTsyhgH3AttncTdQH23bzM8hjAaFs0JoOfBK60V2PEbKRquLEA8tTmuKVszJSvv08Z1rlxgazLAAAAAElFTkSuQmCC",3,15,24)
global.VenuzCar = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAQAAAAAgCAYAAAD9qabkAAAAB3RJTUUH4QgdDywBxqW6AQAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QA/wD/AP+gvaeTAAAC30lEQVR4nO2cv2sUQRzF77wrDrRLESs7IQSE1GKE/AOCEPsgivY2VilShYCInXbpIyiWNhaKtZUEAtbaKwga1nzXfO/mJjP7c2be7e178EmO282+b5b9vpnNTm5w++GLASGkn8ALIITggBdACMEBL4AQggNeACEEB7wAQgiOSwOP7mbPMhvfvjG0f/1VZpPSn6L6IG8AuIQMhKsb69NQOLz3MSelP0UtpXxTg+cPrmV1CD01+Xywninf3m/PvTbR99FTKUK6SK0ZQJFizQxk5P/+5ev0tSl9X8RbBYpqIF8y1J0BhJwVHExWKo/8Rchx2tTQFnS6E1JG/uXmaJLdH1+eEuLiV8zjKvaUXRtWQiNkDS5vVw1moBT9jJynqvsVbVea+Ff53cr87YB2nbuzseECUp/rfRuzThe+2zZzH6mvib/sU+RftTH0PJnHdtVke4duUNfg56Kp90IFgNkAixgAoUH5Nw2AOrQNgJj+lRqjoW+MACjrB9ku11BnAsAuwjVixQ6AMv/YiCfK3w4Al3/qALBrYADMAqDKtd6ZADAv/EUJgNTNb58HhL95DlLPAFyNmNKfATAj2FMAiqqq7Xdb6BKoc/UyAI6zU3QJvZU2//Hf31F9Xo5+5oiPIt4Mn3n1MgAorMz1GxRWvQyAteEIXUJv9frOh/z72ngS1efx6ZUc8VHEW/2p/+plAFBYfdr9gS6BOlfyAFjE0Rf9N4HU/jd2VnJUb//8mrtXjn1/fmtvNceUXQOVSIh1AFwINP8YjguBLtYR079rjwHL+kG2d2YdQFEAcCkwlwIrXAo8643oS4Fd8J+B2gdQ6IuBkNB4NyAa36TOZwHYoE8qIV1hXPNPBl69GT4ZhjqWKXlmrJ8JoK9V5mcFPD15FMWfopZZrQIgVtPb8oXAztHmmf9mihIoailVKwBSNbxL0vjTUf4EVQVFLZnQ9yCEEBzwAgghOOAFEEJwwAsghOD4B1oRwJUOUQzzAAAAAElFTkSuQmCC",8,16.5,16.5)
global.VenuzCar2 = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAQAAAAAgCAYAAAD9qabkAAAAB3RJTUUH4QgdFzkEk09aUgAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QASABvAKgKRg8wAAACl0lEQVR4nO3cP2jUYBjH8dSKFNx06aKTgxYFB5FDxMlREeVwcBSddHJTqEM7CF1E0NlBcJCqiFtxFAdxEBR16qKDk+6CRN6UnG9e85o/l7y/95rvDz6lNOGeJ3fJc7m79JJTV+8lAIZJ3gAAHXkDAHTkDQDQkTcAQEfeAACdHYknBx7eSl2+dfvImUcrqStkfUIGEd9kuLxzd1qlz8m0trA3tX0bjQq/G+rpCcw674I6A6DPYVB18Ofyv6vvSGAWeRc0HQBdD4MmB79LfacCs8K7YJoBMO0guHtlf+uD32ZuZ5oepqV+cIEq2Y8udvY6fINhc2OcGvY6IXv4ufk0tXvwuTFarL1enT7a1K+zjU3r57VtSZL8483aUunfXSfmF7J1fcz2Gr79wDD9mdtpWt+sk9cv264mB0e+r+S3be63qtpdH6B1nuiMtk+4UQ2A/IGPdQB03Ucs9esOgCb6GABNlG1T0yHgDoA6VAOg7Utf78eAIfPiydsJRVYvXQte/0v6u1D/+/tPGUXu3349qR+ij8/ryxk7xz7cSUPVJ38TfADYO34s2Xd4l7T++MIeaf3rKyeTxaNLBX2mrIbbAwmTKM4ACCGaDHIAxHgWMqSEOM0/ff5lxn1pw8uLYgY5AAghWxnkADg4N69uYdAJ8Tr/1fOzGfe9Dd5fKGaQA4AQspXgAyDGZ9+vH39J668/+yGtH/pjwLIabg8kTKI4Azh38fiEIsuPHwSvbw9CU195ehr6Y8BD49WMnXdHbs5xmi5ITFcC2uvEeCUglwJzKXBV7Zm8FPh/G88/A7XX9c4AdM27gH8HBrY/7wK+EATY/rwLFAe9ja8EA/rnXRD6gHdxag/0T94AAB15AwB05A0A0JE3AEDnD6s3TE78d901AAAAAElFTkSuQmCC",8,16.5,16.5)
global.VenuzCaroutline = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAQAAAAAgCAYAAAD9qabkAAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAAA+klEQVR42u3cQQ6CMBBA0c79Dz2uTNwYxBamtO9dYDBhvhJDIzMbsKcQABAAQAAAAQD2DUBEfK1CZsblF1U8HwTgR1csZPV8EIA/jFrG6vkgAJ16lrF6PgjAIGcXceTsGa5BiJg6AK21sr8BMjOuWHie4x3IO++Doyj3Xkvlo/DpLzsBYLcAHC2KAAgAi98DAiAACIAAVAWg6qefAAmAAAiAAAiAAAiAAAiAAAgAAiAAAoAACIAAIAACYAERAAEQAARAAASAtR4FBUAA2DQAXgb6mOF14DbV54c7ORAEBGDMAjoSDDYLgENBYaMAOBYcFg8AIACAAACregEdBb3Q7dGhowAAAABJRU5ErkJggg==",8,16.5,16.5)
global.ClamMimicIdle = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAB3RJTUUH4QgMCionrJxqawAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QASABvAKgKRg8wAAABDklEQVR4nGOwS53IMJB4QC0fdcCoA0YdMOqAoe0AIPiPjmnuAGTLwupKMDA5jiHJYmTLNp8+ioGxOYZiB8AsRrYExn769jUcY5OHOYRsB4A0I1uE7Ftky/HJg9j4HEG05cgGYrMcnzw+R5BsOTEOIMURTAw4gJGSGi4psgBO80jxPShR4fM9DMMSIjGhgDUEqO17fObijAJkcO7eLYbFm9czxPoGEmURSB1IPUgfIYDTASDNhRM7wRgGkH2ALA/CyJYhq8MmjwLwFT7oGD09oJeCyPGOq6gmqRzAZgixRTExlhNVEiI7BJuluDCxdQJZtSA+i30K0kmqFYlyAC7H4MIkmUeqA6iNRx0w4A4AAM2hpJlLUBEAAAAAAElFTkSuQmCC", 1, 16,16)
global.ClamMimicFire = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAIAAAAAgCAYAAADaInAlAAAAB3RJTUUH4QgMCxoplaAbqAAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QASABvAKgKRg8wAAADP0lEQVR4nO1ZvWqVQRBdUlgLYmOXFDZiY2nA3ioBwTewFsG0FnaWaY2N+AAJ5A0EsQjkAVKks5I8w/VO4lzmzp2Znf3J7kZ34ZD7ffszs3vOzH67CS/eHIaJ/xfdHZiYAkhzOIRFDL19vEvo7kAq6adnPxa/rn6rgPophn9EAJT01x/eR8mnIsD2Uwh3VABIvEU+1mt12A+F0HtOI6K7Axr5QB4SSIlE3Hv0cAO8De0PmCLYxFYYvLza2w8nX76Gb6fHa++0tligPfTT2s5yU4YWABBIfwOZMUKxDe87i1yGFsAsDUrvPSj2HSDt9YCd+weLvd3jFeBZazv3/4rfAN+P3i5iqK5SVl5ufw5PnzxfewfP8L5V6THvW7HvjUYEflFbCJUuYqB/LPI5pExQ6od3HWrNu6V9l0F6DtfO3bwOj1+lC8JFwMkGW1wUtcmXFp0fOelxs8a8W9k3jXKiLfKtNqUXMSsRhN11opfPML70vib5dMHpb2nevG3pvDX7sRtQbwC6yS8RQDURMKJpyuMCqEU+nYt186jV587b4iC2/ilrLxq21OW5i7dUmrsYMCZN9Zj+0V9eVyP6WhDQOwCHvweAr9slmeHk48+Nuu0H+2EZ7dd/eYH20K/k6/zZzuPcrsXj1LIdHc+TAUr+G1eSAQLeBcCevoR09ufRvzoJ/O2TkwlCxy3Qsl2agSUf1AxwfnkR3h1+uoakIloPgGepnVTvKRj5VsG7AH4nwEtOJmgWgQ1sm+NqUUcjD5+5GiHSEFx12hjBGY2SH2grdg/AM0Cq3ZYR2DsDmwuvkcjJpyKw+niJ4D7gWFQEFmj7HNvWopYIwLMFon16rpds83M/t8f/FY71SQKg+xnPAlIG4NFP98QcAdC+nFBLgLRt6pm8dQR6AlDLwBxSBo4FoMsJ6SzMjUgfQNLtVGr6x7FzBZibAVpFoHf9LbI1UXjW3x2FErgDGlLI1+znCjDHflDu263tIBaBOGbq/Hk2ToFH/O6FyHUgdeKS/RIBltrXUmlswXMyX0yIOeTH5p/kiEcM1GjuxEeyn2J7BB9SbRc5o6EG6SPa99gewYek8W6TrInx0d2BiSmAiSmAiV74A3lwlrkiBT9cAAAAAElFTkSuQmCC", 4, 16,16)
global.ClamMimicTell = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAeAAAAAgCAYAAADKS6uVAAAAB3RJTUUH4QgMCxITm3VIEgAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QASABvAKgKRg8wAAAD4klEQVR4nO2Zwa0TMRCG98SZGmjjSbTAjQ7oAK70QCUcqIETdXBC1ABywNJoYnttrz3jxF+kT+9tdtffP14ns0mOtx++HAAAAGCLewAAAIAdcQ8AAACwI+4BAAAAdsQ9AAAAwI64BwAAANgR9wAAAAA74h4AAABgR9wDAAAA7Ih7AAAAgB1xDwAAALAj/Scexx+NaXBHf8ptlaHktsiAHz9+/Lv6Szm6xumVvv/88Y7Zk+Dl1xOdcqcyjMpR6541D/jx48e/q782R4+3SSxl3358vyMVZmTh1n7plY7w9+fvX3fI/fH/S3dHyh8dJb88Dj9+/Pjxj+sDo/tPlTzVgPQkpPbHICMKt26A4ZyUJ+cu7Q/PtWZI+UuLr3QMfvz48eNv7wGz+0/TJMhuXypen/NoDbDk7lkArRnw48ePH7+P37L/uAdY7QLk3Ff9tRnC/ty54Y6q5I6U7tLw48f/zxW2d64fv3//cQ/QehGuNMDayd95AeJv8+vHbvVf8YftnevHv57fuv+4B2hp/lcvwOqfQI//vxfk3GdzX3N8T/3efvl48/rTjZXq1w3Ye/5LrHL94/YjrD/8e/kt+497gJUaoOcCCM+/e/l6Q44Rx9G1y/0plzxP7q+tP2YJePjlueEh8wRCE7byl+pPPSz9pfqvrP/Z6y/87+n3rh//2n6r/uMeYJUG6L0AZAOWTUY2Gu2O++MxMkM859XxciNu19Qfx5ZZrP3y3FwDtvLn5j/1iDdQFv6z+sNffQ0t/XKMltffDL/H/ON/TL9l/3EPsEoDTC2AcI4co2cB6DFK/rBPj5laRNqtj8+d0/oCKI1v4ZdjyRuClHu2X46Va7yy0c3018x/fE5/Y2Dlj+fI/SGHtd9r/kf6V3j97TT/lv3HPUDNBYjk3KkMuTF6/Lnxchdfz1uvXzZvvaBKC1Ae23IDsLpfuvS2R/36U3lsdKvMf2qfpT81PzP9en14z/8of+pnF+vXn7y53OX9J9UHRvefphCpT7iywLMAZ8Xn/KmCdcPPHXPVH+uTnrit5yZ37NX6pUvOr158eu51Rvz4Lf36DXKmX98Qhe1Z9ed+Jpo1/9LzSNf/Wfwz+0/XnUAcXFM6vrb40iS0MsqfG19fgFKGXv+oGwD8+J/dn/o2YoZfe+Jv3N714x/vn91/TkPUNKKzxtNa/Ir+3gswwp8bv+YGAD/+Xfz6a+/4qXu0X3/aDt4V6sc/xz+z/zQFqWlGUtpbOH78+PH3+EMztPDL3/plA/auH/9j+S+FyTGiaPz48ePHj/+Z/dOCAgAAQB73AAAAADviHgAAAGBH3AMAAADsyF+BHYGgR72dDAAAAABJRU5ErkJggg==", 15, 16,16)
global.ClamMimicHurt = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAGAAAAAgCAYAAADtwH1UAAAAB3RJTUUH4QgMCxw53k2sSgAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QASABvAKgKRg8wAAAC10lEQVR4nO1ZvUoDQRAeLKwFsbHTZ0gjEd9AciLYWdqaRrGz8AXEVm3EB8hBnkBBLHwIqzRKHsDqzBxMmEz29+72do9k4CPJ/tzMfd/O/gWOLh5gjXiIHsCqw7tD4WBBAwYobIhNauMCuJAeUgxO7vjro5hMf7XA+i6JEYz4JoTgpJ/dXlnJ5yJQ+9SFaIX8KiIQ8SbyqV5XR/1IiNhkOwsQgnwfEZAsJI8I5EQSNnd3liDb8P6IFEXYgMTtdJBB/vwCr+PRQpmuLRm2x366tqlY0gIggfw7kmkjlNrIvqla0gLo7G/yU8JW1glLeRHGeVs115MN+qM5yFTtU53/O7EGqCw7zEvYykLY+9OwsMHrgSZ1Yo1+ngW2kS+hygSoOfqBHexoR2UCeBwErc5jka8SQQqwv3Vd7vnxUydAHfI56XTW0J07ZB1tf21COAUSi/wlEaC/MNrxN76sqrwJ8iXRJvJNbUwHQeeAYpG/IIIgmqe6FKBp8usIYBKhMxmA6cynGpp+sE5OQ/i96s6Hnqe72nC5izLdW8mYrLugt8dLv1W94f64q5i9EOR3n0t1e9sZzEZ7+SkN22M/711J2xZq5DeRCUBnAZzTZ+CjXLcIUzn18c0EUGRAndtYWwa0Qn4VEYBt+XQCIPClZJkUwEcEEoBf4qmmH16vIlteBFJ95wVQiSDJryuA9Eu/Jfnki9YcLoLuGU4ChCDfRwROAn8JLoIJvL08IPn6VpEoyecimPqoYkj6KuL8+KREdnswL+vN1vSeZl2XddiPnlHH//c0n8dwP7wpIWPA31RHvrGf1X8XMoCnNE9xOfpk+vPvVachObXwfb6MUZ4B5Dqh8p/8GqB6KR8C+JVAHf8q6P4eVf0zp/NvDCIW+ZwEYP8NVyGAnlHHv00IG/Em/06BtE28jggXMnxvI2P79w6mLdJdyNChS/6DBbrGWoBOIHoAq47oAaw6/gERnTQHQIK3LgAAAABJRU5ErkJggg==", 3, 16,16)
global.ClamMimicDead = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAMAAAAAgCAYAAABEmHeFAAAAB3RJTUUH4QgMDCgdXCut6QAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QASABvAKgKRg8wAAAE0ElEQVR4nO1bPWgUQRQeLWwNBBE1CFpFRLATkqC1jQko6cQU2ogYC20tUtvYRhuxs8lBSgVR/CksQxoRAkIKI1FsBKvz3pEX3r2bv519c2/2sg8+7m7fzLyZ7/3s7O6tuXznqWnR4qBCfQItmoWedEPQnmOl9VTt0I2QcXaAtn0N/una1r987G7v/nQC9Dm5kOZfjPScztB2gLZ9Lf7pmhcfPwyunXKA7SV4oHzeWLrZvfdg2QnQV+E/G/ESjtB2gLZ9Tf5x3b61o96lw37IQyr/ENTn5i4Fg58mAbYP8T8S8lOcoO0Abfua/MNcYe44f7oOxJGTx4bA29D+gCocYOD7gh/1Lh32w0SIToAc5FdxgrYDtO2XxD+ujXJgWzvngPetyj8ELwYwDWTE5KkTQ+BtaH+Azf5hU7hcn18wnecvzMv1tYFjrrYo0B76udo2xb6mwPzpd1hLaD3YhvdNlbev35idre9m89vXgWOutijQHvq52qIUnQAuB/zb3umDCh6TdEAJAXCQBQKYfodgDgU0tuF9XVJ0AoTk6pnVfYxSfAk4DtLbGhx6tfLELNy+JTIejAPjwbgiA0pKiRdhdB9q22fOz645YWtf9QIsZB+F2kWRsl8y/1WRyj/s2217/apw7f8bcQ3AZervUi29hCzMdfoIHWuy4FlAQoqt/iCjqkJVsp9WAV/lPTvxqH/LET59ldjUeA4QqvwckvZL4z8VdfiXOAP47I/ECSmLtzkBZX+7Y2b7CQCfrgBMJT/GfkwC1rVfEv+hbahk8EslQch+difUWbzNCZRwQx55DziilxAS5A/ZJ4nmSsAc9kvinya7DaCXCv66SRBjP6sTJBY/4AQSaFh94TivwtBOinyX/VACStsvgX++ThewbQ779AGZ7cEXXvDG2s9GvqQTzN4dCRrk/UqzF2jwyXUpdx6q2ncloLT9EvkPnQWk+cfgnjw63T19/Er34vTiEOA46H1PfisnQB3yJZyA5NuCvL/V2INNJ+EEbful8h/cBgnyHwp8XyKE7Htvg75bvd/16WMldZz3z5aBRNNZ+Tyku3B+xvsbBPpBfxgnh/2piRmztdvpf+awXzL/MSLBfy+Izc7GnyT70A/6++w7E0CK/NTxkHyf0AD0SYoTYuxj0NuCv659bf5dsrH5qZY+VjD4JcSXBI17EEYlNgAlhTv47rUPXn1TxVcAYI0u2KTOWYDLr98/aumHJNe+s85+1JC/4+L+E/egMbfh6P6cjmMS/g5N7dM5+EDbp9jX5p9zILH+2LXTfT+98EXA/j4E2p6OY5tDkQ5A8gf+W84ItRHPHcbHqJoAWvZL4d+WAKEk4G1TCxC91UmTAIPZFvg8YfgYjUsABNxmpN/xNw8+quP96pwBRm2/FP59BYAHuk1XpwDRyg1veNHv+JsHP9XxfpUSIJcTYk+BNifw1xB5cHEd/V3n36Ba9jX5jy0APPilCoDtLMBfg+TBzXX0t+926MicUMX5lARD3s3lcL2fS4FjNNG+Jv/aBYDyb3vqy98DdrUJ8Z/dESmOdxHBnWIDkl0n8Eqzr8W/dgGw8e/6GwSv9rF2szhDwukxZLgwzvY1+NcuADn5z+aoFuMJ7QIgvh7tCbRooQn1CbRooQn1CbRooYn/vJNorv8/DvQAAAAASUVORK5CYII=", 6, 16,16)
global.flagdead = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAMAAAAAgCAYAAABEmHeFAAAAB3RJTUUH4QQeFCcTEd4c/AAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QASABvAKgKRg8wAAABlklEQVR4nO2bwU0DMRBFHVrgRANc6QAaoAdOnOmAAx1wpg0agEq4ISGlhmUt4UiJBDLZ2Tx79430LkiZ9514FsuEdH3/nCSOsYZCC1noDK2DB1gaedPdXJzjA9DCENL+qoxzvOnUwml/yXB3dYlvPqnjLAXX+PSLbtmVf9z86eNri2aw/lFLevrRfumPuEY/m486/1L+7Kv5mbRJ+BHo7XObG2+i+/biLxmsPip8ANZWw+3j3rBtXp+GOX3vLw9V/efOsZiK+lWS4Os/2l9oIYPUE9PE8/9eFvpDlXpimnj7sxsGB6AvYpp4/NkNgDdAfTG9wcqf/sWbN37hFF4HLQZvgYKq3AYd3grN7bMmVsQTcM3HH8qrP8YfEoDegC34yQ3w29pP8Z785afXX/X6iA+f3nz6mQFoff1VPegA+pftnzObA6BfPzUAS1i8fv14AP36ST8eQL9+0n/UH8LyV3Lzv/5RpV9/mH/N069f/9EvbOHLZ/r1T+2DhBdpBTyACAkeQIQEDyBCggcQIcEDiJDgAURIvgGEz4O8DABCAgAAAABJRU5ErkJggg==", 6, 16,16)
global.redflag = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAA8AAAAAgCAYAAADdehGEAAAAB3RJTUUH4QQeEwoJydmp7AAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QASABvAKgKRg8wAAAEM0lEQVR4nO3cQXLUSBBAUd+BYMEBYOsjcBM4EWc2aFFBklFS246qzG78Fj9m3Iz6VUnqiUj1eJ5eXl6eJEmSJEn632tfgCRJkiRJFa19sz9vN2rZDJ/P5/P5fD6fz+fz+WfHrF7A9y+fWk8An8/n8/l8Pp/P5/P502NW4kc/n7+1PAXIfsfJv6f98/l8Pp/P5/P5fD4/HbdyAb8+P/9T5YnIfvVFONt/h//j89eWG5DP5/P5fD6fz+fz79nfsoCOQfDM7xrAOwfgLv+48Trs7B9/rf4Q3tP++Xw+n8/n8/l8/slxqxcwioNYxTDy9PT3K/C8hqoBPPodA/jwP+oAfk9+xwDO5/P5fD6fz+fzbxy3cgHH8HX8EnL+Jq5iGMnDX6U98/MQNgbU3f5s+N5tDyM/+BhulX8PA3DXU7B72T+fz+fz+Xw+n3/P/jL8GHzjLyDHIXj3yZj5s0Gswj8bAnfeFNmP53y3fbX/OBRWnP+Ob/75fD6fz+fz+Xz+4/hL8KP8f18eQ/Du38fMfnSq/XER8gAeL8rx97v9/PAh2qvPxczPA/C4F6rOf9z/7g/hrf3vtPl8Pp/P5/P5fH7DADz7prVqEMl+HPLyE4EdQ1j0jwsQ1xGHz/j66gF0ZpzZOwbwq2G/YgCe7bHqQzjzq/8FwOfz+Xw+n8/n8xsG4LPhc9fwc+bnn3cMftnPTh5Cdz8AiMNmHkrj6xV+1d5vXf+d+77lV3z7fGv/fD6fz+fz+Xw+Px2/YgHxPz2NA0AciHeegOzPhuAKPw9/Fecg+meD/86HAMOf3YjV1382gI+fd/qze/74eZd55ecnYnw+n8/n8/l8Pj8cv2IBYwAai9k9dF351et4zf6rBtCZl1/f7Z8N4BXXf+x3fAgq/dk532Ve+fF68/l8Pp/P5/P5/HT8qgXMhs+qJwDDj691DGDj5+zvvCnOBuDxFCT+s7v92RrG6xXnfzZ47/4m9sqvvv+rbT6fz+fz+Xw+/9H8ZXh8reokzPz4Z5XD15kfh87VA2j2z4bAyv3nNVRe/3zvVV//6O/c98yvPO98Pp/P5/P5fP6j+ssWEF+rOglXA2j1BTj7844BtGL4u9p/l58/BN0D+E77yq/6PPD5fD6fz+fz+Y/mL11AfL3iJJz5Vb3G37m2R9h/tT/uvViVX2He8quevvH5fD6fz+fz+Y/oL8Or4/P58+Gfz+fz+Xw+n8/nn7zPygVUxufz+Xw+n8/n8/l8/pvep3sBfD6fz+fz+Xw+n8/nV/jvxn8+f2s7AXw+n8/n8/l8Pp/P57/5vd67gP9h+ufz+Xw+n8/n8/l8/sfx331g5wng8/l8Pp/P5/P5fD7/rbUsXpIkSZKk6toXIEmSJElSRe0LkCRJkiSpovYFSJIkSZJUUfsCJEmSJEmqqH0BkiRJkiRV1L4ASZIkSZIq+g2/HvJ09OrAmQAAAABJRU5ErkJggg==", 30, 16,16)
global.redflaghurt = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAGAAAAAgCAYAAADtwH1UAAAAB3RJTUUH4QQeEzQuLRYH+gAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QASABvAKgKRg8wAAABiklEQVR4nO2Y0W3CQBBE3QPigwKSX0rglyqSEqiEPtIl6JAWTVZrywm3M+bukEbCMjC78+7WxtP58jMN6SQvoHdV/bEbvCTNTNPN9C7+zQE4HXZSAH/1TwlfAcBW3vfxUwLA+6+tIQ0AG0Rp+Lo/PsUeRd7fapADYEGIAlgbQvMAGBBwBHztPx5iQvD+a72bAlCat8YRAgsA+nsAcyOREn42BLv7wAsg83qA/rj60XtuR6SEP3cuq/m5uw/bBUVZANC/QDAvhIBQyvt0AMxd4FcXBu6vBb752v4FANYRjSO/GKgAslZgNPfx2JTp732iURR+nwUgo3kLwLY+ykNg+PuVv2YENrED7O8/ygPJ3AHoH/ku1VAVwBKU7BX4a64GQbD8IxB4XBXAUsCq8PEc6/ZzyR9DpwJgaOtPPz2A8DMDQK5/2qOIEX4d/wFgABgAXgpfAQCfvSgA1PR/GQC7eQughdX/bwAIQRFAkRJATX9J8UMDwGYkL6B3yQvoXfICepe8gN4lL6B33QHs7uLd0KXwrgAAAABJRU5ErkJggg==", 3, 16,16)
global.redflagdead = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAADAAAAAMCAYAAAAkuj5RAAAAB3RJTUUH4QQeFCssCw1+zQAAABd0RVh0U29mdHdhcmUAR0xEUE5HIHZlciAzLjRxhaThAAAACHRwTkdHTEQzAAAAAEqAKR8AAAAEZ0FNQQAAsY8L/GEFAAAABmJLR0QASABvAKgKRg8wAAAAgUlEQVR4nGOwS53IMJTxgDtg1AMD7QBKMRMDElDYMOW//4Z5KBgkBsIMgxXAfNIrqv8fhGFsZPE4UVUwpiSkYGbA7EG2j1h9eJMQTCGyJchiuAxG9jxMDz7HwGhCapExPg/j9TUhx2BzNDViC59dRHmA0mRCTTMJYbpZNOqB4eoBAK1FpTaNE4dSAAAAAElFTkSuQmCC", 4, 6,6)
global.blueflag = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAA8AAAAAgCAYAAADdehGEAAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAAFFElEQVR42u3dsU4cRxwH4LnKJSiOLCUVNMiukKL0CVSRXwKlNUXewe8AZVDeIBWxGyP6FE4VKU2uQznpJFNSbao5DaPdhdg3/72Lv1+FMeLb2d076Tczt8y6rksiIiIiIiIi//fMFGARERERERFRgP/rL5vNVr+s67pZ+GD4fD6fz+fz+Xw+n8+PKsDfffU0Xd8sJzsBfD6fz+fz+Xw+n8/nNy3AuX2fHB6kX/74K3wWoPajL8CmjZ/P5/P5fD6fz+fz+Q0L8LMf/773vcXFftiJqP1Ie2z8U/h388t0e3UafgPy+Xw+n8/n8/l8/ib7TQtwZBEc8qNK6CYV4Kn8naOz9GTvZbhd+3fzy5RSCn0RbtL4+Xw+n8/n8/l8fkAB3jk6W/07H0jUjEC5BP7rFz/dO4aoAl760TdC6f/2zdvPsoBvkh89C8bn8/l8Pp/P5/Mf9tdagE8OD9J8sUzvn7++txL3ZO9l8zKS/Vz+Iu0+vy5huaC2Oo7s95Xv1nbfDEz2y7T2N6EA380vJ5kFMwHB5/P5fD6fz+fvxxTg/PStvWdPVx9ALrejti6hfX7k54FLvyygpZ2Pp8V5qP2y+Le2x8a/uNhPuRS2nA3K/vvnr1djj3wB8vl8Pp/P5/P5/O3wP7kADz19ud4S3aoAjT39a/f4vIv08+r37dVpqpfj80W5m1+mD+9ezVr6+SYo3Wyv+1z0+XUBXlzsp52js7WO+7Hjj9x63zf+yK33fD6fz+fz+Xw+P6AAlyuMuYDm8tm6iNR+Lt23V6err1uVz9p/8ebb9OcPv6+Ooyyf5fGtu4DWq91jdkpp7QV8rOznleiWBbjv+ke9CPv86DcAPp/P5/P5fD6fP0EBLlcYyyLSoniO+WUBK9OygJXWh3evZrvH5129FbrlBEBZNlO6vwW8npxo7fd9Frjl9ueh699y3A/5UQ8BGBt/9BsQn8/n8/l8Pp+/6f5aCnC5/7osADmRn/8sj6E8KS0LePZz8e8r4C1XwLM/VPxbTgJk//pmmeobMfr69xXwlqvP2a///FK+//75eS/k8w+lX26/j3oD4vP5fD6fz+fzt8VfWwG+vlmmlFIqP/fbqnSN+TlRx/GY8UcV0D67XI2P8Osi2PoeqP3bq9OUUkp9q/JREzD5nLe874f88nrz+Xw+n8/n8/n8xgW4LIFRW0CzP/QArqgCVv7JofoBYK1uiqECnFdAy1XI3ePzrqVfj7vckt16BXhoAqD1SuyYH33/Rzx0js/n8/l8Pp/P32b/kwrwQ+Uz4gm8tV/+X/46onwN+eVK4LoLaF/5jlyBf8zkQ9Tqfz3+vBIcef1LP3L2q2/ygc/n8/l8Pp/P5wcX4NYnYayARuQhP5+L6AJa/swUExARkw+PnQCYsoBH737I/hSzb3w+n8/n8/l8/jb4ay/AZQGaYvvzJhXg/DNTrEBvyvij/XoCoOV9OLT9PeLeH3sDiJh94/P5fD6fz+fzt9H/6AKsfPH5m1n+pyjffD6fz+fz+Xz+NvgKMJ/P5/P5fD6fz+fzPwtfAebz+Xw+n8/n8/l8vgI8hp8cHqT5YjnJCeDz+Xw+n8/n8/l8Pj+sAJt94PP5fD6fz+fz+Xz+NvkfvQX6+6+/7KY6AXw+n8/n8/l8Pp/P54cVYBEREREREZFtigIsIiIiIiIiCrCIiIiIiIiIAiwiIiIiIiKiAIuIiIiIiIgowCIiIiIiIiIKsIiIiIiIiEiL/Avz2F0pDHmoOQAAAABJRU5ErkJggg==", 30, 16,16)
global.blueflaghurt = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAGAAAAAgCAYAAADtwH1UAAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAACCElEQVRo3u2asU4CQRCGZypLiBgSrKAhWJEYe4TK+BLEFgrfgXfgWuIbWKE2EHsLrExsvM6EhARKqrHazbA5zjPuzukxU3EU++/+38zs3gISEWjkF6gAigWAD4bii0G0+kT0L/QLB6BTq8Dz5yo3AD/V9wnAHQjzyL5+uwl3r+/iAFz9rFUQEoAoCESk6s2HfV5OGqKtyNU3c/hOXwKACIQkA7KacAgAgkPgLeD++BYAAI7q12IQXP2s2oUC0G834eH8CQAAtvHUQpACwPXdKjCA3Hn4ApB1EAy1+E6tAvVqxW6AkvsB1+fZz7XNfNxk8AGAUowOfjJKO32Ue5HV38yHQQBw/Xi5gkVrBJv5cCcBtvHUQtnGU1jPBsEBiFUB3/yWkwaUumNruPm8b/G+9c8eL+Dt6sXOg1cCnx9PBmkAQTLQGMD7Pn824dt8rs+11rMBlnsRua0oqQIlAQTtv4vWaOd7F0II8119U3VJCbCvBRaiAszrPw/TfiQqgOsn6abNwTcAzLAxB79/QURyjQhdAUbfbMpcn+9HvgGkXb5RHua7pxOJ42eafqk7tqaXexFJAhC5f/nLt5+mEtOqTwEE1kdECnUVoeZ70FcACkAB+Dj7i//6ZO5e8gDgU98HAM3+34zloQWJGwAAcHl6QnkB8Kmv/wvKORSAAlAA6oICUAAaCuAw4wvIpx7fnd0MDgAAAABJRU5ErkJggg==", 3, 16,16)
global.blueflagdead = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAADAAAAAMCAYAAAAkuj5RAAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAAApUlEQVRIx+2UMQ7DIAxFv6eubFk5C2OPkZEDMeYYHTkLazbWTu70KzeiUaSgqJXwiL75fsZGVBX/HDIABkBHABeS3vz9Q/AsDwBAzVF+GmCaiwLAuniZ5qLr4oXnPSBcSAoA2wbR50heS/sGoNCasPBW8dTXHIXwzPkG6kLSmqPwpfe0Nuz9W4jmDliYvWIsKHUWrNeYWK9DAGfH5Mp9Gd/oADgZLwVaeekf+OykAAAAAElFTkSuQmCC", 4, 6,6)
global.yellowflag = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAA8AAAAAgCAYAAADdehGEAAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAAE/ElEQVR42u3dMWocVxgH8FmiGygEkioGS60O4CIBF1Fl8AlEWvsKuUAOYFUOJldQlcaFjpBWNsidwLA3MKyL5UnfPmZGij3vm9n496/ktdBv3uzswv+9t7OrzWbTiYiIiIiIiPzfs1KARURERERERAH+r39stbr9Y5vNZpU+GD6fz+fz+Xw+n8/n87MK8C8/HnaXN+vZTgCfz+fz+Xw+n8/n8/lNC3Bp32cnx93f/16lzwLUfvYTsLTx8/l8Pp/P5/P5fD6/YQH+9M/uYwenXdqJqP1Me2z8c/jXF113dJ5/AfL5fD6fz+fz+Xz+kv2mBTizCA75WSV0SQV4Lv/di6579Czfrv3ri+1jmS/CJY2fz+fz+Xw+n8/nJxTgdy/u/l0OJGtGIC6B//HkaucYsgp49LMvhOj/9efVN1nAl+Rnz4Lx+Xw+n8/n8/n8+/1JC/DZyXH34eO6e/18vbMS9+hZ+zJS/FL+Mu0+vy5hpaC2Oo7i95Xv1nbfDEzxY1r7SyjA1xfzzIKZgODz+Xw+n8/n85MKcLn71s8/HN5+ADluR21dQvv8zM8DRz8W0GiX42lxHmo/Fv/W9tj4D063duvZoOK/fr6+HXvmC5DP5/P5fD6fz+fvh//VBXjo7sv1luhWBWjs7l/vX959L1SGX1a/j853C3hcFby+6LrHr6Y7jj6/XATRLfbU56LPrwvwwel2QmTKcT90/Jlb7/vGn7n1ns/n8/l8Pp/P5ycU4LjCWApoKZ+ti0jtl9J9dH73c6vyWftPfz/s3r5Z3x5HLJ/x+KYuoPVq95jdddMX8LGyX1aiWxbgvuc/60XY52e/AfD5fD6fz+fz+fwZCnBcYYxFpEXxHPNjAYtpWcCi9fjVdgKg3grdcgIgls2u212BricnWvt9nwVuuf156PlvOe77/KybAIyNP/sNiM/n8/l8Pp/PX7o/SQGO+69jASjJ/PxnPIZ4UloW8OKX4t9XwFuugBd/qPi3nAQo/uXNuqsvxOznv6+At1x9Ln799Uvl+vvut5zPP0Q/br/PegPi8/l8Pp/P5/P3xZ+sAF/ebAto/Nxvq9I15pdkHcdDxp9VQPvsuBqf4ddFsPU1UPtH59vH+1blsyZgyjlved0P+fH55vP5fD6fz+fz+Y0LcCyBWVtAiz90A66sAha/cqi+AViri2KoAJcV0LgK+f7latPSr8cdt2S3XgEemgBovRI75mdf/xk3nePz+Xw+n8/n8/fZ/6oCfF/5zLgDb+3H/ys/Z5SvIT+uBE5dQPvKd+YK/EMmH7JW/+vxl5XgzOc/+pmzX32TD3w+n8/n8/l8Pj+5ALc+CWMFNCP3+eVcZBfQ+DtzTEBkTD48dAJgzgKevfuh+HPMvvH5fD6fz+fz+fvgT16AYwGaY/vzkgpw+Z05VqCXMv5sv54AaHkdDm1/z7j2x94AMmbf+Hw+n8/n8/n8ffS/uAArX3z+Msv/HOWbz+fz+Xw+n8/fB18B5vP5fD6fz+fz+Xz+N+ErwHw+n8/n8/l8Pp/PV4DH8LOT4+7Dx/UsJ4DP5/P5fD6fz+fz+fy0Amz2gc/n8/l8Pp/P5/P5++R/8RboX3/6fjPXCeDz+Xw+n8/n8/l8Pj+tAIuIiIiIiIjsUxRgERERERERUYBFREREREREFGARERERERERBVhEREREREREARYRERERERFRgEVERERERERa5DPDUEQLoOOaVgAAAABJRU5ErkJggg==", 30, 16,16)
global.yellowflaghurt = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAAGAAAAAgCAYAAADtwH1UAAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAAB/ElEQVRo3u2asU4CQRCGZxLe4IwJVpoALQ9ggYkNlQlPQGy5V/AFfACoMMZXuMrGwkewFRLsTEzuDUzGguzdsDnOM87O6jFTcRT77/7fzOzeAhIRWMQLNADtAsAHQ/XFIBb6RPQv9FsHYNRN4Pk9jwbgp/qSAPyBMEb2TYcDeHh5VQfg6zetgpAAVEEgIn0+ls+dsW4r8vXdHL7T1wCgAqHKgKYmHAKA4BB4C7g537aAsys9CL5+U+1WAZgOB3B3uzV/k0EBQQsA1/erwAHy5yEFoOkgGGrxo24Cp8dJsQFq7gdcn2c/13bz8ZNBAgDVGB38ZFR3+lin5bm8vwgDgOu/feSwnOTQX+wmwCYr2+EmA+jNwwNQqwK++XXGAKtZabj7vG/x0vqX1wk83efFPHgl8PnxZNAGECQDnQG87/NnF9Lmc32u1ZsTrlMkvxVVVaAmgKD9dznJd773IYQw39d3VVeVAPtaYCsqwL3+83DtR6MCuH6Vbt0cpAFgg405+P0LIpJvROgKcPpuU+b6fD+SBlB3+UYxzPdPJxrHzzr91aw0fZ0iaQJQuX/5y7efrhLrqs8ABNZHRAp1FWHmC+gbAANgACTO/uq/Prm7lxgAJPUlAFj2/2YsgRakbgAAwMXJEcUCIKlv/wuKHAbAABgAc8EAGAALA3CY8QXxj//QzMgNnwAAAABJRU5ErkJggg==", 3, 16,16)
global.yellowflagdead = sprite_add_base64("iVBORw0KGgoAAAANSUhEUgAAADAAAAAMCAYAAAAkuj5RAAAACXBIWXMAAAsSAAALEgHS3X78AAAAG3RFWHRTb2Z0d2FyZQBDZWxzeXMgU3R1ZGlvIFRvb2zBp+F8AAAAnElEQVRIx+2UQQqFMAxEM3gSoXdx9y/S8/Qi7nqXgicp46JEolQRLOKHZtPNNJnXJAVJ+edAB+gADQGSB8ffXrDM5XSB+DRAjqCIyDAROYLDVAznCLaASL7kPz6Q1rlzr6bdAFRoi6jxmnnVu1CAbcfOQJMHXSC001daGzb/EaK6AxbmyowFVZ0FazUmttYtgKdj8ua+9G+0AzyMFTR1c+nI18WOAAAAAElFTkSuQmCC", 4, 6,6)
// }
// { lights
#define draw_dark
with instances_matching(enemy,"sprite_index",sprLaserCrystalFire){
	draw_set_alpha(1)
	draw_set_color($808080)
	draw_circle(x, y, 75+random(3), false)
	}
with instances_matching(CustomHitme,"name","elevator"){
	draw_set_alpha(1)
	draw_set_color($808080)
	draw_circle(x, y-8, 125+random(3), false)
	}
with instances_matching(CustomEnemy,"light",1){
	draw_set_alpha(1)
	draw_set_color($808080)
	draw_circle(x, y, 75+random(3), false)
	}
with instances_matching(CustomObject,"light",1){
	draw_set_alpha(1)
	draw_set_color($808080)
	draw_circle(x, y, 75+random(3), false)
	}
#define draw_dark_end
with instances_matching(enemy,"sprite_index",sprLaserCrystalFire){
	draw_set_alpha(1)
	draw_set_color(0)
	draw_circle(x, y, 25+random(3), false)
	}
with instances_matching(CustomHitme,"name","elevator"){
	draw_set_alpha(1)
	draw_set_color(0)
	draw_circle(x, y-8, 50+random(3), false)
	}
with instances_matching(CustomEnemy,"light",1){
	draw_set_alpha(1)
	draw_set_color(0)
	draw_circle(x, y, 25+random(3), false)
	}
with instances_matching(CustomObject,"light",1){
	draw_set_alpha(1)
	draw_set_color(0)
	draw_circle(x, y, 25+random(3), false)
	}
with instances_matching(CustomObject,"name","sewagefloor"){
	draw_set_alpha(1)
	draw_set_color(0)
	draw_circle(x+16, y+16, 25+random(3), false)
	}
with BigTV{
	draw_set_alpha(1)
	draw_set_color(0)
	draw_circle(x, y, 100+random(1), false)
	}
#define draw_shadows
	with instances_matching(GameObject,"shadow",1)
		draw_sprite_ext(sprite_index,image_index,x,y+6,image_xscale,-1,0,c_black,1)
	with instances_matching(GameObject,"shadow",2)
		draw_sprite(shd24,1,x,y)
	//with instances_matching(CustomObject,"name","mpammochest")
	//	draw_sprite_ext(shd24,0,x,y-1,1,1,0,c_black,1)
//}

#define step
	//{ step
//{ cow skull
with BigSkull{
	spr_idle = global.BigSkull
	spr_hurt = global.BigSkullHurt
	spr_dead = global.BigSkullDead
	}	//}
//{ man hole portals
with instances_matching(CustomObject,"name","pizzaentrance") if ("activated" not in self || activated !=1){
	var can = 0;
	with instances_matching(CustomEnemy,"name","scorpionboss")
		can = 1
	if can = 0 and image_index == 0 and place_meeting(x,y,Explosion){
		image_index = 1
		activated = 1
		fancylid_create(x,y)
		//music
		}

	}//}
//{ fancy manhole
with PizzaEntrance if image_index == 1 and "pinkyup" not in self{
	pinkyup = 1
	with Portal if place_meeting(x,y,other)
		instance_destroy()
	fancylid_create(x+16,y+16)
	}//}	
//{ spawn venuz car
with CarVenusFixed if GameCont.area == 3{
	mod_script_call("mod", "props", "VenuzCar_create", x, y+6,0)
	instance_delete(self)
	}//}
//{ cheap lights, creator being the big wall crystals
with instances_matching_ge(CrystalProp,"creator",0){
		if instance_exists(creator){
			x=creator.x
			y=creator.y-8
			}
		else
			instance_destroy()	
	}//}
//{ NecroReviveCorpses
with ReviveArea{
		with instances_matching(Corpse,"specialrevive","rogue") if place_meeting(x,y,other){
			if other.alarm0 < 5{
				mod_script_call("mod", "enemies", "enemyrogue_create", x, y)
				instance_destroy()
				}
			}
		with instances_matching(Corpse,"specialrevive","melting") if place_meeting(x,y,other){
			if other.alarm0 < 5{
				mod_script_call("mod", "enemies", "enemymelting_create", x, y)
				instance_destroy()
				}
			}
		with instances_matching(Corpse,"specialrevive","skeleton") if place_meeting(x,y,other){
			if other.alarm0 < 5{
				mod_script_call("mod", "enemies", "enemyskeleton_create", x, y)
				instance_destroy()
				}
			}
		with instances_matching(Corpse,"sprite_index",sprGruntDead,sprPopoFreakDead) if place_meeting(x,y,other){
			if other.alarm0 < 5{
				instance_create(x,y,PopoFreak)
				sound_play(sndFreakPopoRevive)
				instance_destroy()
				}
			}
		}//}	
//{ venuz elevator
with instances_matching(CustomObject,"name","VenuzElevator"){
	if instance_exists(Player) and point_distance(Player.x,Player.y,x+16,y+16)<12 with instance_nearest(x,y,Player){
		
		with Player{
			x= 0
			y= 0
			mod_script_call("mod","maincode","move_player_snap",index, x, y)
			}
		if GameCont.subarea = 3 and mod_variable_get("area", "venuz", "secrets") = 1{
			GameCont.subarea = 100
			mod_variable_set("area", "venuz", "secrets",0)
			}
		else
		if GameCont.subarea = 6 and mod_variable_get("area", "venuz", "secrets") = 1{
			GameCont.subarea = 200
			mod_variable_set("area", "venuz", "secrets",0)
			}
		else
		if GameCont.subarea = 9 and mod_variable_get("area", "venuz", "secrets") = 1{
			GameCont.subarea = 300
			mod_variable_set("area", "venuz", "secrets",0)
			}
		else
		if GameCont.subarea = 11 and mod_variable_get("area", "venuz", "secrets") = 1{
			GameCont.subarea = 400
			mod_variable_set("area", "venuz", "secrets",0)
			}
		else
		if GameCont.subarea = 100
			GameCont.subarea = 4
		else
		if GameCont.subarea = 200
			GameCont.subarea = 7
		else
		if GameCont.subarea = 300
			GameCont.subarea = 10
		else
		if GameCont.subarea = 401
			GameCont.subarea = 12
		else
			GameCont.subarea += 1
		GameCont.lastarea = "venuz"
		GameCont.area = "venuz"
		with WantBoss instance_delete(id)
		with instances_matching_ne(hitme,"object_index",Player,Ally)instance_delete(id)	
		with projectile instance_delete(id)	
		with instances_matching_ne(CustomObject,"name","VenuzElevator") instance_delete(id)
		with Detail instance_delete(id)
		with Debris instance_delete(id)
		with Scorch instance_delete(id)
		with Scorchmark instance_delete(id)
		with ScorchTop instance_delete(id)
		with CharredGround instance_delete(id)
		with instances_matching_ne(Effect,"secret",1) instance_delete(id)
		with Floor instance_delete(id)
		with Wall instance_delete(id)
		with InvisiWall instance_delete(id)
		with Top instance_delete(id)
		with TopSmall instance_delete(id)
		with prop instance_delete(id)
		with chestprop instance_delete(id)
		with Corpse instance_delete(id)
		with Pickup instance_delete(id)
		with YungCuz instance_delete(id)
		with VenuzCarpet instance_delete(id)
		//with BackCont instance_destroy()
		//with TopCont instance_destroy()
		
		mod_script_call("area", "venuz", "area_setup")
		mod_script_call("area", "venuz", "area_make_floor")
		//if GameCont.subarea = 1
		mod_script_call("area", "venuz", "area_start")
		with Floor{//dustold = random effect you shouldnt run into that i can compare aganst with position_meeting, for door floors to not spawn walls behind them. and alow me to spawn floors when the door opens
			if !position_meeting(x-16,y-16,Floor)and!position_meeting(x-16,y-16,DustOLD) instance_create(x-16,y-16,Wall)
			if !position_meeting(x,y-16,Floor)and!position_meeting(x,y-16,DustOLD) instance_create(x,y-16,Wall)
			if !position_meeting(x+16,y-16,Floor)and!position_meeting(x+16,y-16,DustOLD) instance_create(x+16,y-16,Wall)
			if !position_meeting(x+32,y-16,Floor)and!position_meeting(x+32,y-16,DustOLD) instance_create(x+32,y-16,Wall)
			if !position_meeting(x+32,y,Floor)and!position_meeting(x+32,y,DustOLD) instance_create(x+32,y,Wall)
			if !position_meeting(x+32,y+16,Floor)and!position_meeting(x+32,y+16,DustOLD) instance_create(x+32,y+16,Wall)
			if !position_meeting(x-16,y,Floor)and!position_meeting(x-16,y,DustOLD) instance_create(x-16,y,Wall)
			if !position_meeting(x-16,y+16,Floor)and!position_meeting(x-16,y+16,DustOLD) instance_create(x-16,y+16,Wall)
			if !position_meeting(x-16,y+32,Floor)and!position_meeting(x-16,y+32,DustOLD) instance_create(x-16,y+32,Wall)
			if !position_meeting(x,y+32,Floor)and!position_meeting(x,y+32,DustOLD) instance_create(x,y+32,Wall)
			if !position_meeting(x+16,y+32,Floor)and!position_meeting(x+16,y+32,DustOLD) instance_create(x+16,y+32,Wall)
			if !position_meeting(x+32,y+32,Floor)and!position_meeting(x+32,y+32,DustOLD) instance_create(x+32,y+32,Wall)
			}
		with Wall{
			if !position_meeting(x-16,y-16,Floor) and !position_meeting(x-16,y-16,Wall)and!position_meeting(x-16,y-16,DustOLD) instance_create(x-16,y-16,TopSmall)
			if !position_meeting(x,y-16,Floor) and !position_meeting(x,y-16,Wall)and!position_meeting(x,y-16,DustOLD) instance_create(x,y-16,TopSmall)
			if !position_meeting(x+16,y-16,Floor) and !position_meeting(x+16,y-16,Floor)and!position_meeting(x+16,y-16,DustOLD) instance_create(x+16,y-16,TopSmall)
			if !position_meeting(x+16,y+16,Floor) and !position_meeting(x+16,y+16,Floor)and !position_meeting(x+16,y+16,DustOLD) instance_create(x+16,y+16,TopSmall)
			if !position_meeting(x-16,y+16,Floor) and !position_meeting(x-16,y+16,Floor) and !position_meeting(x-16,y+16,DustOLD) instance_create(x-16,y+16,TopSmall)
			if !position_meeting(x,y+16,Floor) and !position_meeting(x,y+16,Floor) and !position_meeting(x,y+16,DustOLD) instance_create(x,y+16,TopSmall)
			if !position_meeting(x-16,y,Floor) and !position_meeting(x-16,y,Floor)and !position_meeting(x-16,y,DustOLD) instance_create(x-16,y,TopSmall)
			if !position_meeting(x+16,y,Floor) and !position_meeting(x+16,y,Floor)and !position_meeting(x+16,y,DustOLD) instance_create(x+16,y,TopSmall)
			}
		with instances_matching(CustomObject,"door",0){
			switch(name){
				case "floor":
					with 
					instance_create(x,y,Floor){
						repeat(4){
						
						with instance_nearest(x+16,y+16,InvisiWall) if place_meeting(x,y,other)
							instance_delete(id)
						with instance_nearest(x+16,y+16,FloorExplo) if place_meeting(x,y,other)
							instance_delete(id)
						with instance_nearest(x+16,y+16,Wall) if place_meeting(x,y,other)
							instance_delete(id)
						}
					}
					break;
				case "prisoner":
				mod_script_call("mod","enemies","prisoner_create",x,y);
				break;
			case "Molefish":
				mod_script_call("mod","enemies","Molefish_create",x,y);
				break;
			case "Molesarge":
				mod_script_call("mod","enemies","Molesarge_create",x,y);
				break;
			case "Minigunner":
				mod_script_call("mod","enemies","Minigunner_create",x,y);
				break;
			case "Jock":
			with instance_create(x,y,Jock){ raddrop = 0; my_health *=2; wepseed = -4}
				break;
			case "Charger":
			mod_script_call("mod","enemies","Monster_create",x,y);
				break;
			case "FireBaller":
			with instance_create(x,y,FireBaller){ raddrop = 0; my_health *=1.5; wepseed = -4}
				break;
			case "SuperFireBaller":
			with instance_create(x,y,SuperFireBaller){ raddrop = 0; my_health *=2; wepseed = -4}
				break;
			case "Turtle":
			mod_script_call("mod","enemies","Chick_create",x,y);
				break;
			case "HP":
				instance_create(x,y,HealthChest)
				break;
				}
				//trace("end of the rope")
			instance_destroy()
			}
		with Ally if creator != -4{
			x = creator.x
			y = creator.y
			}
		with Revive{
			x = other.x
			y = other.y
			canrevive = 1
			}
		if fork(){
		wait 1
		with instances_matching(CustomObject,"name","door") if "side" in self and side = 1{
			instance_create(x-16,y-16-16,Wall)
			instance_create(x,y-16-16,Wall)
			}
		exit;
		}
		instance_delete(other)
		}
	}//}
//{ venuz bullet effects
with instances_matching(Effect,"name","venuzpistoltrail"){
		if image_yscale > 0
			image_yscale *= 0.7
		else
			instance_destroy()
		} //}

//{ burn webs
with instances_matching(Floor,"sprite_index",sprFloor4B,sprFloor104B) if "fire" not in self and distance_to_object(projectile)<40{ 
		if place_meeting(x,y,Flame) || (place_meeting(x,y,CustomProjectile) and CustomProjectile.sprite_index = sprTrapFire)
			{
			fire = 1
			if fork(){
			repeat(2){
				with instance_create(x+random_range(-16,16)+16,y+random_range(-16,16)+16,Flame){
					motion_add(random(360),choose(0,0,1,2))
					team = 2
					damage = 3
					hitid = [sprTrapFire,"FIRE"]
					}
					wait 1
				}
				if instance_exists(self){
					styleb = 0
					traction = 0.4
					if sprite_index = sprFloor4B sprite_index = sprFloor4
					if sprite_index = sprFloor104B sprite_index = sprFloor104
					repeat(random(8))
						instance_create(x+random_range(-16,16)+16,y+random_range(-16,16)+16,GroundFlame)
					}
	
			}
			exit;
			}
		
		}
//}
	//}
//{ mpAmmoChest
#define mpAmmoChest_create(_x,_y)
with instance_create(_x,_y,CustomObject){
	name = "mpammochest"
	spr_idle = sprAmmoChest
	image_speed = 0
	shadow = 2
	on_step = script_ref_create(MpAmmoChest_step)
	on_destroy = script_ref_create(MpAmmoChest_destroy)
	return id;
	}
#define MpAmmoChest_step
sprite_index = spr_idle
if image_speed >0 and image_index >= 6{
	image_speed = 0
	image_index = 0
	}
if image_speed == 0 and random(50)<1
	image_speed = 0.4
if distance_to_object(Player)<16
	instance_destroy()
#define MpAmmoChest_destroy
var plin_ = 0
repeat instance_number(Player){
	MpAmmo_create(x,y,plin_)
	MpAmmo_create(x,y,plin_)
	plin_ += 1
	}
sound_play(sndAmmoChest)
with instance_create(x,y,ChestOpen){
	sprite_index = sprAmmoChestOpen
	}
instance_create(x,y,FXChestOpen)
//}
//{ mpAmmo
#define MpAmmo_create(_x, _y,_ind)
with instance_create(_x, _y, CustomProjectile){
	name = "mpammo"
	spr_idle = sprAmmo
	image_speed = 0
	on_step = script_ref_create(MpAmmo_step)
	on_wall = script_ref_create(MpAmmo_wall)
	team = 2
	index = _ind
	target = -1
	targetvisible = 0
	direction = choose(0,180,90,270)
	speed = 5
	return id;
	}
#define MpAmmo_step
sprite_index = spr_idle
if image_speed >0 and image_index >= 6{
	image_speed = 0
	image_index = 0
	}
if image_speed == 0 and random(50)<1
	image_speed = 0.4

with instances_matching(Player,"index",index)
	other.target = self

if(instance_exists(target) && collision_line(x,y,target.x,target.y,Wall,0,0) < 0)
	targetvisible = 1;
	else 
	targetvisible = 0;		
	
if targetvisible 
	motion_set(point_direction(x,y,target.x,target.y),5)
else if place_meeting(x+hspeed,y+vspeed,Wall)
	direction += random_range(80,100)
	
with instances_matching(Player,"index",index) if distance_to_object(other)<16{
	sound_play_pitch(sndAmmoPickup,0.8)
	if ammo[weapon_get_type(wep)] == 0{
		var melee_ = choose(1,2,3,4,5);
		ammo[weapon_get_type(melee_)] += typ_ammo[weapon_get_type(melee_)]
		if ammo[weapon_get_type(melee_)] > typ_amax[weapon_get_type(melee_)]
			ammo[weapon_get_type(melee_)] = typ_amax[weapon_get_type(melee_)]
		with instance_create(x,y,PopupText){
			with other{
				if melee_ = 1
				other.text = "+"+string(typ_ammo[melee_])+" BULLETS"
				else if melee_ = 2
				other.text = "+"+string(typ_ammo[melee_])+" SHELLS"
				else if melee_ = 3
				other.text = "+"+string(typ_ammo[melee_])+" BOLTS"
				else if melee_ = 4
				other.text = "+"+string(typ_ammo[melee_])+" EXPLOSIVES"
				else if melee_ = 5
				other.text = "+"+string(typ_ammo[melee_])+" ENERGY"
				}
			}
		}
	else{
		ammo[weapon_get_type(wep)] += typ_ammo[weapon_get_type(wep)]
		if ammo[weapon_get_type(wep)] > typ_amax[weapon_get_type(wep)]
			ammo[weapon_get_type(wep)] = typ_amax[weapon_get_type(wep)]
		with instance_create(x,y,PopupText){
			with other{
				if weapon_get_type(wep) = 1
				other.text = "+"+string(typ_ammo[weapon_get_type(wep)])+" BULLETS"
				else if weapon_get_type(wep) = 2
				other.text = "+"+string(typ_ammo[weapon_get_type(wep)])+" SHELLS"
				else if weapon_get_type(wep) = 3
				other.text = "+"+string(typ_ammo[weapon_get_type(wep)])+" BOLTS"
				else if weapon_get_type(wep) = 4
				other.text = "+"+string(typ_ammo[weapon_get_type(wep)])+" EXPLOSIVES"
				else if weapon_get_type(wep) = 5
				other.text = "+"+string(typ_ammo[weapon_get_type(wep)])+" ENERGY"
				}
			}
		}
	with other instance_destroy()
	}
#define MpAmmo_wall
move_bounce_solid(1)
//}

//{ Flagprop
#define flag_create(_x,_y)
with instance_create(_x,_y,CustomHitme){
	name = "flag"
	on_step = script_ref_create(flag_step)
	on_hurt = script_ref_create(flag_hurt)
	image_index = irandom(29)
	image_xscale = choose(-1,1)
	image_speed = 0.4
	friction = 30
	depth = 7
	my_health = 3
	spr_shadow = shd24
	if GameCont.area == 1{
		spr_idle = global.redflag
		spr_hurt = global.redflaghurt
		spr_dead = global.redflagdead
		}
	else if GameCont.area == 3{
		spr_idle = global.blueflag
		spr_hurt = global.blueflaghurt
		spr_dead = global.blueflagdead
		}
	else if GameCont.area == 4{
		spr_idle = global.yellowflag
		spr_hurt = global.yellowflaghurt
		spr_dead = global.yellowflagdead
		}
	return id;
	}
#define flag_step
if(nexthurt > current_frame){
	if(sprite_index != spr_hurt) {
		image_index = 0;
		sprite_index = spr_hurt;}
		}
	else{
		if(speed > friction) 
			sprite_index = spr_walk;
		else 
			sprite_index = spr_idle;
		}
if !place_meeting(x,y,Floor)
	instance_destroy()
else if place_meeting(x,y,Wall)
	instance_destroy()
#define flag_hurt(damage, kb_vel, kb_dir)
my_health -= damage;
if sprite_index != spr_hurt
	image_index = 0;
	sprite_index = spr_hurt;
if my_health <= 0{
	repeat(6)
	with instance_create(x,y,Feather){
		sprite_index = other.spr_dead
		image_index = irandom(6)-1
		image_speed = 0
		}
	with instance_create(x,y,Corpse){
		sprite_index = global.flagdead
		image_xscale = other.image_xscale
		friction = 30
		}
	instance_destroy()
	}
	//}
//{ Fishskull
#define fishskull_create(_x,_y)
with instance_create(_x, _y, CustomHitme){
	name = "fishskull"
	spr_idle = sprBigSkullOpen
	spr_hurt = sprBigSkullOpenHurt
	spr_dead = sprBigSkullDead
	snd_hurt = 349
	snd_dead = -1
	team = 1
	image_xscale = choose(1,1,-1)
	friction = 30
	my_health = 50
	depth = 0
	on_step = script_ref_create(fishskull_step)
	on_hurt = script_ref_create(fishskull_hurt)
	on_destroy = script_ref_create(fishskull_dead)
	}
#define fishskull_step
sprite_index = spr_idle;
if !place_meeting(x,y,Floor)||place_meeting(x,y,Wall){
	var fl_ = instance_nearest(x,y,Floor);
	x=fl_.x+16;
	y=fl_.y+16
	}
if instance_exists(Portal){
	spr_idle = sprBigSkull
	spr_hurt = sprBigSkullHurt
	if random(32)<1
		instance_create(x+random_range(-10,10),y+random_range(-10,10),Bubble)
	}
with hitme if place_meeting(x,y,other){
	motion_add(point_direction(other.x,other.y,x,y),0.5)
	}
#define fishskull_hurt	
if(sprite_index != spr_hurt){
	my_health -= argument0;
	image_index = 0;
	sprite_index = spr_hurt;
	}
if my_health <= 0{
	instance_destroy()
	}
#define fishskull_dead
if instance_exists(Portal){
	sound_stop_all()
	GameCont.area = 101;
	joao_shockwave(1,instance_nearest(x,y,Floor));
	}
else// if random(4)<1
	with instance_create(x,y,WepPickup)
		wep = 120
with instance_create(x,y,Corpse){
	sprite_index = other.spr_dead
	image_xscale = other.image_xscale
	speed = 0
	}
// }
//{ ClamMimic
#define ClamMimic_create(_x,_y)
with instance_create(x,y,CustomEnemy){
	alarm1 = 100
	alarm2 = 10
	friction = 300
	on_step = script_ref_create(ClamMimic_step)
	on_destroy = script_ref_create(ClamMimic_dead)
	spr_idle = global.ClamMimicIdle
	spr_fire = global.ClamMimicFire
	spr_tell = global.ClamMimicTell
	spr_hurt = global.ClamMimicHurt
	spr_dead = global.ClamMimicDead
	hitid = [global.ClamMimicFire,"MIMIC"]
	my_health = 12
	size = 1
	canmelee = 1
	meleedamage = 3
	team = 1
	sprite_index = spr_idle;
	return id;
	}
#define ClamMimic_step
if(nexthurt > current_frame){
	if(sprite_index != spr_hurt){
		image_index = 0;
		sound_play(sndMimicHurt);
		sprite_index = spr_hurt;}
	}
	else if sprite_index != spr_fire and sprite_index != spr_tell{
		sprite_index = spr_idle
		}
if sprite_index != spr_fire and alarm1 <= 0{
	alarm1 = random_range(100,300)
	sprite_index = spr_tell;
	sound_play(sndMimicSlurp)
	instance_create(x,y,Bubble)
	}
		
if sprite_index = spr_tell and image_index >= 14{
	alarm1 = random_range(300,600)
	sprite_index = spr_idle
	}

if sprite_index = spr_fire and image_index >= 3
	sprite_index = spr_idle
	
if alarm1 > 0
	alarm1 -= 1
if alarm2 > 0
	alarm2 -= 1
	
if place_meeting(x,y,Player) and alarm2 <= 0 and (sprite_index = spr_idle || sprite_index = spr_tell){
	sound_play(sndMimicMelee)
	sprite_index = spr_fire
	alarm1 = 100
	alarm2 = 30
	repeat 3
	instance_create(x,y,Bubble)
	}
#define ClamMimic_dead
sound_play(sndMimicDead)
repeat 2
	instance_create(x,y,AmmoPickup)
//}
//{ fancylid

#define fancylid_create(_x,_y)
with instance_create(_x,_y,CustomObject){
	name = "fancylid"
	on_step = script_ref_create(fancylid_step)
	on_draw = script_ref_create(fancylid_draw)
	friction = 0.1
	flip = 0
	starty = y+2
	shadow = starty-2
	right = choose(-1,1)
	depth = -10
	image_speed = 0
	turn = random_range(0,25)
	bounce = random(6)
	sound = 0
	motion_add(random_range(60,120),random_range(5,10))
	repeat(12){
	with instance_create(x,y,Dust)
		motion_add(random(360),random(6))
		}
	repeat(6){
	with instance_create(x,y,Dust)
		motion_add(other.direction,random(6))
		}
	instance_create(x,y,Portal)
	
	//instance_create(x,y,SmallExplosion)
	return id;
	}
#define fancylid_step
sprite_index = global.fancylid
if flip<1 and flip>=0
	image_index = 0
else if flip>1 and flip<2
	image_index = 1

image_yscale = flip-1
if speed>friction{
image_angle += turn
flip += min((speed/10),0.4)
flip = flip mod 2;

}
if y<starty{
depth = -10
shadow = starty-2
vspeed += 0.2
hspeed = right
}
else{
if place_meeting(x,y,Floor)
	depth = -1 
shadow = y
if bounce > 0{
	sound_play(sndFootMetRock2)
	speed = 0
	motion_add(random_range(75,115),random(3))
	bounce -= 1
	repeat(2){
		with instance_create(x,y,Dust){
			motion_add(random(360),random(2))
			depth = other.depth+0.1
			}
		}
	}
else if sound = 0{
	sound_play(sndFootMetRock3)
	sound = 1
	}
if flip<1 and flip>=0
	flip -= 0.1
else if flip>1 and flip<2
	flip += 0.1
}
if y>=starty-12{ 
	if place_meeting(x,y,projectile){
		right = random_range(-1,1)
		motion_add(90,projectile.force/3)
		bounce = random(6)
		sound = 0
		sound_play_pitch(sndGrenadeHitWall,random_range(0.8,1.2))
		repeat(2){
			with instance_create(x,y,Dust){
				motion_add(other.direction,random(6))
				depth = other.depth+0.1
				}
			}
		}
	if place_meeting(x,y,Explosion){
		right = random_range(-1,1)
		motion_add(90,random_range(5,10))
		bounce = random(6)
		sound = 0
		sound_play_pitch(sndGrenadeHitWall,random_range(0.8,1.2))
		repeat(2){
			with instance_create(x,y,Dust){
				motion_add(other.direction,random(6))
				depth = other.depth+0.1
				}
			}
		}
	}

#define fancylid_draw
draw_set_color(make_color_rgb(20,20,20));
	draw_sprite_ext(shd24, 1 , x, ystart, min((ystart-y)/100,1), min((ystart-y)/100,1), 1, c_white, 0.4);
draw_sprite_ext(sprite_index, image_index, x, y, 1, image_yscale, image_angle, c_white, 1);
draw_sprite_ext(sprite_index, image_index, x, y-1, 1, image_yscale+0.1, image_angle, c_white, 1);
//}

//{ VenuzCar
#define VenuzCar_create(_x, _y, _h)

// /gml mod_script_call("mod", "props", "VenuzCar_create", mouse_x, mouse_y,0)

with instance_create(_x, _y, CustomObject){
	name = "VenuzCar"
	if GameCont.area = 3 
		spr_idle = global.VenuzCar
		else
		spr_idle = choose(global.VenuzCar,global.VenuzCar2)
	direction = 180
	image_angle = 180
	mask_index = mskSnowTank
	hitid = [sprVenusCarFixed,"VENUZ CAR"]
	spr_shadow = shd32
	shd_y = 0
	friction = 0.01
	size = 1
	canfly = 1
	team = 0
	driver = -1
	portal = 200
	z = _h
	team = 2
	riders = 0
	bg_ = background_color
	rot = 0
	if z > 0
	rot = choose(1,-1)
	image_alpha = 0;
	on_step = script_ref_create(VenuzCar_step)
	
	pla_shd = shd24
	pla_msk = mskPlayer
	
	with script_bind_draw(VenuzCar_draw, -8) {
		zscale = 1
		creator = other
		image_angle = other.image_angle
		image_xscale = other.image_xscale
		image_yscale = other.image_yscale
		image_speed = other.image_speed
		sprite_index = global.VenuzCar
		}
	
	return id;
	}
#define VenuzCar_draw
if instance_exists(creator){
	if creator.portal < 175{
		draw_set_alpha(1-((creator.portal)/175));
		draw_set_color(0);
		draw_rectangle(view_xview-(game_width/2),view_yview-(game_height/2),view_xview+(game_width*2),view_yview+(game_height*2),0)
		draw_set_color(c_white);
		draw_set_alpha(1);
		}
	image_angle = creator.image_angle
	var i;
	var j = 0;
	var g = 0;
	
	d3d_set_fog(0, 0, 0, 0)
	j = 0
	g = 0
	//shadow
	var shad_scale;
	shad_scale = 1 - min(0.66 * (creator.z / 96),0.66)
	draw_set_color(make_color_rgb(20,20,20));
	draw_set_alpha(0.4);
	draw_ellipse(creator.x-2 + (12 * shad_scale), creator.y + (12 * shad_scale)+creator.shd_y, creator.x-2 - (12 * shad_scale), creator.y - (4 * shad_scale)+creator.shd_y, 0);
	draw_set_color(c_white);
	draw_set_alpha(1);
	
	for (i = 0; i <= 8; i++){ // outline
		repeat(zscale){draw_sprite_ext(global.VenuzCaroutline, clamp(i,0,7) , creator.x, creator.y - .5 *(i + j) - creator.z,image_xscale, image_yscale, image_angle, c_white, 1);
		j += 1;}
	}
	
	
	for (i = 0; i <= 8; i++){ //car
		repeat(zscale){draw_sprite_ext(creator.spr_idle, clamp(i,0,7) , creator.x, creator.y - .5 *(i + g) - creator.z ,image_xscale, image_yscale, image_angle, c_white, 1);
		g += 1;}
		
	
	}
}
else instance_destroy()

#define outsider_draw
	with creator{
	if outside == 1{
	draw_set_color(make_color_rgb(20,20,20));
	draw_sprite_ext(pla_shd, 1 , x, y + spr_shadow_y, image_xscale, image_yscale, 1, c_white, 0.4)
	}
	if bwep != 0{ 
		if race_id != 7
			draw_sprite_ext(weapon_get_sprt(bwep),0,x-right*2,y+4,1,bwepflip*right*-1,90+15*right,c_silver,1)
		else
			draw_sprite_ext(weapon_get_sprt(bwep),0,x,y,1,right*-1,gunangle+wepangle,c_white,1);
		}
	if gunangle < 180
	draw_sprite_ext(weapon_get_sprt(wep),0,x,y-z,1,right,gunangle+wepangle,c_white,1);
	draw_sprite_ext(sprite_index, image_index , x, y - z, right, image_yscale, angle, c_white, 1)
	if gunangle >= 180
	draw_sprite_ext(weapon_get_sprt(wep),0,x,y-z,1,right,gunangle+wepangle,c_white,1);
	}
	instance_destroy()
#define E
	with creator{
		draw_sprite(sprEPickup,0,x,y-7-z)

		draw_set_color(c_black)
		draw_text(x-31,y-30-z,string(name))
		draw_text(x+1-31,y-30-z,string(name))
		draw_text(x+1-31,y-31-z,string(name))
		draw_set_color(c_white)
		draw_text(x-31,y-31-z,string(name))
		}
instance_destroy()
#define VenuzCar_step
sprite_index = spr_idle
//image_angle = direction

if position_meeting(x,y+8,Wall) 
	shd_y = -8
else if position_meeting(x,y+8,Floor) 
	shd_y = 0

//if distance_to_object(Player)<16 and driver = -1
//{
//with script_bind_draw("E",-11)
//	creator = other
//}
if riders < instance_number(Player)
with instances_matching(Player,"rider",null,-1) if other.driver != index and distance_to_object(other)<16
{
with other
with script_bind_draw("E",-11)
	creator = other
}

if driver = -1{
with Player if button_pressed(index,"pick") and distance_to_object(other)<16 and other.driver = -1 and other.z < 17{ //get in
	outside = 0
	z=-1
	image_alpha = 0;
	other.depth = -10
	canwalk = 0;
	canfly = 1;
	other.friction = 0.04
	other.team = team
	if spr_shadow != mskNone{
	other.pla_msk = mask_index
	other.pla_shd = spr_shadow
	}
	mask_index = mskNone;
	spr_shadow = mskNone
	other.driver = index
	other.riders += 1
	}
}
else with Player if button_pressed(index,"pick"){
	
	if other.driver = index{ //bail out
			y = other.y+other.z-8
			other.driver = -1
			other.riders -= 1
			roll = 10
			canwalk = 1;
			canspec = 1;
			motion_add(other.image_angle+choose(-90,90),3)
			if other.image_angle < other.direction
				other.rot = 1
			else if other.image_angle > other.direction
				other.rot = -1
				
			if !position_meeting(x,y,Floor){
				z=16
				outside = 1
				image_alpha = -1
				pla_msk = other.pla_msk
				pla_shd = other.pla_shd
				mask_index = mskNone
				spr_shadow = mskNone
				spr_shadow_y -= 16
				}
			else{
				mask_index = other.pla_msk;
				spr_shadow = other.pla_shd
				image_alpha = 1;
				other.friction = 0.04
				canfly = 0;
				}
			}
	else if "rider" not in self || rider = -1{
		 if distance_to_object(other)<16{
			outside = 0
			z=-1
			image_alpha = 0;
			canwalk = 0;
			canfly = 1;
			mask_index = mskNone;
			spr_shadow = mskNone;
			if "rider" not in self
				rider = other
			other.riders += 1
			}
		}
	else if rider = other{
		y = other.y+other.z-8
			other.riders -= 1
			roll = 10
			canwalk = 1;
			canspec = 1;
			motion_add(other.image_angle+choose(-90,90),3)
				
			if !position_meeting(x,y,Floor){
				z=16
				outside = 1
				image_alpha = -1
				pla_msk = other.pla_msk
				pla_shd = other.pla_shd
				mask_index = mskNone
				spr_shadow = mskNone
				spr_shadow_y -= 16
				}
			else{
				mask_index = other.pla_msk;
				spr_shadow = other.pla_shd
				image_alpha = 1;
				canfly = 0;
				}
		}
	}
with instances_matching(Player,"rider",self){
	x = other.x+other.hspeed
	y = other.y+other.vspeed-z
	}
with instances_matching(Player,"outside",1){
	with script_bind_draw(outsider_draw,-10){
		creator = other
		}
	if position_meeting(x,y,Floor) and !position_meeting(x,y,Wall){
		outside = 0
		canwalk = 0
		spr_shadow_y += 16
		}
	}
//with Player trace(image_angle,roll,sprite_angle)
with instances_matching_ge(Player,"z",1) if outside == 0{
	z-=2
	if z < 10{
		mask_index = pla_msk
		}
	motion_set(direction,2)
	with script_bind_draw(outsider_draw,-2){
		creator = other
		}
	}
with instances_matching(Player,"z",0){
	z = -1
	image_alpha = 1
	mask_index = pla_msk
	spr_shadow = pla_shd
	canwalk = 1
	with instance_create(x,y,PortalClear){
		image_yscale = 0.1
		image_xscale = 0.1
		}
	}
//if speed < 0.1 and driver != -1 and z >= 14
//	z -= 1

if driver = -1{
	if z > 0{
		if place_meeting(x+hspeed,y+vspeed,Floor) and !place_meeting(x+hspeed,y+vspeed,Wall){
				z -= 0.3
				if speed > 0.3
				speed -= 0.3
				image_angle += ((z-16)/16)*rot
				}
			else if !place_meeting(x+hspeed,y+vspeed,Floor) || place_meeting(x+hspeed,y+vspeed,Wall) if z > 16{
				z-= 0.3
				if speed > 0.3
				speed  -= 0.3
				image_angle += ((z-16)/16)*rot
				}
		}
	else if speed > 1 and z > 16
		image_angle += speed/2
	}


if random(16)<1
	with instance_create(x+random_range(-16,16),y+random_range(-16,16)-z,CaveSparkle)
		depth = -11

if !place_meeting(x,y,Floor) and speed > 10{
	portal -= 1
	with instance_create(x+random_range(-16,16),y+random_range(-16,16)-z,CaveSparkle)
		depth = -11
	}
else if portal < 200{
	portal += 1
	
	z+=0.4
	}

if place_meeting(x+hspeed,y+vspeed,enemy) and speed > 2 and z < 16{
	var car = other;
	with instance_create(x+hspeed,y+vspeed,Bullet2){
		image_alpha = 0
		if other.speed > 5
			damage = 10
		else 
			damage = 0
		force = car.direction
		direction = car.direction
		speed = 0.1
		team = car.driver.team
		}
	}
if place_meeting(x+hspeed,y+vspeed,prop) and speed > 2 and z < 16{
	var car = other;
	with instance_create(x+hspeed,y+vspeed,Bullet2){
		image_alpha = 0
		if other.speed > 5
			damage = 10
		else 
			damage = 0
		force = car.direction
		direction = car.direction
		speed = 0.1
		team = car.driver.team
		}
	}
if place_meeting(x+hspeed,y+vspeed,Wall) and place_meeting(x,y,Floor) and z < 16{
	instance_create(x,y,PortalClear)
	if speed > 1 speed -= 0.1
	}
	
	
if driver != -1 with instances_matching(Player,"index",driver){
		x = other.x+other.hspeed
		y = other.y+other.vspeed-z
	with Portal if other.speed >= 5{
		x = other.x+other.hspeed
		y = other.y+other.vspeed
		}
	with other
		if button_check(driver,"nort"){
			motion_add(image_angle,0.2)
			if riders >= instance_number(Player)
				z += 0.2
			if button_check(driver,"west")
				image_angle += (speed/5)*4
				
			if button_check(driver,"east")
				image_angle -= (speed/5)*4
			}
	else{
			if z > 0 and speed < 5{
				if place_meeting(x+hspeed,y+vspeed,Floor) and !place_meeting(x+hspeed,y+vspeed,Wall)
					z -= 0.3
				else if !place_meeting(x+hspeed,y+vspeed,Floor) || place_meeting(x+hspeed,y+vspeed,Wall) if z > 16
					z-= 0.3
				}
			if button_check(driver,"west")
				image_angle += 2 + (speed/2)
			
			if button_check(driver,"east")
				image_angle -= 2 + (speed/2)
				
			if !button_check(driver,"west") and !button_check(driver,"east") and speed < 0.1{
				direction = image_angle
				}
			}

	with other{
		if button_check(driver,"sout"){
				direction=image_angle
				speed -= 0.1
				if z > 0.4{
					if place_meeting(x+hspeed,y+vspeed,Floor) and !place_meeting(x+hspeed,y+vspeed,Wall)
						z -= 0.4
					else if !place_meeting(x+hspeed,y+vspeed,Floor) || place_meeting(x+hspeed,y+vspeed,Wall) if z > 16
						z-= 0.4
					}
				//motion_add(image_angle+180,0.2)
		}
	}
}


with instances_matching_ne(projectile,"team",other.team) if other.z < 16 if place_meeting(x,y,other){
	if typ =1{
		sound_play(sndCrystalRicochet)
		team = other.team
		hitid=other.hitid
		direction = point_direction(other.x,other.y,x,y)
		image_angle = direction
		with instance_create(x,y,Deflect)
			image_angle = other.direction
		}
	else if typ = 2{
		sound_play(sndCrystalRicochet);
		instance_destroy()
		}
	}

//return to map if player is back in the map
if driver = -1
with instance_nearest(x,y,Player) if place_meeting(x,y,Floor)
	with other if !place_meeting(x,y,Floor){
	var _flo = instance_nearest(x+16,y+16,Floor);
	motion_add(point_direction(x,y,_flo.x,_flo.y),0.2)
	}
	
	
if portal <= 0 and driver > -1 and "go" not in self{
	go = 1
	
	with instances_matching(Player,"rider",self){
		mask_index = other.pla_msk;
		spr_shadow = other.pla_shd;
		spr_shadow_y = 0
		visible = 0
		outside = -1
		rider = -1
		}
	with instances_matching(Player,"index",driver){
		mask_index = other.pla_msk;
		spr_shadow = other.pla_shd;
		spr_shadow_y = 0
		visible = 0
		outside = -1
		background_color = c_black
		if GameCont.area != "venuz"
		with instance_create(x-8,y-8,CustomObject){
			sound_stop(sndCarLoop)
			name = "VenuzElevator"
			image_speed=0
			sprite_index = sprFloor103
			image_alpha = 0
			image_index = 1
			depth = 7
			activated = 1
			GameCont.area = "venuz"
			GameCont.subarea = 0
			with Portal instance_delete(id)
			}
		else with instance_create(x,y,BigPortal){
			endgame = 0
			sound_stop_all()
			image_alpha = 0
			GameCont.area = "junkyard"
			GameCont.subarea = 4
			}
		candie = 1
		other.driver = -1
		speed = 0
		}
	
	
	
	}
//}
//{ VenuzDoor
#define VenuzDoor_create(_x, _y,_door)
with instance_create(_x, _y, CustomObject){
	name = "door"
	team = 0
	side = 0
	ox = _x
	oy = _y
	if (GameCont.subarea <= 3 || GameCont.subarea = 100) //prison
		spr_idle = global.VenuzDoor
	else if ((GameCont.subarea <= 6 and GameCont.subarea > 3) || GameCont.subarea = 200) //sewers
		spr_idle = global.VenuzDoor2
	else if ((GameCont.subarea <= 9 and GameCont.subarea > 6)|| GameCont.subarea = 300) //barracks
		spr_idle = global.VenuzDoor3
	else if ((GameCont.subarea >= 10 and GameCont.subarea < 100)|| GameCont.subarea >= 400) //mansion
		spr_idle = global.VenuzDoor4
	open = 0
	if _door = "A"
		number = 1
	else if _door = "B"
		number = 2
	else if _door = "C"
		number = 3
	else if _door = "D"
		number = 4
	else if _door = "E"
		number = 5
	else if _door = "F"
		number = 6
	else if _door = "G"
		number = 7
	else if _door = "H"
		number = 8
	else if _door = "I"
		number = 9
	else if _door = "J"
		number = 10
	else if _door = "K"
		number = 11
	else number = 0
	shadow = 1
	depth = -1
	friction = 300
	my_health = 100
	on_step = script_ref_create(VenuzDoor_step)
	return id;
	}
#define VenuzDoorSide_create(_x, _y,_door)
with instance_create(_x, _y, CustomObject){
	name = "door"
	side = 1
	team = 0
	ox = _x
	oy = _y
	if (GameCont.subarea <= 3 || GameCont.subarea = 100) //prison
		spr_idle = global.VenuzDoorSide
	else if ((GameCont.subarea <= 6 and GameCont.subarea > 3) || GameCont.subarea = 200) //sewers
		spr_idle = global.VenuzDoor2Side
	else if ((GameCont.subarea <= 9 and GameCont.subarea > 6)|| GameCont.subarea = 300) //barracks
		spr_idle = global.VenuzDoor3Side
	else if ((GameCont.subarea >= 10 and GameCont.subarea < 100)|| GameCont.subarea >= 400) //mansion
		spr_idle = global.VenuzDoor4Side
	open = 0
	if _door = "A"
		number = 1
	else if _door = "B"
		number = 2
	else if _door = "C"
		number = 3
	else if _door = "D"
		number = 4
	else if _door = "E"
		number = 5
	else if _door = "F"
		number = 6
	else if _door = "G"
		number = 7
	else if _door = "H"
		number = 8
	else if _door = "I"
		number = 9
	else if _door = "J"
		number = 10
	else if _door = "K"
		number = 11
	else number = 0
	shadow = 1
	depth = -1
	friction = 300
	my_health = 100
	on_step = script_ref_create(VenuzDoor_step)
	if fork(){
	wait 2
	if instance_exists(Wall){
	with instance_create(x-16,y-16-16,Effect){ sprite_index = instance_nearest(x,y,Wall).sprite_index
		image_speed = 0
		}
	with instance_create(x,y-16-16,Effect){ sprite_index = instance_nearest(x,y,Wall).sprite_index
		image_speed = 0
		}
	}
	exit;
	}	
	return id;
	}
#define VenuzDoor_step
if open = 0{
	with instance_nearest(x,y,DustOLD) if distance_to_object(other)<63{
		x = other.x-16
		y = other.y-16
		}
	if !place_meeting(x,y,Floor)
	instance_create(x-16,y-16,Floor)
	with instance_nearest(x,y,InvisiWall) if place_meeting(x,y,other) instance_delete(id)
	}
sprite_index = spr_idle;
with instances_matching_gt(hitme,"speed",0) if place_meeting(x,y,other){
		//if object_index = Player
		//	speed = 0
		if other.side == 0{
			if y>other.y
				direction = 270
			else if y<other.y
				direction = 90
			}
		else{
			if x>other.x
				direction = 0
			else if x<other.x
				direction = 180
			}
		}
with Rocket if place_meeting(x+hspeed,y+vspeed,other){
	with instance_create(x,y,Explosion)
		mask_index = mskNone
	instance_delete(id)
	}
with projectile if place_meeting(x,y,other)
	instance_destroy()


	
if distance_to_object(Player) <= 16 and open == 0{
	open = choose(-1,1)
	with instances_matching(Effect,"name","secret"){
		if distance_to_object(other)<32{
			trace("my_dreams")
			instance_delete(id)
			}
		}
	with instances_matching(CustomObject,"door",number){
		switch(name){
			case "floor":
				with 
				instance_create(x,y,Floor){
						repeat(4){
						
						with instance_nearest(x+16,y+16,InvisiWall) if place_meeting(x,y,other)
							instance_delete(id)
						with instance_nearest(x+16,y+16,FloorExplo) if place_meeting(x,y,other)
							instance_delete(id)
						with instance_nearest(x+16,y+16,Wall) if place_meeting(x,y,other)
							instance_delete(id)
						}
					}
				break;
			case "prisoner":
				mod_script_call("mod","enemies","prisoner_create",x,y);
				break;
			case "Molefish":
				mod_script_call("mod","enemies","Molefish_create",x,y);
				break;
			case "Molesarge":
				mod_script_call("mod","enemies","Molesarge_create",x,y);
				break;
			case "Minigunner":
				mod_script_call("mod","enemies","Minigunner_create",x,y);
				break;
			case "Jock":
			with instance_create(x,y,Jock){ raddrop = 0; my_health *=2; wepseed = -4}
				break;
			case "Charger":
			mod_script_call("mod","enemies","Monster_create",x,y);
				break;
			case "FireBaller":
			with instance_create(x,y,FireBaller){ raddrop = 0; my_health *=1.5; wepseed = -4}
				break;
			case "SuperFireBaller":
			with instance_create(x,y,SuperFireBaller){ raddrop = 0; my_health *=2; wepseed = -4}
				break;
			case "Turtle":
			mod_script_call("mod","enemies","Chick_create",x,y);
				break;
			case "HP":
				instance_create(x,y,HealthChest)
				break;
			}
			//trace("end of the rope")
		instance_destroy()
		}
	with instance_create(ox-16,oy-16,Floor){
		door = 0
		new = 1
		with Wall if place_meeting(x,y,other)
			instance_delete(id)
		
		with InvisiWall if place_meeting(x,y,other)
			instance_delete(id)
		
		with FloorExplo if place_meeting(x,y,other)
			instance_delete(id)
		
		with DustOLD if place_meeting(x,y,other)
			instance_delete(id)
		
		}

	}
var spe_ = 3;
if open > 0 and open < 30{
	open += spe_
	sound_play_pitchvol(sndWallBreakLabs,1.3,0.5)
	if side == 0
		x+=spe_
	else
		y-=spe_
	}
else if open < 0 and open > -30{
	open -= spe_
	sound_play_pitchvol(sndWallBreakLabs,1.3,0.5)
	if side == 0
		x-=spe_
	else
		y-=spe_
	}
if (open > 16 || open < -16) and !instance_exists(SpiralCont){
	mask_index = mskNone
	}
if abs(open)>=30{
	sound_play_pitch(sndWallBreakLabs,1.1)
	with instance_create(x,y,Effect){
		sprite_index = other.spr_idle
		image_speed = 0
		depth = other.depth
		shadow = 1
		}
	instance_destroy()
	}
#define VenuzFloor_draw(color_)

//}
//{ VenuzAmmo1
#define VenuzAmmo1_create(_x, _y)
with instance_create(_x, _y, CustomObject){
	name = "ammo1"
	spr_idle = global.ammo1
	image_speed = 0
	on_step = script_ref_create(VenuzAmmo1_step)
	return id;
	}
#define VenuzAmmo1_step
sprite_index = spr_idle
if image_speed >0 and image_index >= 6{
	image_speed = 0
	image_index = 0
	}
if image_speed == 0 and random(50)<1
	image_speed = 0.4

with Player if distance_to_object(other)<16{
	ammo[1] += 25
	sound_play_pitch(sndAmmoPickup,0.8)
	with instance_create(x,y,PopupText)
		text = "+25 BULLETS"
	instance_create(x,y,ChestOpen)
	with other instance_destroy()
	}
//}
//{ VenuzAmmo2
#define VenuzAmmo2_create(_x, _y)
with instance_create(_x, _y, CustomObject){
	name = "ammo2"
	spr_idle = sprAmmo
	image_speed = 0
	on_step = script_ref_create(VenuzAmmo2_step)
	return id;
	}
#define VenuzAmmo2_step
sprite_index = spr_idle
if image_speed >0 and image_index >= 6{
	image_speed = 0
	image_index = 0
	}
if image_speed == 0 and random(50)<1
	image_speed = 0.4

with Player if distance_to_object(other)<16{
	ammo[2] += 10
	sound_play_pitch(sndAmmoPickup,0.8)
	with instance_create(x,y,PopupText)
		text = "+10 SHELLS"
	instance_create(x,y,ChestOpen)
	with other instance_destroy()
	}
//}
//{ VenuzAmmo3
#define VenuzAmmo3_create(_x, _y)
with instance_create(_x, _y, CustomObject){
	name = "ammo3"
	spr_idle = sprAmmoChest
	image_speed = 0
	on_step = script_ref_create(VenuzAmmo3_step)
	return id;
	}
#define VenuzAmmo3_step
sprite_index = spr_idle
if image_speed >0 and image_index >= 6{
	image_speed = 0
	image_index = 0
	}
if image_speed == 0 and random(50)<1
	image_speed = 0.4

with Player if distance_to_object(other)<16{
	ammo[4] += 6
	sound_play_pitch(sndAmmoPickup,0.8)
	with instance_create(x,y,PopupText)
		text = "+6 ROCKETS"
	instance_create(x,y,ChestOpen)
	with other instance_destroy()
	}
//}
//{ VenuzBars
#define VenuzBars_create(_x, _y)
with instance_create(_x, _y, CustomObject){
	name = "bar"
	side = 0
	if (GameCont.subarea <= 3 || GameCont.subarea = 100) //prison
		spr_idle = global.VenuzBars1
	else if ((GameCont.subarea <= 6 and GameCont.subarea > 3) || GameCont.subarea = 200) //sewers
		spr_idle = global.VenuzBars2
	else if ((GameCont.subarea <= 9 and GameCont.subarea > 6)|| GameCont.subarea = 300) //barracks
		spr_idle = global.VenuzBars3
	else if ((GameCont.subarea >= 10 and GameCont.subarea < 100)|| GameCont.subarea >= 400) //mansion
		spr_idle = global.VenuzBars4
	spr_shadow = mskNone
	shadow = 1
	depth = -1
	friction = 300
	on_step = script_ref_create(VenuzBars_step)
	return id;
	}
#define VenuzBarsSide_create(_x, _y)
with instance_create(_x, _y-8, CustomObject){
	name = "bar"
	side = 1
	if (GameCont.subarea <= 3 || GameCont.subarea = 100) //prison
		spr_idle = global.VenuzBars1Side
	else if ((GameCont.subarea <= 6 and GameCont.subarea > 3) || GameCont.subarea = 200) //sewers
		spr_idle = global.VenuzBars2Side
	else if ((GameCont.subarea <= 9 and GameCont.subarea > 6)|| GameCont.subarea = 300) //barracks
		spr_idle = global.VenuzBars1Side
	else if ((GameCont.subarea >= 10 and GameCont.subarea < 100)|| GameCont.subarea >= 400) //mansion
		spr_idle = global.VenuzBars4Side
	spr_shadow = mskNone
	shadow = 1
	depth = -1
	friction = 300
	on_step = script_ref_create(VenuzBars_step)
	return id;
	}
#define VenuzBars_step
sprite_index = spr_idle
with instances_matching_gt(hitme,"speed",0) if place_meeting(x+hspeed,y+vspeed,other){
		//if object_index = Player
		//	speed = 0
		if other.side == 0{
			if y>other.y
				direction = 270
			else if y<other.y
				direction = 90
			}
		else{
			if x>other.x
				direction = 0
			else if x<other.x
				direction = 180
			}
		speed*= 0.5
		}
with Corpse if place_meeting(x+hspeed,y+vspeed,other){
		//if object_index = Player
		//	speed = 0
		if other.side == 0{
			if y>other.y
				direction = 270
			else if y<other.y
				direction = 90
			}
		else{
			if x>other.x
				direction = 0
			else if x<other.x
				direction = 180
			}
		speed*= 0.5
		}
//}
//{ VenuzStar
#define VenuzStar_create(_x, _y)
with instance_create(_x, _y, CustomObject){
	name = "star"
	sprite_index = global.VenuzStar
	image_speed = 0
	spr_shadow = mskNone
	depth = -1
	friction = 300
	on_step = script_ref_create(VenuzStar_step)
	on_destroy = script_ref_create(VenuzStar_destroy)
	return id;
	}
#define VenuzStar_step
if place_meeting(x,y,Player)
instance_destroy()
#define VenuzStar_destroy
mod_variable_set("area", "venuz", "secrets",1)
instance_create(x,y,FXChestOpen)
for (var s=0; s<3; s++)
	with instance_create(x,y,CaveSparkle)
		motion_add(90+(s*120),4)
sound_play(sndGoldPickup)
//if GameCont.subarea = 3 trace("goodjob")
//else if GameCont.subarea = 5 trace("goodjob")
//else if GameCont.subarea = 8 trace("goodjob")
//else if GameCont.subarea = 11 trace("goodjob")
//}

//{ CaveDecals
#define CaveDecal
if !instance_exists(argument2){
	mod_script_call("mod", "enemies", "crystalshielder_create", argument0, argument1)
	}
instance_destroy()
//}
//{ iceblock
#define iceblock_create(_x,_y)
with instance_create(_x, _y, CustomObject){
	spr_idle = global.iceblock
	image_speed = 0
	image_alpha = 0.7
	image_index = choose(0,0,0,1,2)
	open = 100
	depth=(0)-(y/10016)
	with instance_create(x+8,y+8,PlasmaImpact){ // im sorry you spawned here crystal, goodbye forever
		team = 1
		damage = 3000
		}
	on_step = script_ref_create(iceblock_step)
	
if random(30)<1{
	with instance_create(x+8,y+8,WepPickup){
		var weplist = ds_list_create();
		weapon_get_list(weplist, 0, GameCont.hard );
		wep = (ds_list_find_value(weplist, irandom(ds_list_size(weplist) - 1)));
		ds_list_destroy(weplist);
		ammo = 1
		rotation = random(360)
		}
	}
	
	
	}
#define iceblock_step	
sprite_index = spr_idle

if open>0 if distance_to_object(projectile)<32 and (place_meeting(x,y,CustomProjectile) and CustomProjectile.sprite_index = sprTrapFire){
	open -= 2
	instance_create(other.x+random_range(-12,12),other.y+random_range(-12,12),Sweat)
	}

var h = instance_nearest(x,y,hitme);
if distance_to_object(h)< 64
with instances_matching_gt(hitme,"speed",0) if place_meeting(x+hspeed,y+vspeed,other){
		speed = 0
		direction += 180
		}
var n = instance_nearest(x,y,projectile);
if place_meeting(x,y,n) and n.object_index != (Flame||Laser||EnemyLaser)
	with n
	if sprite_index != sprTrapFire
		instance_destroy()
	else speed *= 0.9
	


if instance_exists(self) and open <= 0 and open != -100{
	instance_destroy()
	}

//}
//{ Cave
#define cave_create(_x,_y)
with instance_create(_x, _y, CustomObject){
	time = 125
	mask_index = mskPlayer
	var n = instance_nearest(x,y,Floor);
	direction = point_direction(n.x+16,n.y+16,x,y)
	friction = 0.4
	on_step = script_ref_create(cave_step)
	}
#define cave_step
if GameCont.subarea = 3
	direction = point_direction(HyperCrystal.x,HyperCrystal.y,x,y)
if time > 0 and instance_exists(Wall){
	if time >= 125
		motion_add(direction,10)
	time-=1
	with instance_create(x,y,PortalClear){
		image_xscale = 0.4
		image_yscale = 0.4
		}
	}
else{
	if GameCont.subarea < 3{
		var n = instance_nearest(x,y,Floor);
		whitecrystal_create(n.x,n.y)
		with FloorExplo{ 
			if distance_to_object(other)<72{
				sprite_index = sprFloor5B
				//make sprite for iceexplofloor
				traction = 0.5
				}
			if distance_to_object(other)<52{
				iceblock_create(x+8,y+8)
				}	
			}
		}
	else{
		with FloorExplo{ 
			if distance_to_object(other)<52{
				sprite_index = sprFloor105
				//make sprite for iceexplofloor
				}
			}
		var n = instance_nearest(x,y,Floor);
		Flower_create(x,y)
		instance_create(n.x+16,n.y+16,PortalClear)
		repeat(32) instance_create(x+random_range(-150,150),y+random_range(-150,150),LightBeam)
		
		}
	instance_destroy()
	}
//}
//{ WhiteCrystal
#define whitecrystal_create(_x,_y)
with instance_create(_x, _y, CustomObject){
	spr_idle = sprIcicle
	spr_hurt = sprIcicleHurt
	spr_dead = sprIcicleDead
	snd_dead = sndCrystalShield
	sprite_index = spr_idle
	spr_shadow = shd32
	my_health = 4000
	raddrop = 0
	depth = 0
	open = 50
	mask_index = mskPlayer
	on_step = script_ref_create(whitecrystal_step)
	}
#define whitecrystal_step
//trace(open)
sprite_index = spr_idle;
if open>0 if (place_meeting(x,y,Flame) || (place_meeting(x,y,CustomProjectile) and CustomProjectile.sprite_index = sprTrapFire)){
	open -= 1
	with instance_create(x,y,Flame) damage = 0
	instance_create(other.x+random_range(-12,12),other.y+random_range(-12,12),CaveSparkle)
	}
if open>0 if place_meeting(x,y,FlameShell){
	open -= 1
	with instance_create(x,y,Flame) damage = 0
	instance_create(other.x+random_range(-12,12),other.y+random_range(-12,12),CaveSparkle)
	}
if open <= 0 and open != -10000{
	instance_create(x,y,Portal)
	GameCont.area = "icecave"
	image_alpha = 0
	open = -10000
	}
with Player if other.open = -10000 and distance_to_object(Portal)<32
	GameCont.area = "cavesecret"
	
//}

//{ JungleFlower
#define Flower_create(_x,_y)
with instance_create(_x, _y, CustomHitme){
	name = "   feed"
	spr_idle = global.flower
	spr_hurt = sprIceFlowerHurt
	spr_dead = sprIceFlowerDead
	team = 1
	_z=y
	z=0
	zmax=y-1000
	driver = -1
	friction = 30
	maxhealth = 1500
	my_health = 1500
	depth = 0
	fed = 0
	pla_msk = 0
	on_step = script_ref_create(Flower_step)
	}
#define Flower_step
if(nexthurt > current_frame){
	if(sprite_index != spr_hurt) {
		image_index = 0;
		sprite_index = spr_hurt;
		}
	}
else 
	sprite_index = spr_idle;

if fed < 4{
	if sprite_index = spr_idle
		image_speed = 0
	else
		image_speed = 0.4
	with Player if distance_to_object(other)<16{
		with other
			with script_bind_draw("E",-11)
				creator = other	
		if button_pressed(index,"pick"){
			other.fed += 1
			my_health -= 1
			instance_create(x,y,BloodStreak)
			sound_play(snd_hurt)
			if other.fed>=4{
				other.depth = -11
				depth = -12
				with Portal instance_destroy()
				}
			}
		}
	}
else{

	//string code from yokin
	if("scarf" not in self || !instance_exists(scarf)){
		scarf = instance_create(x,y,CustomObject);
		right = image_xscale
		with(scarf){
			name = "FlowerScarf";
			creator = other;
			last_scarf = other;
			length = 20;
			offsetx = 0;
			}
		wait 2
		scarf2 = instance_create(x,y,CustomObject);
		with(scarf2){
			name = "FlowerScarf";
			creator = other;
			last_scarf = other;
			length = 15;
			offsetx = -5;
			}
		wait 4
		scarf3 = instance_create(x,y,CustomObject);
		with(scarf3){
			name = "FlowerScarf";
			creator = other;
			last_scarf = other;
			length = 15;
			offsetx = 5
			}
		}
	
	
	
	with instances_matching(CustomObject, "name", "FlowerScarf"){
		if(length >= 0 && instance_exists(last_scarf)){
			if(last_scarf = creator){
				targetx = creator.x - lengthdir_x(12 / image_xscale, (90 - (creator.right * 90)) + (sin(current_frame / length) * random_range(8,12)));
				targety = creator.y - lengthdir_y(12 / image_yscale, (90 - (creator.right * 90)) + (sin(current_frame / length) * random_range(8,12)));
			}
			else if(instance_exists(creator)){
				targetx = last_scarf.x + lengthdir_x(creator.speed - 2, last_scarf.image_angle);
				targety = last_scarf.y + lengthdir_y(creator.speed - 2, last_scarf.image_angle);
			}
	
			image_angle = point_direction(x, y, last_scarf.x, last_scarf.y);
			image_xscale = 1 + point_distance(x, y, last_scarf.x, last_scarf.y);
			image_yscale = 0.5;
	
			if(last_scarf = creator){
				x = targetx + offsetx;
				y = targety;
				motion_set(creator.direction, creator.speed);
			}
			else{
				if "targetx" in self
				motion_set(point_direction(x, y, targetx, targety), point_distance(x, y, targetx, targety) / 2);
			}
	
	
			with(creator){
				other.image_blend = make_color_rgb(64,37,28);
				if(distance_to_object(Portal) <= 0) with(other) if(visible){
					if(instance_exists(last_scarf) && !last_scarf.visible) motion_set(point_direction(x, y, other.x, other.y), 4);
					if(distance_to_object(Portal) <= 0) visible = 0;
				}
			}
	
			sprite_index = sprBoltTrail;
			depth = -11;
			image_yscale = 3
	
			// Grow:
			if(length > 0 && ("next_scarf" not in self || !instance_exists(next_scarf))){
				next_scarf = instance_create(x - lengthdir_x(1, last_scarf.image_angle), y - lengthdir_y(1, last_scarf.image_angle), CustomObject);
				with(next_scarf){
					name = "FlowerScarf";
					last_scarf = other;
					creator = other.creator;
					length = other.length - 1;
				}
			}
		}
	
		// Destroy Scarf:
		if(length < 0 || !instance_exists(last_scarf)){
			repeat(2) with instance_create(x,y,Feather){
				sprite_index = other.sprite_index;
				image_angle = other.image_angle;
				image_blend = other.image_blend;
				creator = other.creator;
			}
			instance_destroy();
		}
	}
	if random(7)<1
		instance_create(x+random_range(-200,200),y-64,LightBeam)
	if random(6)<1 
	with instance_create(view_xview+random(game_width*2)-game_width/2,view_yview+random(game_height*2)-game_height/2,SnowFlake){
		sprite_index = sprLeaf
		motion_add(270,6)
		}
	if random(4)<1
		with instance_create(x+random_range(-32,32),y,Feather){
			sprite_index = sprLeaf
			}
	with Portal{
		x = other.x
		y = other.y+other.vspeed
		}
	image_speed = 0.4
	if driver = -1 
	with instance_nearest(x,y,Player) {
		outside = 0
		_z=-1
		depth =-12
		other.depth = -11
		canwalk = 0;
		canfly = 1;
		other.team = team
		if mask_index != mskNone
			other.pla_msk = mask_index
		mask_index = mskNone;
		other.driver = index
		}
	with driver{
		x = other.x+other.hspeed
		y = other.y+other.vspeed-4
		if button_pressed(index,"west")
			motion_add(180,0.5)
		if button_pressed(index,"west")
			motion_add(0,0.5)
		}
	friction = 0
	motion_add(90,0.05)
	if y <= zmax{
		with instance_create(x,y,Portal){
			nompportal = 1
			image_alpha = 0
			GameCont.area = "jungleboogie"
			}
		zmax = y-100000
		skill_set(18,0)
		GameCont.skillpoints += 1
		TopCont.darkness = 0
		if(fork()){
			for(var j = 0; j <= 1; j += 0.01){
				var oldbg = background_color;
				if GameCont.area ="jungleboogie" {
					with instances_matching_gt(GameObject,"image_alpha",0)
						image_alpha -= 0.1
					background_color = merge_color(oldbg, c_white, j);
					}
				wait(4);
				}
			exit;
			}
		with instances_matching(Player,"index",driver){
			mask_index = other.pla_msk;
			wait 60
			image_alpha = 1;
			canwalk = 1;
			canspec = 1;
			canfly = 0;
			depth = -2;
			}
		}

	}

//}
//{ lookout
#define lookout_create(_x,_y)
with instance_create(_x, _y, CustomObject){
	name = "lookout"
	depth = 0
	image_speed = 0.4
	on_step = script_ref_create(lookout_step)
	with instance_create(x,y+8,CustomObject){
		name = " ENTER"
		depth = 0
		z = 0
		image_speed = 0.2
		on_step = script_ref_create(hole_step)
		}
	}
#define lookout_step
sprite_index = global.lookout
if image_index > 27
	instance_destroy()
#define hole_step
sprite_index = global.hole
if distance_to_object(Player)<16
	{
	with script_bind_draw("E",-11)
		creator = other
	}	
with Player if distance_to_object(other)<16{
		if button_pressed(index,"pick"){
			instance_create(x,y,Portal)
			wait 3
			GameCont.area = "yeti"
			}
		}
if image_index > 31 and instance_exists(self)
	instance_destroy()
//}
//{ leaving
#define leave_create(_x,_y)
with instance_create(_x, _y, CustomObject){
	name = " leave"
	if GameCont.area = "end"
		name = " light"
	mask_index = mskPlayer
	z = 0
	on_step = script_ref_create(leave_step)
	}
#define leave_step
	with Player if distance_to_object(other)<16{
	var me = other;
		with other
			with script_bind_draw("E",-11)
				creator = other	
		if button_pressed(index,"pick"){
			with instance_create(x,y,Portal){
				if GameCont.area = "end"{
					image_alpha = 0
					with Campfire spr_idle = sprCampfire
					with instance_create(me.x,me.y,GroundFlame)
						sprite_index = sprGroundFlameBig
					}
				}
			with other instance_destroy()
			}
		}
//}

//{ bigtube1
#define bigtube1_create(_x,_y)
with instance_create(_x, _y, CustomHitme){
	name = "bigtube1"
	spr_idle = global.bigtube
	spr_hurt = global.bigtubehurt
	spr_dead = global.bigtubedead
	snd_hurt = sndLabsTubeBreak
	snd_dead = sndLabsMutantTubeBreak
	team = -1
	image_xscale = choose(1,1,-1)
	friction = 30
	my_health = 20
	depth = -10
	on_step = script_ref_create(bigtube1_step)
	on_hurt = script_ref_create(bigtube_hurt)
	on_destroy = script_ref_create(bigtube1_dead)
	}
#define bigtube1_step
if(nexthurt > current_frame){
		if(sprite_index != spr_hurt) {
			image_index = 0;
			sprite_index = spr_hurt;}
		}
	else{
	sprite_index = spr_idle;
		}
with instance_nearest(x,y,hitme) if place_meeting(x,y+8,other){
	motion_add(point_direction(other.x,other.y+8,x,y),0.5)
	}
#define bigtube_hurt	
if(sprite_index != spr_hurt){
	my_health -= argument0;
	image_index = 0;
	sprite_index = spr_hurt;
	}
if my_health <= 0{
	instance_destroy()
	}
#define bigtube1_dead
mod_script_call("mod", "enemies", "enemysteroids_create", x, y)
repeat(30)
	with instance_create(x,y,Rad)
		motion_add(random(360),random(5))
with instance_create(x,y,Corpse){
	sprite_index = other.spr_dead
	speed = 0
	}
//}
//{ bigtube2
#define bigtube2_create(_x,_y)
with instance_create(_x, _y, CustomHitme){
	name = "bigtube2"
	spr_idle = global.bigtube2
	spr_hurt = global.bigtube2hurt
	spr_dead = global.bigtube2dead
	snd_hurt = sndLabsTubeBreak
	snd_dead = sndLabsMutantTubeBreak
	team = -1
	image_xscale = choose(1,1,-1)
	friction = 30
	my_health = 20
	depth = -10
	on_step = script_ref_create(bigtube1_step)
	on_hurt = script_ref_create(bigtube_hurt)
	on_destroy = script_ref_create(bigtube2_dead)
	}

#define bigtube2_dead
instance_create(x,y,PopoFreak)
repeat(30)
	with instance_create(x,y,Rad)
		motion_add(random(360),random(5))
with instance_create(x,y,Corpse){
	sprite_index = other.spr_dead
	speed = 0
	}
//}

//{ terminal
#define terminal_create(_x,_y)
with instance_create(_x, _y, CustomObject){
	name = " Palace"
	spr_idle = sprTerminal
	spr_hurt = sprTerminalHurt
	snd_hurt = sndHitWall
	mask_index = mskNone
	z = 0
	friction = 30
	my_health = 4000
	depth = 0
	on_step = script_ref_create(terminal_step)
	}
#define terminal_step
sprite_index = spr_idle
with Player if distance_to_object(other)<16{
		var cpu = other;
		with other
			with script_bind_draw("E",-11)
				creator = other	
		if button_pressed(index,"pick"){
			if instance_exists(BigTV){
				sound_play(sndClick)
				with BigTV{
					if spr_idle == spr_tv1{
						spr_idle = spr_tv2;
						cpu.name = "   HQ"
						if (mod_variable_exists("area","elevator","nextarea") and mod_variable_get("area","elevator","nextarea") == 1)
							mod_variable_set("area","elevator","nextarea",0)
						}
					else if spr_idle == spr_tv2{
						spr_idle = spr_tv1;
						cpu.name = " Palace"
						if (mod_variable_exists("area","elevator","nextarea") and mod_variable_get("area","elevator","nextarea") == 0)
							mod_variable_set("area","elevator","nextarea",1)
						}
					}
				}
			else sound_play(sndComputerBreak)
			}
		}
if !instance_exists(BigTV)
	instance_destroy()
//}
//{ elevator
#define elevator_create(_x,_y)
with instance_create(_x, _y, CustomHitme){
	name = "elevator"
	spr_idle = global.elevator
	spr_hurt = global.elevator
	snd_hurt = sndHitWall
	friction = 30
	my_health = 4000
	depth = 0
	on_step = script_ref_create(elevator_step)
	on_hurt = script_ref_create(elevator_hurt)
	}
#define elevator_step
sprite_index = spr_idle;
with instance_nearest(x,y,hitme) if place_meeting(x+hspeed,y+vspeed,other){
	move_contact_solid(point_direction(other.x,other.y+8,x,y),3)
	}
if instance_number(enemy) == 1 and !instance_exists(Portal){
	wait 40
	if instance_exists(self) and !instance_exists(Portal)
	with instance_create(x,y-16,Portal){
		type = 3
		image_yscale = -1
		}
	}
//with Portal if instance_number(enemy) > 1
//	instance_destroy()
#define elevator_hurt	
if(sprite_index != spr_hurt){
	image_index = 0;
	sprite_index = spr_hurt;
	}

//}

// { joao_shockwave
#define joao_shockwave
//ohgod, joao variables
if(fork()){
	var garea = argument0;
	
	switch(garea){ 
		case 1: 
			global.oldbg = $6A8FAF; //desert
			global.newbg = $C8D151;//oasis
			var oldA = sprFloor1;
			var oldB = sprFloor1B;
			var oldE = sprFloor1Explo;
			var oldWB = sprWall1Bot;
			var newA = sprFloor101;
			var newB = sprFloor101B;
			var newE = sprFloor101Explo;
			var newWB = sprWall101Bot;
			var newD = sprDetail101;
			break;
		case 104:
			global.oldbg = $239CFF; 
			global.newbg = $BC5281;
			var oldA = sprFloor104;
			var oldB = sprFloor104B;
			var oldE = sprFloor104Explo;
			var oldWB = sprWall104Bot;
			var newA = sprFloor4;
			var newB = sprFloor4B;
			var newE = sprFloor4Explo;
			var newWB = sprWall4Bot;
			var newD = sprDetail4;
			break;
		}
	
	var _target = argument1
	
	if(fork()){
		for(var j = 0; j <= 1; j += 0.03){
			background_color = merge_color(global.oldbg, global.newbg, j);
			wait(1);
			}
		exit;
		}
	
	if instance_exists(GenCont) exit;
	with instance_nearest(x,y,Floor) sprite_index = newA
	with(Floor) if instance_exists(other)
			if point_in_rectangle(x,y,view_xview[0]-32,view_yview[0]-32,view_xview[0]+game_width+32,view_yview[0]+game_height+32){
				if(sprite_index == oldA||sprite_index == oldB||sprite_index == oldE) //*redoing all the floor code
					if(fork()){
						wait(distance_to_object(_target)/8);
						if instance_exists(self){
						with(instance_create(x, y, CustomObject)){
							if other.sprite_index == oldA
								sprite_index = newA;
							else if other.sprite_index == oldB
								sprite_index = newB;
							else if other.sprite_index == oldE
								sprite_index = newE;
							realboy = other
							image_index = other.image_index;
							image_speed = 0;
							image_alpha = 0;
							depth = other.depth-1;
							on_step = script_ref_create(fadefloor)
							}
							}
						exit;
						}
					}
				else{
					if(sprite_index == oldA)
						sprite_index = newA;
					else if(sprite_index == oldB)
						sprite_index = newB;
					else if(sprite_index == oldE)
						sprite_index = newE;
					else if(sprite_index != newA||sprite_index != newB||sprite_index != newE)
						sprite_index = newA;
					}
	with(Wall) if instance_exists(other){
		if(fork()){
			while(!instance_exists(_target))
				wait(1);
			if(instance_exists(self)){
				var _x = x;
				var _y = y;
				var area = GameCont.area;
				var subarea = GameCont.subarea;
				_dist = distance_to_object(_target);
				while(instance_exists(self) && _dist > 0){
					_dist -= 8;
					wait(1);
					}
				if instance_exists(self) instance_destroy();
				if(area == GameCont.area
				&& subarea == GameCont.subarea)
				instance_create(_x, _y, Wall);
				}
			exit;
			}
		}
	with(TopSmall) if instance_exists(other){
		if(fork()){
			while(!instance_exists(_target))
				wait(1);
			if(instance_exists(self)){
				var _x = x;
				var _y = y;
				var area = GameCont.area;
				var subarea = GameCont.subarea;
				_dist = distance_to_object(_target);
				while(instance_exists(self)
				&& _dist > 0){
					_dist -= 8;
					wait(1);
					}
				if (area == GameCont.area
				&& subarea == GameCont.subarea)
				instance_create(_x, _y, TopSmall);
				
				if instance_exists(self) instance_destroy();
				}
			exit;
			}
		}
	with instances_matching(Bones,"sprite_index",sprBones) if instance_exists(other){
		if(fork()){
			while(!instance_exists(_target))
				wait(1);
			if(instance_exists(self)){
				_dist = distance_to_object(_target);
				while(instance_exists(self)
				&& _dist > 0){
					_dist -= 8;
					wait(1);
					}
				if instance_exists(self) instance_destroy();
				}
			exit;
			}
		}
	with(TopDecalDesert) if instance_exists(other){
		if(fork()){
			while(!instance_exists(_target))
				wait(1);
			if(instance_exists(self)){
				_dist = distance_to_object(_target);
				while(instance_exists(self)
				&& _dist > 0){
					_dist -= 8;
					wait(1);
					}
				if instance_exists(self) instance_destroy();
				}
			exit;
			}
		}
	with(Cactus) if instance_exists(other){
		if(fork()){
			while(!instance_exists(_target))
				wait(1);
			if(instance_exists(self)){
				_dist = distance_to_object(_target);
				while(instance_exists(self)
				&& _dist > 0){
					_dist -= 8;
					wait(1);
					}
				if instance_exists(self){
				if sprite_index = sprCactus
					spr_idle = global.cactusbloom1
				if sprite_index = sprCactus2
					spr_idle = global.cactusbloom2
				if sprite_index = sprCactus3
					spr_idle = global.cactusbloom3
				}
				}
			exit;
			}
		}
	with(Detail) if instance_exists(other)
			if point_in_rectangle(x,y,view_xview[0]-32,view_yview[0]-32,view_xview[0]+game_width+32,view_yview[0]+game_height+32){
				if sprite_index != newD
					if(fork()){
						wait(distance_to_object(_target)/8);
						if instance_exists(self) sprite_index = newD
						exit;
						}
					}
				else
					sprite_index = newD
	with instances_matching(Corpse,"sprite_index",sprBanditDead) if instance_exists(other){
			if point_in_rectangle(x,y,view_xview[0]-32,view_yview[0]-32,view_xview[0]+game_width+32,view_yview[0]+game_height+32){
					if(fork()){
						wait((distance_to_object(_target)/8)+6);
						if instance_exists(self) {
							instance_create(x,y,BonePile)
							instance_delete(self)
							}
						exit;
						}
					}
				else{
					instance_create(x,y,BonePile)
					instance_delete(self)
					}
				}
	
	if garea = 104{
		GameCont.area = "caves"
		with(WeaponChest) if instance_exists(other)
			if point_in_rectangle(x,y,view_xview[0]-32,view_yview[0]-32,view_xview[0]+game_width+32,view_yview[0]+game_height+32){
				if curse != 0
					if(fork()){
						wait(distance_to_object(_target)/8);
						if instance_exists(self) {
							curse = 0;
							sprite_index = sprWeaponChest;
							}
						exit;
						}
					}
				else{
					curse = 0;
					sprite_index = sprWeaponChest;
					}
		with(BigCursedChest) if instance_exists(other)
			if point_in_rectangle(x,y,view_xview[0]-32,view_yview[0]-32,view_xview[0]+game_width+32,view_yview[0]+game_height+32){
				if curse != 0
					if(fork()){
						wait(distance_to_object(_target)/8);
						if instance_exists(self) {
							instance_create(x,y,BigWeaponChest)
							instance_destroy();
							
							}
						exit;
						}
					}
				else{
					instance_create(x,y,BigWeaponChest)
					instance_destroy();
					}
		with(Wall) if instance_exists(other){
		if(fork()){
			while(!instance_exists(_target))
				wait(1);
			if(instance_exists(self)){
				var _x = x;
				var _y = y;
				var area = GameCont.area;
				var subarea = GameCont.subarea;
				_dist = distance_to_object(_target);
				while(instance_exists(self) && _dist > 0){
					_dist -= 8;
					wait(1);
					}
				if instance_exists(self) instance_destroy();
				instance_create(_x, _y, Wall);
				}
			exit;
			}
		}
		with(Player) if instance_exists(other){
			if(fork()){
				wait(distance_to_object(_target)/8);
				if instance_exists(self) {
					curse = 0;
					bcurse = 0;	
					if race == "crystal" and bskin == 0
						bskin = 1
					}
				}
			}
		with instances_matching(Corpse,"sprite_index",sprMutant2Dead) if instance_exists(other)
			if point_in_rectangle(x,y,view_xview[0]-32,view_yview[0]-32,view_xview[0]+game_width+32,view_yview[0]+game_height+32){
					if(fork()){
						wait(distance_to_object(_target)/8);
						if instance_exists(self) sprite_index = sprMutant2BDead
						exit;
						}
					}
				else{
					sprite_index = sprMutant2BDead
					}
		with(WepPickup) if instance_exists(other)
			if point_in_rectangle(x,y,view_xview[0]-32,view_yview[0]-32,view_xview[0]+game_width+32,view_yview[0]+game_height+32){
				if curse != 0
					if(fork()){
						wait(distance_to_object(_target)/8);
						if instance_exists(self) curse = 0;
						exit;
						}
					}
				else{
					curse = 0;
					}
		with(InvLaserCrystal) if instance_exists(other){
			if point_in_rectangle(x,y,view_xview[0]-32,view_yview[0]-32,view_xview[0]+game_width+32,view_yview[0]+game_height+32){
					if(fork()){
						wait(distance_to_object(_target)/8);
						if instance_exists(self) with instance_create(x,y,LaserCrystal)
							my_health = other.my_health
						if instance_exists(self){ instance_change(CaveSparkle,1)
						instance_destroy()
						}
						exit;
						}
					}
				else{
					with instance_create(x,y,LaserCrystal)
						my_health = other.my_health
					instance_change(CaveSparkle,1)
					instance_destroy()
					}
				}
		with(InvSpider) if instance_exists(other){
			if point_in_rectangle(x,y,view_xview[0]-32,view_yview[0]-32,view_xview[0]+game_width+32,view_yview[0]+game_height+32){
					if(fork()){
						wait(distance_to_object(_target)/8);
						if instance_exists(self) instance_change(Spider,1)
						exit;
						}
					}
				else{
					instance_change(Spider,1)
					}
				}
		with instances_matching(Corpse,"sprite_index",sprInvSpiderDead) if instance_exists(other)
			if point_in_rectangle(x,y,view_xview[0]-32,view_yview[0]-32,view_xview[0]+game_width+32,view_yview[0]+game_height+32){
					if(fork()){
						wait(distance_to_object(_target)/8);
						if instance_exists(self) sprite_index = sprSpiderDead
						exit;
						}
					}
				else{
					sprite_index = sprSpiderDead
					}		
		with(AmmoPickup) if instance_exists(other)
			if point_in_rectangle(x,y,view_xview[0]-32,view_yview[0]-32,view_xview[0]+game_width+32,view_yview[0]+game_height+32){
				if cursed != 0
					if(fork()){
						wait(distance_to_object(_target)/8);
						if instance_exists(self){
							cursed = 0;
							sprite_index = sprAmmo;
							}
						exit;
						}
					}
				else{
					cursed = 0;
					sprite_index = sprAmmo;
					}
		with(Curse) if instance_exists(other)
			if point_in_rectangle(x,y,view_xview[0]-32,view_yview[0]-32,view_xview[0]+game_width+32,view_yview[0]+game_height+32){
					if(fork()){
						wait(distance_to_object(_target)/8);
						if instance_exists(self)
						sprite_index = sprCaveSparkle
						exit;
						}
					}
				else
					sprite_index = sprCaveSparkle
		with(Bones) if instance_exists(other)
			if point_in_rectangle(x,y,view_xview[0]-32,view_yview[0]-32,view_xview[0]+game_width+32,view_yview[0]+game_height+32){
					if(fork()){
						wait(distance_to_object(_target)/8);
						if instance_exists(self)
						sprite_index = sprCaveDecal
						exit;
						}
					}
				else
					sprite_index = sprCaveDecal
		with(TopDecalInvCave) if instance_exists(other)
			if point_in_rectangle(x,y,view_xview[0]-32,view_yview[0]-32,view_xview[0]+game_width+32,view_yview[0]+game_height+32){
					if(fork()){
						wait(distance_to_object(_target)/8);
						if instance_exists(self)
						sprite_index = sprTopDecalCave
						exit;
						}
					}
				else
					sprite_index = sprTopDecalCave
		}
	exit;
	}
#define fadefloor
if image_alpha < 1
	image_alpha += 0.1;
else{
	with(realboy){
		image_alpha = 1;
		sprite_index = other.sprite_index;
		}
	instance_destroy();
	}

//}
